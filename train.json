[
    {
        "db_id": "perpetrator",
        "question": "what is the normal distribution for the Killed",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "Killed"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "calculate the normal distribution for the Velocity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "Velocity"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "show me the normal distribution for the Total",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "Total"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "find normal distribution for Rank",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "Rank"
        ]
    },
    {
        "db_id": "academic",
        "question": "calculate the normal distribution for the cited",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            14,
            [
                [
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "cited"
        ]
    },
    {
        "db_id": "music_4",
        "question": "what is the normal distribution for Weeks_on_Top",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "Weeks_on_Top"
        ]
    },
    {
        "db_id": "cinema",
        "question": "find normal distribution for Capacity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "Capacity"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "find normal distribution for the Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "the",
            "Price"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "calculate the normal distribution for the charge_amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "charge_amount"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "what is the normal distribution for Profits_in_Billion",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "company",
            "columns": [
                [
                    "Profits_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "Profits_in_Billion"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "find normal distribution for the Product_Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "the",
            "Product_Price"
        ]
    },
    {
        "db_id": "swimming",
        "question": "show me the normal distribution for Capacity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "Capacity"
        ]
    },
    {
        "db_id": "election",
        "question": "what is the normal distribution for Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "party",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "Year"
        ]
    },
    {
        "db_id": "debate",
        "question": "show me the normal distribution for the Negative",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Negative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "Negative"
        ]
    },
    {
        "db_id": "climbing",
        "question": "find normal distribution for Height",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "Height"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "calculate the standardized normal distribution for Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show me the standardized normal distribution for Velocity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Velocity"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "find standardized normal distribution for the Snatch",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Snatch"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "show me the standardized normal distribution for Join_Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Join_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "show me the standardized normal distribution for the reference_num",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "reference_num"
        ]
    },
    {
        "db_id": "music_4",
        "question": "show me the standardized normal distribution for Volume",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Volume"
        ]
    },
    {
        "db_id": "cinema",
        "question": "calculate the standardized normal distribution for the Number_in_season",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "film",
            "columns": [
                [
                    "Number_in_season"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Number_in_season"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "what is the standardized normal distribution for Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Price"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "what is the standardized normal distribution for the cost_of_treatment",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "what is the standardized normal distribution for the Age",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Age"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "what is the standardized normal distribution for the Product_Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Product_Price"
        ]
    },
    {
        "db_id": "swimming",
        "question": "find standardized normal distribution for the Opening_year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Opening_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Opening_year"
        ]
    },
    {
        "db_id": "election",
        "question": "what is the standardized normal distribution for the Party",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "election",
            "columns": [
                [
                    "Party"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Party"
        ]
    },
    {
        "db_id": "debate",
        "question": "calculate the standardized normal distribution for Negative",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Negative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Negative"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the standardized normal distribution for Height",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Height"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "what is the long tailed distribution for the Weight",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Weight"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show me the long tailed distribution for Altitude",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "Altitude"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "show me the long tailed distribution for the Height",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Height"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "what is the long tailed distribution for the Order_Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Order_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "calculate the long tailed distribution for year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "year"
        ]
    },
    {
        "db_id": "music_4",
        "question": "calculate the long tailed distribution for Weeks_on_Top",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "Weeks_on_Top"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show me the long tailed distribution for the Openning_year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Openning_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Openning_year"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "what is the long tailed distribution for the Num_of_employees",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "market",
            "columns": [
                [
                    "Num_of_employees"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Num_of_employees"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "calculate the long tailed distribution for cost_of_treatment",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "what is the long tailed distribution for the Profits_in_Billion",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "company",
            "columns": [
                [
                    "Profits_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Profits_in_Billion"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "show me the long tailed distribution for the Product_Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Product_Price"
        ]
    },
    {
        "db_id": "swimming",
        "question": "calculate the long tailed distribution for the meter_100",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "meter_100"
        ]
    },
    {
        "db_id": "election",
        "question": "calculate the long tailed distribution for the Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "party",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Year"
        ]
    },
    {
        "db_id": "debate",
        "question": "show me the long tailed distribution for the Affirmative",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Affirmative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Affirmative"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the long tailed distribution for the Height",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Height"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "calculate the student t distribution for Year with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Year",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show me the student t distribution for the Altitude with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Altitude",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "find student t distribution for the Total with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Total",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "calculate the student t distribution for the Rank with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Rank",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "academic",
        "question": "find student t distribution for the reference_num where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "reference_num",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "music_4",
        "question": "what is the student t distribution for Weeks_on_Top with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Weeks_on_Top",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "what is the student t distribution for the Settlement_Amount where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Settlement_Amount",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "cinema",
        "question": "find student t distribution for Price with degree of freedom of 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "schedule",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "Price",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "3"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "show me the student t distribution for the Rank_in_Round with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Rank_in_Round",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show me the student t distribution for the Price where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Price",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "store_product",
        "question": "calculate the student t distribution for the Area_size where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "store",
            "columns": [
                [
                    "Area_size"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Area_size",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "find student t distribution for the cost_of_treatment where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "cost_of_treatment",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "music_1",
        "question": "what is the student t distribution for rating where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "rating",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "show me the student t distribution for Age with df equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Age",
            "with",
            "df",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "farm",
        "question": "calculate the student t distribution for Pigs with degree of freedom of 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "farm",
            "columns": [
                [
                    "Pigs"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            1,
            [
                [
                    15
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Pigs",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "1"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "find student t distribution for Product_Price with df equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "Product_Price",
            "with",
            "df",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "city_record",
        "question": "calculate the student t distribution for Jan with df equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Jan"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    14
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Jan",
            "with",
            "df",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "swimming",
        "question": "find student t distribution for meter_100 with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "meter_100",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "find student t distribution for Airline where df is 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "Airline",
            "where",
            "df",
            "is",
            "3"
        ]
    },
    {
        "db_id": "election",
        "question": "find student t distribution for Party with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "election",
            "columns": [
                [
                    "Party"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "Party",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "calculate the student t distribution for Manufacturer with degree of freedom of 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Manufacturer",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "3"
        ]
    },
    {
        "db_id": "debate",
        "question": "what is the student t distribution for the Age with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Age",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "network_2",
        "question": "find student t distribution for age with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "age",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "climbing",
        "question": "calculate the student t distribution for the Height with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Height",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "calculate the student t distribution for SSN with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "SSN",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "show me the f distribution for Weight with nominator equal 2 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "Weight",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "college_2",
        "question": "find f distribution for budget with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "budget",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "find f distribution for the Group_Equity_Shareholding with nominator equal 3 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "the",
            "Group_Equity_Shareholding",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "find f distribution for authOrder with nominator equal 1 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "authOrder",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "what is the f distribution for Snatch with nominator equal 2 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "f",
            "distribution",
            "for",
            "Snatch",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "show me the f distribution for Max_speed with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "Max_speed",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "what is the f distribution for the Order_Year with nominator equal 2 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Order_Year",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "race_track",
        "question": "find f distribution for Year_Opened with nominator equal 2 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "Year_Opened",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "academic",
        "question": "find f distribution for the reference_num with nominator equal 2 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "the",
            "reference_num",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show me the f distribution for the product_price with nominator equal 2 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "product_price",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "music_4",
        "question": "find f distribution for the Age with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "the",
            "Age",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show me the f distribution for the Settlement_Amount with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Settlement_Amount",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show me the f distribution for Number_in_season with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "film",
            "columns": [
                [
                    "Number_in_season"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "Number_in_season",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "find f distribution for Rank_in_Round with nominator equal 1 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "Rank_in_Round",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show me the f distribution for the Num_of_stock with nominator equal 3 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "phone_market",
            "columns": [
                [
                    "Num_of_stock"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Num_of_stock",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "store_product",
        "question": "find f distribution for Area_size with nominator equal 3 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "store",
            "columns": [
                [
                    "Area_size"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "Area_size",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the f distribution for charge_amount with nominator equal 1 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "charge_amount",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "music_1",
        "question": "what is the f distribution for resolution with nominator equal 2 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "f",
            "distribution",
            "for",
            "resolution",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "find f distribution for the Year_working with nominator equal 1 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "employment",
            "columns": [
                [
                    "Year_working"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "the",
            "Year_working",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "farm",
        "question": "calculate the f distribution for the Year with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "farm_competition",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Year",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "calculate the f distribution for Product_Price with nominator equal 1 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "f",
            "distribution",
            "for",
            "Product_Price",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the f distribution for the Mar with nominator equal 3 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Mar"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Mar",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "swimming",
        "question": "calculate the f distribution for the Capacity with nominator equal 1 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Capacity",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "what is the f distribution for Airline with nominator equal 3 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "f",
            "distribution",
            "for",
            "Airline",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "election",
        "question": "find f distribution for Year with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "party",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "Year",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "what is the f distribution for Price with nominator equal 2 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Products",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "f",
            "distribution",
            "for",
            "Price",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "debate",
        "question": "find f distribution for Affirmative with nominator equal 1 and denominator 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Affirmative"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    14
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    14
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "Affirmative",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "2"
        ]
    },
    {
        "db_id": "network_2",
        "question": "what is the f distribution for the age with nominator equal 2 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    2,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    4,
                    0,
                    2,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "age",
            "with",
            "nominator",
            "equal",
            "2",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "climbing",
        "question": "find f distribution for the Prominence with nominator equal 1 and denominator 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    1,
                    "ddf",
                    "=",
                    15
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    4,
                    0,
                    1,
                    4,
                    0,
                    15
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "f",
            "distribution",
            "for",
            "the",
            "Prominence",
            "with",
            "nominator",
            "equal",
            "1",
            "and",
            "denominator",
            "3"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "calculate the f distribution for the Scientist with nominator equal 3 and denominator 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "AssignedTo",
            "columns": [
                [
                    "Scientist"
                ]
            ],
            "extra_param": [
                [
                    "ndf",
                    "=",
                    3,
                    "ddf",
                    "=",
                    13
                ]
            ]
        },
        "python": [
            0,
            [
                4
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                [
                    4,
                    0,
                    3,
                    4,
                    0,
                    13
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "f",
            "distribution",
            "for",
            "the",
            "Scientist",
            "with",
            "nominator",
            "equal",
            "3",
            "and",
            "denominator",
            "1"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "calculate the bionomial distribution for Killed",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "show me the bionomial distribution for the end_min",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            9,
            [
                [
                    44
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "end_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "find bionomial distribution for the Group_Equity_Shareholding",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "what is the bionomial distribution for the authOrder",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "find bionomial distribution for the Total",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Total"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "find bionomial distribution for Number_Deaths",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "show me the bionomial distribution for Rank",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "show me the bionomial distribution for Year_Opened",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "find bionomial distribution for the citation_num",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "the",
            "citation_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show me the bionomial distribution for the product_price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "product_price"
        ]
    },
    {
        "db_id": "music_4",
        "question": "find bionomial distribution for the Age",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Age"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "find bionomial distribution for the Settlement_Amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "what is the bionomial distribution for Openning_year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Openning_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Openning_year"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "calculate the bionomial distribution for the Rank_in_Round",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "calculate the bionomial distribution for Num_of_stock",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "phone_market",
            "columns": [
                [
                    "Num_of_stock"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Num_of_stock"
        ]
    },
    {
        "db_id": "store_product",
        "question": "show me the bionomial distribution for the City_Area",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Area"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "City_Area"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "what is the bionomial distribution for cost_of_treatment",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "bionomial",
            "distribution",
            "for",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "music_1",
        "question": "find bionomial distribution for rating",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "rating"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "calculate the bionomial distribution for Profits_in_Billion",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "company",
            "columns": [
                [
                    "Profits_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Profits_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "calculate the bionomial distribution for Oxen",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "farm",
            "columns": [
                [
                    "Oxen"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Oxen"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "calculate the bionomial distribution for Product_Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the bionomial distribution for Sep",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Sep"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Sep"
        ]
    },
    {
        "db_id": "swimming",
        "question": "calculate the bionomial distribution for the meter_100",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "meter_100"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "calculate the bionomial distribution for FlightNo",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "FlightNo"
        ]
    },
    {
        "db_id": "election",
        "question": "what is the bionomial distribution for the District",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "election",
            "columns": [
                [
                    "District"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "District"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "what is the bionomial distribution for the Manufacturer",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Manufacturer"
        ]
    },
    {
        "db_id": "debate",
        "question": "calculate the bionomial distribution for Affirmative",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Affirmative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "bionomial",
            "distribution",
            "for",
            "Affirmative"
        ]
    },
    {
        "db_id": "network_2",
        "question": "what is the bionomial distribution for age",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "bionomial",
            "distribution",
            "for",
            "age"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the bionomial distribution for the Height",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Height"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "find bionomial distribution for the Hours",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Projects",
            "columns": [
                [
                    "Hours"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "bionomial",
            "distribution",
            "for",
            "the",
            "Hours"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "show me the poisson distribution for the Height",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Height"
        ]
    },
    {
        "db_id": "college_2",
        "question": "show me the poisson distribution for budget",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "budget"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "what is the poisson distribution for Velocity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "what is the poisson distribution for authOrder",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "what is the poisson distribution for the Snatch",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Snatch"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "show me the poisson distribution for Max_speed",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "Max_speed"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "what is the poisson distribution for the Order_Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Order_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "calculate the poisson distribution for the Seating",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "calculate the poisson distribution for citation_num",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "citation_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "calculate the poisson distribution for product_price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "product_price"
        ]
    },
    {
        "db_id": "music_4",
        "question": "find poisson distribution for Volume",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "poisson",
            "distribution",
            "for",
            "Volume"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "what is the poisson distribution for the Settlement_Amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show me the poisson distribution for the Capacity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Capacity"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "calculate the poisson distribution for Rank_in_Round",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "what is the poisson distribution for the Ranking",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "market",
            "columns": [
                [
                    "Ranking"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Ranking"
        ]
    },
    {
        "db_id": "store_product",
        "question": "what is the poisson distribution for the pages_per_minute_color",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "product",
            "columns": [
                [
                    "pages_per_minute_color"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "pages_per_minute_color"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the poisson distribution for the cost_of_treatment",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "music_1",
        "question": "what is the poisson distribution for resolution",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "resolution"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "find poisson distribution for the Profits_in_Billion",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "company",
            "columns": [
                [
                    "Profits_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "poisson",
            "distribution",
            "for",
            "the",
            "Profits_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "calculate the poisson distribution for Total_Horses",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "farm",
            "columns": [
                [
                    "Total_Horses"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "Total_Horses"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "calculate the poisson distribution for Product_Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "find poisson distribution for Apr",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Apr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "poisson",
            "distribution",
            "for",
            "Apr"
        ]
    },
    {
        "db_id": "swimming",
        "question": "find poisson distribution for the meter_100",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "poisson",
            "distribution",
            "for",
            "the",
            "meter_100"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "calculate the poisson distribution for the FlightNo",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "FlightNo"
        ]
    },
    {
        "db_id": "election",
        "question": "calculate the poisson distribution for the Party",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "election",
            "columns": [
                [
                    "Party"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Party"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "calculate the poisson distribution for the Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Products",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "poisson",
            "distribution",
            "for",
            "the",
            "Price"
        ]
    },
    {
        "db_id": "debate",
        "question": "find poisson distribution for Num_of_Audience",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "debate",
            "columns": [
                [
                    "Num_of_Audience"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "poisson",
            "distribution",
            "for",
            "Num_of_Audience"
        ]
    },
    {
        "db_id": "network_2",
        "question": "show me the poisson distribution for age",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "age"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the poisson distribution for Points",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "climber",
            "columns": [
                [
                    "Points"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "poisson",
            "distribution",
            "for",
            "Points"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "what is the poisson distribution for Scientist",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "AssignedTo",
            "columns": [
                [
                    "Scientist"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "poisson",
            "distribution",
            "for",
            "Scientist"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "find exponential distribution for the Weight",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "the",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "what is the exponential distribution for the capacity",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "calculate the exponential distribution for Group_Equity_Shareholding",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "calculate the exponential distribution for authOrder",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "calculate the exponential distribution for the Total",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Total"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "calculate the exponential distribution for the Number_city_affected",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "what is the exponential distribution for the Rank",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "show me the exponential distribution for Year_Opened",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "exponential",
            "distribution",
            "for",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "what is the exponential distribution for citation_num",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "exponential",
            "distribution",
            "for",
            "citation_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "find exponential distribution for the total_value_purchased",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "the",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "music_4",
        "question": "show me the exponential distribution for the Weeks_on_Top",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Weeks_on_Top"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "calculate the exponential distribution for the Settlement_Amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "what is the exponential distribution for the Openning_year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Openning_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Openning_year"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "calculate the exponential distribution for Rank_in_Round",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "find exponential distribution for the Num_of_stock",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "phone_market",
            "columns": [
                [
                    "Num_of_stock"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "the",
            "Num_of_stock"
        ]
    },
    {
        "db_id": "store_product",
        "question": "calculate the exponential distribution for City_Area",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Area"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "City_Area"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the exponential distribution for charge_amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "exponential",
            "distribution",
            "for",
            "charge_amount"
        ]
    },
    {
        "db_id": "music_1",
        "question": "show me the exponential distribution for the rating",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "rating"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "find exponential distribution for the Market_Value_in_Billion",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "company",
            "columns": [
                [
                    "Market_Value_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "the",
            "Market_Value_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "calculate the exponential distribution for Pigs",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "farm",
            "columns": [
                [
                    "Pigs"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "Pigs"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "calculate the exponential distribution for the Product_Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "find exponential distribution for the Year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "hosting_city",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            3,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "the",
            "Year"
        ]
    },
    {
        "db_id": "swimming",
        "question": "what is the exponential distribution for the Opening_year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Opening_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Opening_year"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "find exponential distribution for Airline",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "Airline"
        ]
    },
    {
        "db_id": "election",
        "question": "show me the exponential distribution for the Population",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "county",
            "columns": [
                [
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Population"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "calculate the exponential distribution for Revenue",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Manufacturers",
            "columns": [
                [
                    "Revenue"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "Revenue"
        ]
    },
    {
        "db_id": "debate",
        "question": "what is the exponential distribution for the Age",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "exponential",
            "distribution",
            "for",
            "the",
            "Age"
        ]
    },
    {
        "db_id": "network_2",
        "question": "calculate the exponential distribution for year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "exponential",
            "distribution",
            "for",
            "year"
        ]
    },
    {
        "db_id": "climbing",
        "question": "find exponential distribution for the Prominence",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "the",
            "Prominence"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "find exponential distribution for Hours",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Projects",
            "columns": [
                [
                    "Hours"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "exponential",
            "distribution",
            "for",
            "Hours"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "find weibull distribution for the Injured where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    8
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "the",
            "Injured",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "college_2",
        "question": "show me the weibull distribution for budget where shape factor equal to 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "weibull",
            "distribution",
            "for",
            "budget",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "3"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "find weibull distribution for Altitude where shape factor equal to 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "Altitude",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "2"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "find weibull distribution for authOrder where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "authOrder",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "find weibull distribution for the Height where c equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "the",
            "Height",
            "where",
            "c",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "calculate the weibull distribution for Damage_millions_USD where c equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "Damage_millions_USD",
            "where",
            "c",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "find weibull distribution for Order_Year where c equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "Order_Year",
            "where",
            "c",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "race_track",
        "question": "find weibull distribution for the Seating where shape factor equal to 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "the",
            "Seating",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "1"
        ]
    },
    {
        "db_id": "academic",
        "question": "calculate the weibull distribution for reference_num where c equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "reference_num",
            "where",
            "c",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show me the weibull distribution for total_value_purchased where c equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "weibull",
            "distribution",
            "for",
            "total_value_purchased",
            "where",
            "c",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "music_4",
        "question": "find weibull distribution for the Volume where shape factor equal to 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "the",
            "Volume",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "2"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "calculate the weibull distribution for the Settlement_Amount where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Settlement_Amount",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "cinema",
        "question": "calculate the weibull distribution for the Capacity where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Capacity",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "find weibull distribution for the Rank_in_Round where shape factor equal to 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "the",
            "Rank_in_Round",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "2"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show me the weibull distribution for the Price where shape factor equal to 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Price",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "3"
        ]
    },
    {
        "db_id": "store_product",
        "question": "what is the weibull distribution for Number_of_product_category where shape factor equal to 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "store",
            "columns": [
                [
                    "Number_of_product_category"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "weibull",
            "distribution",
            "for",
            "Number_of_product_category",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "1"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "calculate the weibull distribution for charge_amount where shape factor equal to 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "charge_amount",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "3"
        ]
    },
    {
        "db_id": "music_1",
        "question": "calculate the weibull distribution for the rating where shape factor equal to 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "rating",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "2"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "what is the weibull distribution for the Assets_in_Billion where c equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "company",
            "columns": [
                [
                    "Assets_in_Billion"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Assets_in_Billion",
            "where",
            "c",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "farm",
        "question": "show me the weibull distribution for Oxen where c equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "farm",
            "columns": [
                [
                    "Oxen"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "weibull",
            "distribution",
            "for",
            "Oxen",
            "where",
            "c",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "calculate the weibull distribution for the Product_Price where shape factor equal to 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Product_Price",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "2"
        ]
    },
    {
        "db_id": "city_record",
        "question": "calculate the weibull distribution for the Jul where c equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Jul"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    19
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Jul",
            "where",
            "c",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "swimming",
        "question": "find weibull distribution for the Capacity where shape factor equal to 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                [
                    8,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "the",
            "Capacity",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "2"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "find weibull distribution for FlightNo where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "FlightNo",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "election",
        "question": "calculate the weibull distribution for the Party where shape factor equal to 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "election",
            "columns": [
                [
                    "Party"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Party",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "3"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "what is the weibull distribution for the Revenue where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Manufacturers",
            "columns": [
                [
                    "Revenue"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Revenue",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "debate",
        "question": "find weibull distribution for Age where shape factor equal to 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    8,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "weibull",
            "distribution",
            "for",
            "Age",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "1"
        ]
    },
    {
        "db_id": "network_2",
        "question": "what is the weibull distribution for age where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "weibull",
            "distribution",
            "for",
            "age",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "climbing",
        "question": "calculate the weibull distribution for Prominence where shape factor equal to 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "weibull",
            "distribution",
            "for",
            "Prominence",
            "where",
            "shape",
            "factor",
            "equal",
            "to",
            "3"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "show me the weibull distribution for the Scientist where c equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "AssignedTo",
            "columns": [
                [
                    "Scientist"
                ]
            ],
            "extra_param": [
                [
                    "c",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                8
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                [
                    8,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "weibull",
            "distribution",
            "for",
            "the",
            "Scientist",
            "where",
            "c",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "what is the chi square distribution for Height where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Height",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "college_2",
        "question": "calculate the chi square distribution for budget where df is 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "budget",
            "where",
            "df",
            "is",
            "3"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "what is the chi square distribution for Altitude with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Altitude",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "show me the chi square distribution for authOrder with degree of freedom of 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "authOrder",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "1"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "show me the chi square distribution for the Snatch where df is 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Snatch",
            "where",
            "df",
            "is",
            "3"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "what is the chi square distribution for the Damage_millions_USD where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Damage_millions_USD",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "calculate the chi square distribution for the Rank with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Rank",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "race_track",
        "question": "show me the chi square distribution for the Seating with df equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Seating",
            "with",
            "df",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "academic",
        "question": "find chi square distribution for the reference_num with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "reference_num",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "department_store",
        "question": "calculate the chi square distribution for the total_value_purchased with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "total_value_purchased",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "music_4",
        "question": "calculate the chi square distribution for Volume with df equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Volume",
            "with",
            "df",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show me the chi square distribution for Settlement_Amount where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Settlement_Amount",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "cinema",
        "question": "find chi square distribution for Number_in_season with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "film",
            "columns": [
                [
                    "Number_in_season"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "Number_in_season",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "calculate the chi square distribution for Rank_in_Round where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Rank_in_Round",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "calculate the chi square distribution for Num_of_stock where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "phone_market",
            "columns": [
                [
                    "Num_of_stock"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Num_of_stock",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "store_product",
        "question": "find chi square distribution for the City_Area with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Area"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "City_Area",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the chi square distribution for cost_of_treatment with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "cost_of_treatment",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "music_1",
        "question": "find chi square distribution for the rating with degree of freedom of 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "rating",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "1"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "find chi square distribution for the Assets_in_Billion with df equal 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "company",
            "columns": [
                [
                    "Assets_in_Billion"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Assets_in_Billion",
            "with",
            "df",
            "equal",
            "3"
        ]
    },
    {
        "db_id": "farm",
        "question": "find chi square distribution for the Year with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "farm",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Year",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "show me the chi square distribution for the Product_Price with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "Product_Price",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the chi square distribution for Dec where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Dec"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    24
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Dec",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "swimming",
        "question": "what is the chi square distribution for meter_100 with degree of freedom of 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "meter_100",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "3"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "show me the chi square distribution for the FlightNo where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "the",
            "FlightNo",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "election",
        "question": "find chi square distribution for Party with df equal 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "election",
            "columns": [
                [
                    "Party"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "Party",
            "with",
            "df",
            "equal",
            "2"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "find chi square distribution for Manufacturer where df is 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "Manufacturer",
            "where",
            "df",
            "is",
            "2"
        ]
    },
    {
        "db_id": "debate",
        "question": "show me the chi square distribution for Negative where df is 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Negative"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                [
                    9,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Negative",
            "where",
            "df",
            "is",
            "1"
        ]
    },
    {
        "db_id": "network_2",
        "question": "what is the chi square distribution for age with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    9,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "age",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "climbing",
        "question": "find chi square distribution for Prominence where df is 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "chi",
            "square",
            "distribution",
            "for",
            "Prominence",
            "where",
            "df",
            "is",
            "3"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "calculate the chi square distribution for Scientist where df is 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "AssignedTo",
            "columns": [
                [
                    "Scientist"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                9
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                [
                    9,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "chi",
            "square",
            "distribution",
            "for",
            "Scientist",
            "where",
            "df",
            "is",
            "3"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Give the histogram plot for the Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "Year"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Give the histogram plot for the Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "Year"
        ]
    },
    {
        "db_id": "college_2",
        "question": "provide the histogram plot for the year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "teaches",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    26
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "provide the histogram plot for Altitude",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "Altitude"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "provide the histogram plot for Total",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "Total"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Give me a histogram plot for Rank",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "Rank"
        ]
    },
    {
        "db_id": "academic",
        "question": "show a histogram plot for the cited",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            14,
            [
                [
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "histogram",
            "plot",
            "for",
            "the",
            "cited"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give the histogram plot for the Volume",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "Volume"
        ]
    },
    {
        "db_id": "cinema",
        "question": "provide the histogram plot for Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "schedule",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "Price"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "provide the histogram plot for the Num_of_employees",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "market",
            "columns": [
                [
                    "Num_of_employees"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "Num_of_employees"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the histogram plot for the charge_amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "charge_amount"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "Give me a histogram plot for Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "Age"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "Give me a histogram plot for Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "Product_Price"
        ]
    },
    {
        "db_id": "swimming",
        "question": "Give me a histogram plot for meter_100",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "meter_100"
        ]
    },
    {
        "db_id": "election",
        "question": "provide the histogram plot for Population",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "county",
            "columns": [
                [
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "Population"
        ]
    },
    {
        "db_id": "debate",
        "question": "Give me a histogram plot for the Num_of_Audience",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "debate",
            "columns": [
                [
                    "Num_of_Audience"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "the",
            "Num_of_Audience"
        ]
    },
    {
        "db_id": "climbing",
        "question": "provide the histogram plot for the Points",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "climber",
            "columns": [
                [
                    "Points"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "Points"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "show a box plot for Killed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "Killed"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show a box plot for Velocity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "Velocity"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Give the box plot for Snatch",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "box",
            "plot",
            "for",
            "Snatch"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "show a box plot for Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "Age"
        ]
    },
    {
        "db_id": "academic",
        "question": "Give me a box plot for the citing",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "cite",
            "columns": [
                [
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            14,
            [
                [
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "box",
            "plot",
            "for",
            "the",
            "citing"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give the box plot for the Weeks_on_Top",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "box",
            "plot",
            "for",
            "the",
            "Weeks_on_Top"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show me the box plot for Capacity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "Capacity"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show me the box plot for Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "Price"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the box plot for charge_amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "charge_amount"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "Give me a box plot for Year_working",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "employment",
            "columns": [
                [
                    "Year_working"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "box",
            "plot",
            "for",
            "Year_working"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "show a box plot for the Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "the",
            "Product_Price"
        ]
    },
    {
        "db_id": "swimming",
        "question": "show a box plot for the meter_100",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "the",
            "meter_100"
        ]
    },
    {
        "db_id": "election",
        "question": "show me the box plot for the Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "party",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "the",
            "Year"
        ]
    },
    {
        "db_id": "debate",
        "question": "provide the box plot for Affirmative",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Affirmative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "box",
            "plot",
            "for",
            "Affirmative"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the box plot for Height",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "Height"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Give the desnity plot for the Height",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Height"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "provide the desnity plot for Velocity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "desnity",
            "plot",
            "for",
            "Velocity"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "provide the desnity plot for Snatch",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "desnity",
            "plot",
            "for",
            "Snatch"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "show a desnity plot for Rank",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "Rank"
        ]
    },
    {
        "db_id": "academic",
        "question": "Give me a desnity plot for the cited",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            14,
            [
                [
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "cited"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give me a desnity plot for the Weeks_on_Top",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "Weeks_on_Top"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show me the desnity plot for the Rank_in_series",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "film",
            "columns": [
                [
                    "Rank_in_series"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Rank_in_series"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "Give the desnity plot for Ranking",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "market",
            "columns": [
                [
                    "Ranking"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "desnity",
            "plot",
            "for",
            "Ranking"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "Give the desnity plot for cost_of_treatment",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "desnity",
            "plot",
            "for",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "show me the desnity plot for the Year_working",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "employment",
            "columns": [
                [
                    "Year_working"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Year_working"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "Give me a desnity plot for the Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the desnity plot for the Oct",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Oct"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Oct"
        ]
    },
    {
        "db_id": "swimming",
        "question": "show a desnity plot for meter_100",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "meter_100"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "show a desnity plot for the Airline",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "Airline"
        ]
    },
    {
        "db_id": "election",
        "question": "show me the desnity plot for Party",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "election",
            "columns": [
                [
                    "Party"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "Party"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "show a desnity plot for the Code",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Products",
            "columns": [
                [
                    "Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "Code"
        ]
    },
    {
        "db_id": "debate",
        "question": "show a desnity plot for Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "Age"
        ]
    },
    {
        "db_id": "network_2",
        "question": "show a desnity plot for the year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "year"
        ]
    },
    {
        "db_id": "climbing",
        "question": "Give the desnity plot for the Prominence",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Prominence"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "show a desnity plot for SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "SSN"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "show a pie chart for the Year and Killed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year",
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    4,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "Year",
            "and",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Give the pie chart for the capacity and capacity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "capacity",
            "and",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Give me a pie chart for Velocity and Altitude",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity",
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    17,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "Velocity",
            "and",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Give me a pie chart for the authOrder and authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Give the pie chart for the Weight and Weight",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "Weight",
            "and",
            "Weight"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Give me a pie chart for the Number_Deaths and Max_speed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths",
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    6,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "Number_Deaths",
            "and",
            "Max_speed"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Give me a pie chart for the Age and Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age",
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    11,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "Age",
            "and",
            "Age"
        ]
    },
    {
        "db_id": "race_track",
        "question": "provide the pie chart for Seating and Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "Seating",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "Give me a pie chart for citing and citing",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "cite",
            "columns": [
                [
                    "citing",
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            14,
            [
                [
                    42,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "citing",
            "and",
            "citing"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show a pie chart for product_price and product_price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price",
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            5,
            [
                [
                    21,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "pie",
            "chart",
            "for",
            "product_price",
            "and",
            "product_price"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give me a pie chart for the Volume and Volume",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume",
                    "Volume"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    16,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "Volume",
            "and",
            "Volume"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "Give me a pie chart for Settlement_Amount and Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount",
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            6,
            [
                [
                    22,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "Settlement_Amount",
            "and",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show a pie chart for Rank_in_series and Rank_in_series",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "film",
            "columns": [
                [
                    "Rank_in_series",
                    "Rank_in_series"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "pie",
            "chart",
            "for",
            "Rank_in_series",
            "and",
            "Rank_in_series"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "provide the pie chart for the Rank_in_Round and Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round",
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "Rank_in_Round",
            "and",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show me the pie chart for Price and Memory_in_G",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price",
                    "Memory_in_G"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    5,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "pie",
            "chart",
            "for",
            "Price",
            "and",
            "Memory_in_G"
        ]
    },
    {
        "db_id": "store_product",
        "question": "provide the pie chart for City_Area and City_Area",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Area",
                    "City_Area"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    18,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "City_Area",
            "and",
            "City_Area"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "Give the pie chart for the cost_of_treatment and cost_of_treatment",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment",
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            7,
            [
                [
                    49,
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "cost_of_treatment",
            "and",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "music_1",
        "question": "provide the pie chart for rating and resolution",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "song",
            "columns": [
                [
                    "rating",
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            3,
            [
                [
                    18,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "rating",
            "and",
            "resolution"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "show me the pie chart for Market_Value_in_Billion and Sales_in_Billion",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "company",
            "columns": [
                [
                    "Market_Value_in_Billion",
                    "Sales_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    13,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "pie",
            "chart",
            "for",
            "Market_Value_in_Billion",
            "and",
            "Sales_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "provide the pie chart for the Total_Cattle and Total_Horses",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "farm",
            "columns": [
                [
                    "Total_Cattle",
                    "Total_Horses"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    11,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "Total_Cattle",
            "and",
            "Total_Horses"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "show me the pie chart for the Product_Price and Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price",
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "Product_Price",
            "and",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "provide the pie chart for the Regional_Population and Regional_Population",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "city",
            "columns": [
                [
                    "Regional_Population",
                    "Regional_Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "Regional_Population",
            "and",
            "Regional_Population"
        ]
    },
    {
        "db_id": "swimming",
        "question": "Give me a pie chart for the meter_100 and meter_100",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100",
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    4,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "meter_100",
            "and",
            "meter_100"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "provide the pie chart for Airline and FlightNo",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline",
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "pie",
            "chart",
            "for",
            "Airline",
            "and",
            "FlightNo"
        ]
    },
    {
        "db_id": "election",
        "question": "Give the pie chart for the Population and Population",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "county",
            "columns": [
                [
                    "Population",
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "pie",
            "chart",
            "for",
            "the",
            "Population",
            "and",
            "Population"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "Give the pie chart for Manufacturer and Manufacturer",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer",
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "pie",
            "chart",
            "for",
            "Manufacturer",
            "and",
            "Manufacturer"
        ]
    },
    {
        "db_id": "debate",
        "question": "show me the pie chart for Negative and Affirmative",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Negative",
                    "Affirmative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            2,
            [
                [
                    12,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "pie",
            "chart",
            "for",
            "Negative",
            "and",
            "Affirmative"
        ]
    },
    {
        "db_id": "network_2",
        "question": "Give me a pie chart for the year and year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year",
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "pie",
            "chart",
            "for",
            "the",
            "year",
            "and",
            "year"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the pie chart for Prominence and Height",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence",
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    4,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "pie",
            "chart",
            "for",
            "Prominence",
            "and",
            "Height"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "show a pie chart for SSN and SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN",
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    1,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "pie",
            "chart",
            "for",
            "SSN",
            "and",
            "SSN"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "show a bar chart for the Height and Height",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    11,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "Height",
            "and",
            "Height"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Give the bar chart for end_hr and start_hr",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr",
                    "start_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            9,
            [
                [
                    43,
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "bar",
            "chart",
            "for",
            "end_hr",
            "and",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show a bar chart for Group_Equity_Shareholding and Group_Equity_Shareholding",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding",
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "Group_Equity_Shareholding",
            "and",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Give me a bar chart for authOrder and authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Give me a bar chart for Clean_Jerk and Total",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk",
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "Clean_Jerk",
            "and",
            "Total"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "show a bar chart for Number_city_affected and Number_city_affected",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected",
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "Number_city_affected",
            "and",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "show a bar chart for Age and Join_Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age",
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    11,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "Age",
            "and",
            "Join_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Give me a bar chart for the Year_Opened and Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    10,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "Year_Opened",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "show a bar chart for year and year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "publication",
            "columns": [
                [
                    "year",
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            9,
            [
                [
                    30,
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "year",
            "and",
            "year"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Give me a bar chart for the product_price and product_price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price",
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            5,
            [
                [
                    21,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "product_price",
            "and",
            "product_price"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give me a bar chart for Volume and Volume",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume",
                    "Volume"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    16,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "Volume",
            "and",
            "Volume"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show me the bar chart for Settlement_Amount and Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount",
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            6,
            [
                [
                    22,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bar",
            "chart",
            "for",
            "Settlement_Amount",
            "and",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show a bar chart for Price and Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "schedule",
            "columns": [
                [
                    "Price",
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    17,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "Price",
            "and",
            "Price"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "show a bar chart for Rank_in_Round and Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round",
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "Rank_in_Round",
            "and",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "provide the bar chart for Memory_in_G and Memory_in_G",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "phone",
            "columns": [
                [
                    "Memory_in_G",
                    "Memory_in_G"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "bar",
            "chart",
            "for",
            "Memory_in_G",
            "and",
            "Memory_in_G"
        ]
    },
    {
        "db_id": "store_product",
        "question": "show me the bar chart for the dpi and pages_per_minute_color",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "product",
            "columns": [
                [
                    "dpi",
                    "pages_per_minute_color"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bar",
            "chart",
            "for",
            "the",
            "dpi",
            "and",
            "pages_per_minute_color"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "show me the bar chart for cost_of_treatment and cost_of_treatment",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment",
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            7,
            [
                [
                    49,
                    49
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bar",
            "chart",
            "for",
            "cost_of_treatment",
            "and",
            "cost_of_treatment"
        ]
    },
    {
        "db_id": "music_1",
        "question": "Give me a bar chart for the rating and rating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "song",
            "columns": [
                [
                    "rating",
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            3,
            [
                [
                    18,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "rating",
            "and",
            "rating"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "Give me a bar chart for the Market_Value_in_Billion and Assets_in_Billion",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "company",
            "columns": [
                [
                    "Market_Value_in_Billion",
                    "Assets_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    13,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "Market_Value_in_Billion",
            "and",
            "Assets_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "show a bar chart for the Pigs and Sheep_and_Goats",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "farm",
            "columns": [
                [
                    "Pigs",
                    "Sheep_and_Goats"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    15,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "Pigs",
            "and",
            "Sheep_and_Goats"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "Give me a bar chart for Product_Price and Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price",
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "bar",
            "chart",
            "for",
            "Product_Price",
            "and",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "Give the bar chart for Oct and Jun",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Oct",
                    "Jun"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    22,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "bar",
            "chart",
            "for",
            "Oct",
            "and",
            "Jun"
        ]
    },
    {
        "db_id": "swimming",
        "question": "provide the bar chart for the meter_100 and meter_100",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "swimmer",
            "columns": [
                [
                    "meter_100",
                    "meter_100"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    4,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "bar",
            "chart",
            "for",
            "the",
            "meter_100",
            "and",
            "meter_100"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "provide the bar chart for Airline and Airline",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline",
                    "Airline"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    10,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "bar",
            "chart",
            "for",
            "Airline",
            "and",
            "Airline"
        ]
    },
    {
        "db_id": "election",
        "question": "Give the bar chart for the Population and Population",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "county",
            "columns": [
                [
                    "Population",
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "bar",
            "chart",
            "for",
            "the",
            "Population",
            "and",
            "Population"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "show a bar chart for the Price and Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Products",
            "columns": [
                [
                    "Price",
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "the",
            "Price",
            "and",
            "Price"
        ]
    },
    {
        "db_id": "debate",
        "question": "show a bar chart for Negative and Negative",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Negative",
                    "Negative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "bar",
            "chart",
            "for",
            "Negative",
            "and",
            "Negative"
        ]
    },
    {
        "db_id": "network_2",
        "question": "provide the bar chart for age and age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Person",
            "columns": [
                [
                    "age",
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "bar",
            "chart",
            "for",
            "age",
            "and",
            "age"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the bar chart for Prominence and Prominence",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Prominence",
                    "Prominence"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    4,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "bar",
            "chart",
            "for",
            "Prominence",
            "and",
            "Prominence"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "Give the bar chart for Scientist and Scientist",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "AssignedTo",
            "columns": [
                [
                    "Scientist",
                    "Scientist"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            2,
            [
                [
                    6,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "bar",
            "chart",
            "for",
            "Scientist",
            "and",
            "Scientist"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Give the scatter plot for the Injured and Killed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured",
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            0,
            [
                [
                    8,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Injured",
            "and",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "provide the scatter plot for start_hr and end_min",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr",
                    "end_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            9,
            [
                [
                    41,
                    44
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "start_hr",
            "and",
            "end_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show a scatter plot for Altitude and Velocity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude",
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    18,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "scatter",
            "plot",
            "for",
            "Altitude",
            "and",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Give me a scatter plot for authOrder and authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "scatter",
            "plot",
            "for",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "provide the scatter plot for Weight and Height",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight",
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    9,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "Weight",
            "and",
            "Height"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "show me the scatter plot for Damage_millions_USD and Number_Deaths",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD",
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            0,
            [
                [
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "scatter",
            "plot",
            "for",
            "Damage_millions_USD",
            "and",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "provide the scatter plot for the Age and Rank",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age",
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    11,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Age",
            "and",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "show me the scatter plot for the Seating and Year_Opened",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating",
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    9,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Seating",
            "and",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "show me the scatter plot for cited and citing",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited",
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            14,
            [
                [
                    41,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "scatter",
            "plot",
            "for",
            "cited",
            "and",
            "citing"
        ]
    },
    {
        "db_id": "department_store",
        "question": "provide the scatter plot for the total_value_purchased and total_value_purchased",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased",
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            12,
            [
                [
                    51,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "total_value_purchased",
            "and",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give me a scatter plot for the Weeks_on_Top and Weeks_on_Top",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "volume",
            "columns": [
                [
                    "Weeks_on_Top",
                    "Weeks_on_Top"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "scatter",
            "plot",
            "for",
            "the",
            "Weeks_on_Top",
            "and",
            "Weeks_on_Top"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show me the scatter plot for Settlement_Amount and Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount",
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            6,
            [
                [
                    22,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "scatter",
            "plot",
            "for",
            "Settlement_Amount",
            "and",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "Give the scatter plot for the Show_times_per_day and Show_times_per_day",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "schedule",
            "columns": [
                [
                    "Show_times_per_day",
                    "Show_times_per_day"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    16,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Show_times_per_day",
            "and",
            "Show_times_per_day"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "provide the scatter plot for Rank_in_Round and Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round",
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "Rank_in_Round",
            "and",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show me the scatter plot for Num_of_shops and Ranking",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "market",
            "columns": [
                [
                    "Num_of_shops",
                    "Ranking"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    9,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "scatter",
            "plot",
            "for",
            "Num_of_shops",
            "and",
            "Ranking"
        ]
    },
    {
        "db_id": "store_product",
        "question": "show me the scatter plot for the Number_of_product_category and Ranking",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "store",
            "columns": [
                [
                    "Number_of_product_category",
                    "Ranking"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    12,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Number_of_product_category",
            "and",
            "Ranking"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "provide the scatter plot for charge_amount and charge_amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount",
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "charge_amount",
            "and",
            "charge_amount"
        ]
    },
    {
        "db_id": "music_1",
        "question": "provide the scatter plot for the resolution and rating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution",
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            3,
            [
                [
                    21,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "resolution",
            "and",
            "rating"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "show a scatter plot for the Profits_in_Billion and Assets_in_Billion",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "company",
            "columns": [
                [
                    "Profits_in_Billion",
                    "Assets_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "scatter",
            "plot",
            "for",
            "the",
            "Profits_in_Billion",
            "and",
            "Assets_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "Give me a scatter plot for the Working_Horses and Cows",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "farm",
            "columns": [
                [
                    "Working_Horses",
                    "Cows"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    10,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "scatter",
            "plot",
            "for",
            "the",
            "Working_Horses",
            "and",
            "Cows"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "Give the scatter plot for the Product_Price and Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price",
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Product_Price",
            "and",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show a scatter plot for the Nov and Oct",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Nov",
                    "Oct"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    23,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "scatter",
            "plot",
            "for",
            "the",
            "Nov",
            "and",
            "Oct"
        ]
    },
    {
        "db_id": "swimming",
        "question": "Give the scatter plot for the Opening_year and Opening_year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Opening_year",
                    "Opening_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    17,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Opening_year",
            "and",
            "Opening_year"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "Give me a scatter plot for the FlightNo and FlightNo",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo",
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    11,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "scatter",
            "plot",
            "for",
            "the",
            "FlightNo",
            "and",
            "FlightNo"
        ]
    },
    {
        "db_id": "election",
        "question": "Give the scatter plot for the First_Elected and Party",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "election",
            "columns": [
                [
                    "First_Elected",
                    "Party"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            2,
            [
                [
                    18,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "First_Elected",
            "and",
            "Party"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "provide the scatter plot for the Price and Manufacturer",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Products",
            "columns": [
                [
                    "Price",
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    8,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Price",
            "and",
            "Manufacturer"
        ]
    },
    {
        "db_id": "debate",
        "question": "Give the scatter plot for the Age and Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "people",
            "columns": [
                [
                    "Age",
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            0,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "the",
            "Age",
            "and",
            "Age"
        ]
    },
    {
        "db_id": "network_2",
        "question": "Give the scatter plot for age and age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Person",
            "columns": [
                [
                    "age",
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            0,
            [
                [
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "scatter",
            "plot",
            "for",
            "age",
            "and",
            "age"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show a scatter plot for Points and Points",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "climber",
            "columns": [
                [
                    "Points",
                    "Points"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            1,
            [
                [
                    11,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "scatter",
            "plot",
            "for",
            "Points",
            "and",
            "Points"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "show a scatter plot for the SSN and SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN",
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            0,
            [
                [
                    1,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "scatter",
            "plot",
            "for",
            "the",
            "SSN",
            "and",
            "SSN"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Give the hexbin chart for the Year and Injured",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year",
                    "Injured"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    4,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Year",
            "and",
            "Injured"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Give me a hexbin chart for the start_min and start_hr",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_min",
                    "start_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            9,
            [
                [
                    42,
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "start_min",
            "and",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "show a hexbin chart for the Altitude and Altitude",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude",
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    18,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "Altitude",
            "and",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Give the hexbin chart for the authOrder and authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Give the hexbin chart for Total and Clean_Jerk",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total",
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    5,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "hexbin",
            "chart",
            "for",
            "Total",
            "and",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "provide the hexbin chart for Damage_millions_USD and Max_speed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD",
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    5,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "hexbin",
            "chart",
            "for",
            "Damage_millions_USD",
            "and",
            "Max_speed"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "provide the hexbin chart for the Order_Year and Order_Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year",
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Order_Year",
            "and",
            "Order_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Give me a hexbin chart for the Seating and Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            1,
            [
                [
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "Seating",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "show a hexbin chart for citation_num and citation_num",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num",
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            9,
            [
                [
                    25,
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "hexbin",
            "chart",
            "for",
            "citation_num",
            "and",
            "citation_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show me the hexbin chart for the total_value_purchased and total_value_purchased",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased",
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            12,
            [
                [
                    51,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "total_value_purchased",
            "and",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "music_4",
        "question": "show me the hexbin chart for Age and Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age",
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "hexbin",
            "chart",
            "for",
            "Age",
            "and",
            "Age"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "Give the hexbin chart for Settlement_Amount and Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount",
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            6,
            [
                [
                    22,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "hexbin",
            "chart",
            "for",
            "Settlement_Amount",
            "and",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "Give the hexbin chart for Rank_in_series and Number_in_season",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "film",
            "columns": [
                [
                    "Rank_in_series",
                    "Number_in_season"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "hexbin",
            "chart",
            "for",
            "Rank_in_series",
            "and",
            "Number_in_season"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "provide the hexbin chart for the Rank_in_Round and Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round",
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Rank_in_Round",
            "and",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "provide the hexbin chart for the Price and Memory_in_G",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price",
                    "Memory_in_G"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    5,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Price",
            "and",
            "Memory_in_G"
        ]
    },
    {
        "db_id": "store_product",
        "question": "show me the hexbin chart for the City_Area and City_Area",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Area",
                    "City_Area"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    18,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "City_Area",
            "and",
            "City_Area"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "Give me a hexbin chart for charge_amount and charge_amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount",
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            1,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "charge_amount",
            "and",
            "charge_amount"
        ]
    },
    {
        "db_id": "music_1",
        "question": "Give me a hexbin chart for the rating and resolution",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "song",
            "columns": [
                [
                    "rating",
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            3,
            [
                [
                    18,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "rating",
            "and",
            "resolution"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "show a hexbin chart for the Market_Value_in_Billion and Profits_in_Billion",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "company",
            "columns": [
                [
                    "Market_Value_in_Billion",
                    "Profits_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            1,
            [
                [
                    13,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "Market_Value_in_Billion",
            "and",
            "Profits_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "show a hexbin chart for the Population and Population",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "city",
            "columns": [
                [
                    "Population",
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "Population",
            "and",
            "Population"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "Give me a hexbin chart for Product_Price and Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price",
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "Product_Price",
            "and",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the hexbin chart for the Jan and Sep",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Jan",
                    "Sep"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    14,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Jan",
            "and",
            "Sep"
        ]
    },
    {
        "db_id": "swimming",
        "question": "provide the hexbin chart for the Capacity and Opening_year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Capacity",
                    "Opening_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            1,
            [
                [
                    14,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Capacity",
            "and",
            "Opening_year"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "show me the hexbin chart for the FlightNo and FlightNo",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo",
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    11,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "FlightNo",
            "and",
            "FlightNo"
        ]
    },
    {
        "db_id": "election",
        "question": "provide the hexbin chart for Party and District",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "election",
            "columns": [
                [
                    "Party",
                    "District"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    17,
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "hexbin",
            "chart",
            "for",
            "Party",
            "and",
            "District"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "Give the hexbin chart for the Revenue and Revenue",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Manufacturers",
            "columns": [
                [
                    "Revenue",
                    "Revenue"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Revenue",
            "and",
            "Revenue"
        ]
    },
    {
        "db_id": "debate",
        "question": "show a hexbin chart for the Affirmative and Affirmative",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "debate_people",
            "columns": [
                [
                    "Affirmative",
                    "Affirmative"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            2,
            [
                [
                    11,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "Affirmative",
            "and",
            "Affirmative"
        ]
    },
    {
        "db_id": "network_2",
        "question": "Give me a hexbin chart for the year and year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year",
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            1,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "year",
            "and",
            "year"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show me the hexbin chart for the Height and Prominence",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height",
                    "Prominence"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "hexbin",
            "chart",
            "for",
            "the",
            "Height",
            "and",
            "Prominence"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "Give me a hexbin chart for the SSN and SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN",
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            0,
            [
                [
                    1,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "hexbin",
            "chart",
            "for",
            "the",
            "SSN",
            "and",
            "SSN"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Give me a contour figure for the Injured and Killed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured",
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    8,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "contour",
            "figure",
            "for",
            "the",
            "Injured",
            "and",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "show me the contour figure for the start_hr and start_hr",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr",
                    "start_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            9,
            [
                [
                    41,
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "start_hr",
            "and",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "provide the contour figure for the Velocity and Velocity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity",
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            2,
            [
                [
                    17,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "Velocity",
            "and",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "show a contour figure for the authOrder and authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "contour",
            "figure",
            "for",
            "the",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "provide the contour figure for the Snatch and Snatch",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch",
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "Snatch",
            "and",
            "Snatch"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Give the contour figure for Damage_millions_USD and Damage_millions_USD",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD",
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "contour",
            "figure",
            "for",
            "Damage_millions_USD",
            "and",
            "Damage_millions_USD"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Give me a contour figure for Join_Year and Rank",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year",
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    14,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "contour",
            "figure",
            "for",
            "Join_Year",
            "and",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Give the contour figure for Year_Opened and Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    10,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "contour",
            "figure",
            "for",
            "Year_Opened",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "provide the contour figure for reference_num and year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num",
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            9,
            [
                [
                    28,
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "contour",
            "figure",
            "for",
            "reference_num",
            "and",
            "year"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show a contour figure for total_value_purchased and total_value_purchased",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased",
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            12,
            [
                [
                    51,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "contour",
            "figure",
            "for",
            "total_value_purchased",
            "and",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "music_4",
        "question": "show a contour figure for the Volume and Volume",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "music_festival",
            "columns": [
                [
                    "Volume",
                    "Volume"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            2,
            [
                [
                    16,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "contour",
            "figure",
            "for",
            "the",
            "Volume",
            "and",
            "Volume"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "Give the contour figure for the Settlement_Amount and Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount",
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            6,
            [
                [
                    22,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "Settlement_Amount",
            "and",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "show me the contour figure for the Capacity and Openning_year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Capacity",
                    "Openning_year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    11,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "Capacity",
            "and",
            "Openning_year"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "show a contour figure for the Rank_in_Round and Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round",
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "contour",
            "figure",
            "for",
            "the",
            "Rank_in_Round",
            "and",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "show a contour figure for Price and Memory_in_G",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price",
                    "Memory_in_G"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    5,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "contour",
            "figure",
            "for",
            "Price",
            "and",
            "Memory_in_G"
        ]
    },
    {
        "db_id": "store_product",
        "question": "Give the contour figure for Number_of_product_category and Area_size",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "store",
            "columns": [
                [
                    "Number_of_product_category",
                    "Area_size"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    12,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "contour",
            "figure",
            "for",
            "Number_of_product_category",
            "and",
            "Area_size"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "Give me a contour figure for the charge_amount and charge_amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount",
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "contour",
            "figure",
            "for",
            "the",
            "charge_amount",
            "and",
            "charge_amount"
        ]
    },
    {
        "db_id": "music_1",
        "question": "provide the contour figure for rating and resolution",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "song",
            "columns": [
                [
                    "rating",
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            3,
            [
                [
                    18,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "contour",
            "figure",
            "for",
            "rating",
            "and",
            "resolution"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "show me the contour figure for Sales_in_Billion and Assets_in_Billion",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "company",
            "columns": [
                [
                    "Sales_in_Billion",
                    "Assets_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    10,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "Sales_in_Billion",
            "and",
            "Assets_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "show a contour figure for the Working_Horses and Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "farm",
            "columns": [
                [
                    "Working_Horses",
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    10,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "contour",
            "figure",
            "for",
            "the",
            "Working_Horses",
            "and",
            "Year"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "provide the contour figure for Product_Price and Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price",
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            2,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "contour",
            "figure",
            "for",
            "Product_Price",
            "and",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "Give me a contour figure for Sep and Jan",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Sep",
                    "Jan"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            2,
            [
                [
                    21,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "contour",
            "figure",
            "for",
            "Sep",
            "and",
            "Jan"
        ]
    },
    {
        "db_id": "swimming",
        "question": "Give the contour figure for Capacity and Capacity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Capacity",
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    14,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "contour",
            "figure",
            "for",
            "Capacity",
            "and",
            "Capacity"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "show me the contour figure for the Airline and Airline",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline",
                    "Airline"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            2,
            [
                [
                    10,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "Airline",
            "and",
            "Airline"
        ]
    },
    {
        "db_id": "election",
        "question": "show me the contour figure for Population and Population",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "county",
            "columns": [
                [
                    "Population",
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "Population",
            "and",
            "Population"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "Give me a contour figure for Revenue and Code",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Manufacturers",
            "columns": [
                [
                    "Revenue",
                    "Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    5,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "contour",
            "figure",
            "for",
            "Revenue",
            "and",
            "Code"
        ]
    },
    {
        "db_id": "debate",
        "question": "show me the contour figure for Age and Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "people",
            "columns": [
                [
                    "Age",
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "Age",
            "and",
            "Age"
        ]
    },
    {
        "db_id": "network_2",
        "question": "show me the contour figure for year and year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year",
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "contour",
            "figure",
            "for",
            "year",
            "and",
            "year"
        ]
    },
    {
        "db_id": "climbing",
        "question": "Give the contour figure for the Height and Height",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Height",
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "Height",
            "and",
            "Height"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "provide the contour figure for the SSN and SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN",
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    1,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "contour",
            "figure",
            "for",
            "the",
            "SSN",
            "and",
            "SSN"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "show a violin plot for Killed",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "violin",
            "plot",
            "for",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Give me a violin plot for start_hr",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            9,
            [
                [
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "provide the violin plot for Velocity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Give the violin plot for the authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "show me the violin plot for the Total",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Total"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Give the violin plot for Damage_millions_USD",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "Damage_millions_USD"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "show me the violin plot for the Rank",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "provide the violin plot for Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "show me the violin plot for the year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "year"
        ]
    },
    {
        "db_id": "department_store",
        "question": "provide the violin plot for product_price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "product_price"
        ]
    },
    {
        "db_id": "music_4",
        "question": "Give the violin plot for the Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Age"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "Give the violin plot for the Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "cinema",
        "question": "Give the violin plot for the Capacity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Capacity"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "Give me a violin plot for the Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "the",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "Give me a violin plot for Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "phone",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "Price"
        ]
    },
    {
        "db_id": "store_product",
        "question": "provide the violin plot for Ranking",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "store",
            "columns": [
                [
                    "Ranking"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "Ranking"
        ]
    },
    {
        "db_id": "dog_kennels",
        "question": "Give me a violin plot for charge_amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "charge_amount"
        ]
    },
    {
        "db_id": "music_1",
        "question": "Give me a violin plot for resolution",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "resolution"
        ]
    },
    {
        "db_id": "company_employee",
        "question": "provide the violin plot for Market_Value_in_Billion",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "company",
            "columns": [
                [
                    "Market_Value_in_Billion"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "Market_Value_in_Billion"
        ]
    },
    {
        "db_id": "farm",
        "question": "provide the violin plot for the Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "farm_competition",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Year"
        ]
    },
    {
        "db_id": "solvency_ii",
        "question": "show me the violin plot for Product_Price",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            2,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "Product_Price"
        ]
    },
    {
        "db_id": "city_record",
        "question": "Give me a violin plot for the Oct",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Oct"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            2,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "the",
            "Oct"
        ]
    },
    {
        "db_id": "swimming",
        "question": "show me the violin plot for Capacity",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "Capacity"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "Give me a violin plot for FlightNo",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "violin",
            "plot",
            "for",
            "FlightNo"
        ]
    },
    {
        "db_id": "election",
        "question": "Give the violin plot for Year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "party",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "Year"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "show me the violin plot for the Code",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Manufacturers",
            "columns": [
                [
                    "Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Code"
        ]
    },
    {
        "db_id": "debate",
        "question": "Give the violin plot for Age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "people",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "violin",
            "plot",
            "for",
            "Age"
        ]
    },
    {
        "db_id": "network_2",
        "question": "provide the violin plot for year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "violin",
            "plot",
            "for",
            "year"
        ]
    },
    {
        "db_id": "climbing",
        "question": "show a violin plot for the Points",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "climber",
            "columns": [
                [
                    "Points"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "violin",
            "plot",
            "for",
            "the",
            "Points"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "show me the violin plot for the Hours",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "Projects",
            "columns": [
                [
                    "Hours"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "violin",
            "plot",
            "for",
            "the",
            "Hours"
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "head",
            "columns": [
                [
                    "name",
                    "born_state",
                    "age"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    9,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            ",",
            "born",
            "state",
            "and",
            "age",
            "of",
            "the",
            "heads",
            "of",
            "departments",
            "ordered",
            "by",
            "age",
            "."
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "head",
            "columns": [
                [
                    "name",
                    "born_state",
                    "age"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    9,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            ",",
            "born",
            "state",
            "and",
            "age",
            "of",
            "the",
            "heads",
            "of",
            "departments",
            "ordered",
            "by",
            "age",
            "."
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "department",
            "columns": [
                [
                    "Creation",
                    "Name",
                    "Budget_in_Billions"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3,
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "creation",
            "year",
            ",",
            "name",
            "and",
            "budget",
            "of",
            "each",
            "department",
            "."
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "head",
            "columns": [
                [
                    "name"
                ],
                [
                    "born_state"
                ]
            ],
            "extra_param": [
                [],
                [
                    "born_state",
                    "!=",
                    "California"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "California"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "heads",
            "who",
            "are",
            "born",
            "outside",
            "the",
            "California",
            "state",
            "?"
        ]
    },
    {
        "db_id": "farm",
        "question": "What is the total horses record for each farm, sorted ascending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "farm",
            "columns": [
                [
                    "Total_Horses"
                ],
                [
                    "Total_Horses"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "total",
            "horses",
            "record",
            "for",
            "each",
            "farm",
            ",",
            "sorted",
            "ascending",
            "?"
        ]
    },
    {
        "db_id": "farm",
        "question": "Return the hosts of competitions for which the theme is not Aliens?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "farm_competition",
            "columns": [
                [
                    "Hosts"
                ],
                [
                    "Theme"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Theme",
                    "!=",
                    "Aliens"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    21
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Aliens"
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "hosts",
            "of",
            "competitions",
            "for",
            "which",
            "the",
            "theme",
            "is",
            "not",
            "Aliens",
            "?"
        ]
    },
    {
        "db_id": "farm",
        "question": "Return the themes of farm competitions, sorted by year ascending.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "farm_competition",
            "columns": [
                [
                    "Theme"
                ],
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    19
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "themes",
            "of",
            "farm",
            "competitions",
            ",",
            "sorted",
            "by",
            "year",
            "ascending",
            "."
        ]
    },
    {
        "db_id": "farm",
        "question": "What are the official names of cities, ordered descending by population?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "city",
            "columns": [
                [
                    "Official_Name"
                ],
                [
                    "Population"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "official",
            "names",
            "of",
            "cities",
            ",",
            "ordered",
            "descending",
            "by",
            "population",
            "?"
        ]
    },
    {
        "db_id": "farm",
        "question": "What are the census rankings of cities that do not have the status \"Village\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "city",
            "columns": [
                [
                    "Census_Ranking"
                ],
                [
                    "Status"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Status",
                    "!=",
                    "Village"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Village"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "census",
            "rankings",
            "of",
            "cities",
            "that",
            "do",
            "not",
            "have",
            "the",
            "status",
            "``",
            "Village",
            "''",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "What are the ids of all students who have attended at least one course?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student_Course_Attendance",
            "columns": [
                [
                    "student_id"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "ids",
            "of",
            "all",
            "students",
            "who",
            "have",
            "attended",
            "at",
            "least",
            "one",
            "course",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "What are the ids of the candidates that have an outcome code of Pass?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Candidate_Assessments",
            "columns": [
                [
                    "candidate_id"
                ],
                [
                    "asessment_outcome_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "asessment_outcome_code",
                    "=",
                    "Pass"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    35
                ],
                [
                    38
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Pass"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "ids",
            "of",
            "the",
            "candidates",
            "that",
            "have",
            "an",
            "outcome",
            "code",
            "of",
            "Pass",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "What are the ids of the students who registered for course 301?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student_Course_Attendance",
            "columns": [
                [
                    "student_id"
                ],
                [
                    "course_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "course_id",
                    "=",
                    301.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            6,
            [
                [
                    30
                ],
                [
                    31
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    301.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "ids",
            "of",
            "the",
            "students",
            "who",
            "registered",
            "for",
            "course",
            "301",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "What are the names of the courses in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Courses",
            "columns": [
                [
                    "course_name"
                ],
                [
                    "course_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    19
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "courses",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "What are the first names of the people in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "People",
            "columns": [
                [
                    "first_name"
                ],
                [
                    "first_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "first",
            "names",
            "of",
            "the",
            "people",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "What are the dates with a maximum temperature higher than 85?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "weather",
            "columns": [
                [
                    "date"
                ],
                [
                    "max_temperature_f"
                ]
            ],
            "extra_param": [
                [],
                [
                    "max_temperature_f",
                    ">",
                    85.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    23
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    85.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "dates",
            "with",
            "a",
            "maximum",
            "temperature",
            "higher",
            "than",
            "85",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "What are the names of all stations with a latitude smaller than 37.5?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "name"
                ],
                [
                    "lat"
                ]
            ],
            "extra_param": [
                [],
                [
                    "lat",
                    "<",
                    37.5
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    37.5
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "stations",
            "with",
            "a",
            "latitude",
            "smaller",
            "than",
            "37.5",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "weather",
            "columns": [
                [
                    "date",
                    "zip_code"
                ],
                [
                    "max_temperature_f"
                ]
            ],
            "extra_param": [
                [],
                [
                    "max_temperature_f",
                    ">=",
                    80.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    23,
                    46
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    80.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "zip",
            "codes",
            "have",
            "a",
            "station",
            "with",
            "a",
            "max",
            "temperature",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "80",
            "and",
            "when",
            "did",
            "it",
            "reach",
            "that",
            "temperature",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "What are all the different start station names for a trip that lasted less than 100?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "trip",
            "columns": [
                [
                    "start_station_name"
                ],
                [
                    "duration"
                ]
            ],
            "extra_param": [
                [],
                [
                    "duration",
                    "<",
                    100.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    15
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    100.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "different",
            "start",
            "station",
            "names",
            "for",
            "a",
            "trip",
            "that",
            "lasted",
            "less",
            "than",
            "100",
            "?"
        ]
    },
    {
        "db_id": "book_2",
        "question": "List the titles of the books in ascending order of issues.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "book",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Issues"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    7
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "titles",
            "of",
            "the",
            "books",
            "in",
            "ascending",
            "order",
            "of",
            "issues",
            "."
        ]
    },
    {
        "db_id": "book_2",
        "question": "What are the title and issues of the books?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "book",
            "columns": [
                [
                    "Title",
                    "Issues"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "title",
            "and",
            "issues",
            "of",
            "the",
            "books",
            "?"
        ]
    },
    {
        "db_id": "book_2",
        "question": "What are the distinct publishers of publications with price higher than 5000000?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "publication",
            "columns": [
                [
                    "Publisher"
                ],
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Price",
                    ">",
                    5000000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    5000000.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "publishers",
            "of",
            "publications",
            "with",
            "price",
            "higher",
            "than",
            "5000000",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors, ordered alphabetically?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "actor",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "actors",
            ",",
            "ordered",
            "alphabetically",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "Return the characters and durations for each actor.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "actor",
            "columns": [
                [
                    "Character",
                    "Duration"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "characters",
            "and",
            "durations",
            "for",
            "each",
            "actor",
            "."
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors who are not 20 years old?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "actor",
            "columns": [
                [
                    "Name"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "age",
                    "!=",
                    20.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    20.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "actors",
            "who",
            "are",
            "not",
            "20",
            "years",
            "old",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "Return the characters for actors, ordered by age descending.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "actor",
            "columns": [
                [
                    "Character"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "characters",
            "for",
            "actors",
            ",",
            "ordered",
            "by",
            "age",
            "descending",
            "."
        ]
    },
    {
        "db_id": "musical",
        "question": "Return the names of musicals who have the nominee Bob Fosse.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "musical",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Nominee"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Nominee",
                    "=",
                    "Bob Fosse"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Bob Fosse"
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "names",
            "of",
            "musicals",
            "who",
            "have",
            "the",
            "nominee",
            "Bob",
            "Fosse",
            "."
        ]
    },
    {
        "db_id": "musical",
        "question": "Return the different nominees of musicals that have an award that is not the Tony Award.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "musical",
            "columns": [
                [
                    "Nominee"
                ],
                [
                    "Award"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Award",
                    "!=",
                    "Tony Award"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Tony Award"
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "different",
            "nominees",
            "of",
            "musicals",
            "that",
            "have",
            "an",
            "award",
            "that",
            "is",
            "not",
            "the",
            "Tony",
            "Award",
            "."
        ]
    },
    {
        "db_id": "twitter_1",
        "question": "What is the partition id of the user named \"Iron Man\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "user_profiles",
            "columns": [
                [
                    "partitionid"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Iron Man"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Iron Man"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "partition",
            "id",
            "of",
            "the",
            "user",
            "named",
            "``",
            "Iron",
            "Man",
            "''",
            "."
        ]
    },
    {
        "db_id": "twitter_1",
        "question": "List the name and number of followers for each user, and sort the results by the number of followers in descending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "user_profiles",
            "columns": [
                [
                    "name",
                    "followers"
                ],
                [
                    "followers"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    8,
                    11
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "and",
            "number",
            "of",
            "followers",
            "for",
            "each",
            "user",
            ",",
            "and",
            "sort",
            "the",
            "results",
            "by",
            "the",
            "number",
            "of",
            "followers",
            "in",
            "descending",
            "order",
            "."
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "Find the names of all the catalog entries.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "names",
            "of",
            "all",
            "the",
            "catalog",
            "entries",
            "."
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "What is the attribute data type of the attribute with name \"Green\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Attribute_Definitions",
            "columns": [
                [
                    "attribute_data_type"
                ],
                [
                    "attribute_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "attribute_name",
                    "=",
                    "Green"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Green"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "attribute",
            "data",
            "type",
            "of",
            "the",
            "attribute",
            "with",
            "name",
            "``",
            "Green",
            "''",
            "?"
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "Find the name and capacity of products with price greater than 700 (in USD).",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name",
                    "capacity"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                [
                    "price_in_dollars",
                    ">",
                    700.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17,
                    22
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    700.0
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "name",
            "and",
            "capacity",
            "of",
            "products",
            "with",
            "price",
            "greater",
            "than",
            "700",
            "(",
            "in",
            "USD",
            ")",
            "."
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "Name all the products with next entry ID greater than 8.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ],
                [
                    "next_entry_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "next_entry_id",
                    ">",
                    8.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    8.0
                ]
            ]
        ],
        "question_tokens": [
            "Name",
            "all",
            "the",
            "products",
            "with",
            "next",
            "entry",
            "ID",
            "greater",
            "than",
            "8",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show name and distance for all aircrafts.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "name",
                    "distance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "name",
            "and",
            "distance",
            "for",
            "all",
            "aircrafts",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show ids for all aircrafts with more than 1000 distance.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "aid"
                ],
                [
                    "distance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "distance",
                    ">",
                    1000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    1000.0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "ids",
            "for",
            "all",
            "aircrafts",
            "with",
            "more",
            "than",
            "1000",
            "distance",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the name and distance for aircraft with id 12?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "name",
                    "distance"
                ],
                [
                    "aid"
                ]
            ],
            "extra_param": [
                [],
                [
                    "aid",
                    "=",
                    12.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    10,
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    12.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "distance",
            "for",
            "aircraft",
            "with",
            "id",
            "12",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show name and salary for all employees sorted by salary.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "employee",
            "columns": [
                [
                    "name",
                    "salary"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    13,
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "name",
            "and",
            "salary",
            "for",
            "all",
            "employees",
            "sorted",
            "by",
            "salary",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show ids for all employees with at least 100000 salary.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "eid"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "salary",
                    ">",
                    100000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    100000.0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "ids",
            "for",
            "all",
            "employees",
            "with",
            "at",
            "least",
            "100000",
            "salary",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the name and salary for employee with id 242518965?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "name",
                    "salary"
                ],
                [
                    "eid"
                ]
            ],
            "extra_param": [
                [],
                [
                    "eid",
                    "=",
                    242518965.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    13,
                    14
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    242518965.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "salary",
            "for",
            "employee",
            "with",
            "id",
            "242518965",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show the id and salary of Mark Young.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "eid",
                    "salary"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Mark Young"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12,
                    14
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Mark Young"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "id",
            "and",
            "salary",
            "of",
            "Mark",
            "Young",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "flight",
            "columns": [
                [
                    "flno",
                    "origin",
                    "destination"
                ],
                [
                    "origin"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    1,
                    2,
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "flight",
            "number",
            ",",
            "origin",
            ",",
            "destination",
            "of",
            "all",
            "flights",
            "in",
            "the",
            "alphabetical",
            "order",
            "of",
            "the",
            "departure",
            "cities",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show all flight number from Los Angeles.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "flno"
                ],
                [
                    "origin"
                ]
            ],
            "extra_param": [
                [],
                [
                    "origin",
                    "=",
                    "Los Angeles"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Los Angeles"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "flight",
            "number",
            "from",
            "Los",
            "Angeles",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show origins of all flights with destination Honolulu.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "origin"
                ],
                [
                    "destination"
                ]
            ],
            "extra_param": [
                [],
                [
                    "destination",
                    "=",
                    "Honolulu"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Honolulu"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "origins",
            "of",
            "all",
            "flights",
            "with",
            "destination",
            "Honolulu",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show flight number for all flights with more than 2000 distance.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "flno"
                ],
                [
                    "distance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "distance",
                    ">",
                    2000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    2000.0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "flight",
            "number",
            "for",
            "all",
            "flights",
            "with",
            "more",
            "than",
            "2000",
            "distance",
            "."
        ]
    },
    {
        "db_id": "flight_1",
        "question": "Show origin and destination for flights with price higher than 300.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "origin",
                    "destination"
                ],
                [
                    "price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "price",
                    ">",
                    300.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    300.0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "origin",
            "and",
            "destination",
            "for",
            "flights",
            "with",
            "price",
            "higher",
            "than",
            "300",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show all allergy types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "AllergyType"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "allergy",
            "types",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show all allergies and their types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "Allergy",
                    "AllergyType"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "allergies",
            "and",
            "their",
            "types",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show all allergies with type food.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "Allergy"
                ],
                [
                    "AllergyType"
                ]
            ],
            "extra_param": [
                [],
                [
                    "AllergyType",
                    "=",
                    "food"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "food"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "allergies",
            "with",
            "type",
            "food",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What is the type of allergy Cat?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "AllergyType"
                ],
                [
                    "Allergy"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Allergy",
                    "=",
                    "Cat"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Cat"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "type",
            "of",
            "allergy",
            "Cat",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show first name and last name for all students.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student",
            "columns": [
                [
                    "Fname",
                    "LName"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    7,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "first",
            "name",
            "and",
            "last",
            "name",
            "for",
            "all",
            "students",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show all majors.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student",
            "columns": [
                [
                    "Major"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "majors",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show all cities where students live.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student",
            "columns": [
                [
                    "city_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "cities",
            "where",
            "students",
            "live",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show first name, last name, age for all female students. Their sex is F.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "Fname",
                    "LName",
                    "Age"
                ],
                [
                    "Sex"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Sex",
                    "=",
                    "F"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7,
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "F"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "first",
            "name",
            ",",
            "last",
            "name",
            ",",
            "age",
            "for",
            "all",
            "female",
            "students",
            ".",
            "Their",
            "sex",
            "is",
            "F",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show student ids for all male students.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "StuID"
                ],
                [
                    "Sex"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Sex",
                    "=",
                    "M"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    5
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "M"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "student",
            "ids",
            "for",
            "all",
            "male",
            "students",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Show all student ids who are older than 20.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "StuID"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Age",
                    ">",
                    20.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    5
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    20.0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "student",
            "ids",
            "who",
            "are",
            "older",
            "than",
            "20",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Which city does the student whose last name is \"Kim\" live in?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "city_code"
                ],
                [
                    "LName"
                ]
            ],
            "extra_param": [
                [],
                [
                    "LName",
                    "=",
                    "Kim"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Kim"
                ]
            ]
        ],
        "question_tokens": [
            "Which",
            "city",
            "does",
            "the",
            "student",
            "whose",
            "last",
            "name",
            "is",
            "``",
            "Kim",
            "''",
            "live",
            "in",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Who is the advisor of student with ID 1004?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "Advisor"
                ],
                [
                    "StuID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "StuID",
                    "=",
                    1004.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    11
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    1004.0
                ]
            ]
        ],
        "question_tokens": [
            "Who",
            "is",
            "the",
            "advisor",
            "of",
            "student",
            "with",
            "ID",
            "1004",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "List every album's title.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "every",
            "album",
            "'s",
            "title",
            "."
        ]
    },
    {
        "db_id": "store_1",
        "question": "List every album ordered by album title in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "every",
            "album",
            "ordered",
            "by",
            "album",
            "title",
            "in",
            "ascending",
            "order",
            "."
        ]
    },
    {
        "db_id": "store_1",
        "question": "List all media types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "media_types",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    48
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "media",
            "types",
            "."
        ]
    },
    {
        "db_id": "store_1",
        "question": "List all different genre types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "genres",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    37
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "different",
            "genre",
            "types",
            "."
        ]
    },
    {
        "db_id": "store_1",
        "question": "List the name of all playlist.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "playlists",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    64
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "of",
            "all",
            "playlist",
            "."
        ]
    },
    {
        "db_id": "store_1",
        "question": "Who is the composer of track Fast As a Shark?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "composer"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    54
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "question_tokens": [
            "Who",
            "is",
            "the",
            "composer",
            "of",
            "track",
            "Fast",
            "As",
            "a",
            "Shark",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "How long does track Fast As a Shark has?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "milliseconds"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    55
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "question_tokens": [
            "How",
            "long",
            "does",
            "track",
            "Fast",
            "As",
            "a",
            "Shark",
            "has",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "How much is the track Fast As a Shark?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    57
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "question_tokens": [
            "How",
            "much",
            "is",
            "the",
            "track",
            "Fast",
            "As",
            "a",
            "Shark",
            "?"
        ]
    },
    {
        "db_id": "journal_committee",
        "question": "List the names of editors in ascending order of age.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "editor",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    6
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "editors",
            "in",
            "ascending",
            "order",
            "of",
            "age",
            "."
        ]
    },
    {
        "db_id": "journal_committee",
        "question": "List the names of editors who are older than 25.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "editor",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Age",
                    ">",
                    25.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    6
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    25.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "editors",
            "who",
            "are",
            "older",
            "than",
            "25",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show ids, customer ids, names for all accounts.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "account_id",
                    "customer_id",
                    "account_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "ids",
            ",",
            "customer",
            "ids",
            ",",
            "names",
            "for",
            "all",
            "accounts",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the account ids, customer ids, and account names for all the accounts?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "account_id",
                    "customer_id",
                    "account_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "account",
            "ids",
            ",",
            "customer",
            "ids",
            ",",
            "and",
            "account",
            "names",
            "for",
            "all",
            "the",
            "accounts",
            "?"
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show other account details for account with name 338.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "other_account_details"
                ],
                [
                    "account_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "account_name",
                    "=",
                    338
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    338
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "other",
            "account",
            "details",
            "for",
            "account",
            "with",
            "name",
            "338",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the other account details for the account with the name 338?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "other_account_details"
                ],
                [
                    "account_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "account_name",
                    "=",
                    338
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    338
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "other",
            "account",
            "details",
            "for",
            "the",
            "account",
            "with",
            "the",
            "name",
            "338",
            "?"
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show ids, first names, last names, and phones for all customers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers",
            "columns": [
                [
                    "customer_id",
                    "customer_first_name",
                    "customer_last_name",
                    "customer_phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    5,
                    6,
                    7,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "ids",
            ",",
            "first",
            "names",
            ",",
            "last",
            "names",
            ",",
            "and",
            "phones",
            "for",
            "all",
            "customers",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the ids, full names, and phones of each customer?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers",
            "columns": [
                [
                    "customer_id",
                    "customer_first_name",
                    "customer_last_name",
                    "customer_phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    5,
                    6,
                    7,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "ids",
            ",",
            "full",
            "names",
            ",",
            "and",
            "phones",
            "of",
            "each",
            "customer",
            "?"
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show ids, customer ids, card type codes, card numbers for all cards.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers_Cards",
            "columns": [
                [
                    "card_id",
                    "customer_id",
                    "card_type_code",
                    "card_number"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    12,
                    13,
                    14,
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "ids",
            ",",
            "customer",
            "ids",
            ",",
            "card",
            "type",
            "codes",
            ",",
            "card",
            "numbers",
            "for",
            "all",
            "cards",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are card ids, customer ids, card types, and card numbers for each customer card?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers_Cards",
            "columns": [
                [
                    "card_id",
                    "customer_id",
                    "card_type_code",
                    "card_number"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    12,
                    13,
                    14,
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "card",
            "ids",
            ",",
            "customer",
            "ids",
            ",",
            "card",
            "types",
            ",",
            "and",
            "card",
            "numbers",
            "for",
            "each",
            "customer",
            "card",
            "?"
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customers_Cards",
            "columns": [
                [
                    "date_valid_from",
                    "date_valid_to"
                ],
                [
                    "card_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "card_number",
                    "=",
                    4560596484842
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    16,
                    17
                ],
                [
                    15
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    4560596484842
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "date",
            "valid",
            "from",
            "and",
            "the",
            "date",
            "valid",
            "to",
            "for",
            "the",
            "card",
            "with",
            "card",
            "number",
            "'4560596484842",
            "'",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the valid from and valid to dates for the card with the number 4560596484842?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customers_Cards",
            "columns": [
                [
                    "date_valid_from",
                    "date_valid_to"
                ],
                [
                    "card_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "card_number",
                    "=",
                    4560596484842
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    16,
                    17
                ],
                [
                    15
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    4560596484842
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "valid",
            "from",
            "and",
            "valid",
            "to",
            "dates",
            "for",
            "the",
            "card",
            "with",
            "the",
            "number",
            "4560596484842",
            "?"
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show all card type codes.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers_Cards",
            "columns": [
                [
                    "card_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "card",
            "type",
            "codes",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the different card type codes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers_Cards",
            "columns": [
                [
                    "card_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "card",
            "type",
            "codes",
            "?"
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show all transaction types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Financial_Transactions",
            "columns": [
                [
                    "transaction_type"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "transaction",
            "types",
            "."
        ]
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the different types of transactions?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Financial_Transactions",
            "columns": [
                [
                    "transaction_type"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "types",
            "of",
            "transactions",
            "?"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Show the name and location for all tracks.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "track",
            "columns": [
                [
                    "Name",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "name",
            "and",
            "location",
            "for",
            "all",
            "tracks",
            "."
        ]
    },
    {
        "db_id": "race_track",
        "question": "What are the names and locations of all tracks?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "track",
            "columns": [
                [
                    "Name",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "locations",
            "of",
            "all",
            "tracks",
            "?"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Show names and seatings, ordered by seating for all tracks opened after 2000.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "track",
            "columns": [
                [
                    "Name",
                    "Seating"
                ],
                [
                    "Year_Opened"
                ],
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Year_Opened",
                    ">",
                    2000.0
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            1,
            [
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    2000.0
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "names",
            "and",
            "seatings",
            ",",
            "ordered",
            "by",
            "seating",
            "for",
            "all",
            "tracks",
            "opened",
            "after",
            "2000",
            "."
        ]
    },
    {
        "db_id": "race_track",
        "question": "What are the names and seatings for all tracks opened after 2000, ordered by seating?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "track",
            "columns": [
                [
                    "Name",
                    "Seating"
                ],
                [
                    "Year_Opened"
                ],
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Year_Opened",
                    ">",
                    2000.0
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            1,
            [
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    2000.0
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "seatings",
            "for",
            "all",
            "tracks",
            "opened",
            "after",
            "2000",
            ",",
            "ordered",
            "by",
            "seating",
            "?"
        ]
    },
    {
        "db_id": "race_track",
        "question": "What are distinct locations where tracks are located?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "track",
            "columns": [
                [
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "distinct",
            "locations",
            "where",
            "tracks",
            "are",
            "located",
            "?"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Give the different locations of tracks.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "track",
            "columns": [
                [
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "different",
            "locations",
            "of",
            "tracks",
            "."
        ]
    },
    {
        "db_id": "race_track",
        "question": "What are the distinct classes that races can have?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "race",
            "columns": [
                [
                    "Class"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "classes",
            "that",
            "races",
            "can",
            "have",
            "?"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Return the different classes of races.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "race",
            "columns": [
                [
                    "Class"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "different",
            "classes",
            "of",
            "races",
            "."
        ]
    },
    {
        "db_id": "race_track",
        "question": "Show name, class, and date for all races.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "race",
            "columns": [
                [
                    "Name",
                    "Class",
                    "Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "name",
            ",",
            "class",
            ",",
            "and",
            "date",
            "for",
            "all",
            "races",
            "."
        ]
    },
    {
        "db_id": "race_track",
        "question": "What are the names, classes, and dates for all races?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "race",
            "columns": [
                [
                    "Name",
                    "Class",
                    "Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            ",",
            "classes",
            ",",
            "and",
            "dates",
            "for",
            "all",
            "races",
            "?"
        ]
    },
    {
        "db_id": "coffee_shop",
        "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "member",
            "columns": [
                [
                    "Time_of_purchase",
                    "Age",
                    "Address"
                ],
                [
                    "Time_of_purchase"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10,
                    9,
                    12
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "purchase",
            "time",
            ",",
            "age",
            "and",
            "address",
            "of",
            "each",
            "member",
            ",",
            "and",
            "show",
            "the",
            "results",
            "in",
            "the",
            "order",
            "of",
            "purchase",
            "time",
            "."
        ]
    },
    {
        "db_id": "coffee_shop",
        "question": "Show the shop addresses ordered by their opening year.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "shop",
            "columns": [
                [
                    "Address"
                ],
                [
                    "Open_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "shop",
            "addresses",
            "ordered",
            "by",
            "their",
            "opening",
            "year",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "List the names of all music genres.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Genre",
            "columns": [
                [
                    "Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    35
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "all",
            "music",
            "genres",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are the names of different music genres?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Genre",
            "columns": [
                [
                    "Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    35
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "different",
            "music",
            "genres",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Find all the customer information in state NY.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customer",
            "columns": [
                [
                    "*"
                ],
                [
                    "State"
                ]
            ],
            "extra_param": [
                [],
                [
                    "State",
                    "=",
                    "NY"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "NY"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "all",
            "the",
            "customer",
            "information",
            "in",
            "state",
            "NY",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What is all the customer information for customers in NY state?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customer",
            "columns": [
                [
                    "*"
                ],
                [
                    "State"
                ]
            ],
            "extra_param": [
                [],
                [
                    "State",
                    "=",
                    "NY"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "NY"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "all",
            "the",
            "customer",
            "information",
            "for",
            "customers",
            "in",
            "NY",
            "state",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are the first names and last names of the employees who live in Calgary city.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employee",
            "columns": [
                [
                    "FirstName",
                    "LastName"
                ],
                [
                    "City"
                ]
            ],
            "extra_param": [
                [],
                [
                    "City",
                    "=",
                    "Calgary"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    21,
                    20
                ],
                [
                    27
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Calgary"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "first",
            "names",
            "and",
            "last",
            "names",
            "of",
            "the",
            "employees",
            "who",
            "live",
            "in",
            "Calgary",
            "city",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Find the full names of employees living in the city of Calgary.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employee",
            "columns": [
                [
                    "FirstName",
                    "LastName"
                ],
                [
                    "City"
                ]
            ],
            "extra_param": [
                [],
                [
                    "City",
                    "=",
                    "Calgary"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    21,
                    20
                ],
                [
                    27
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Calgary"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "full",
            "names",
            "of",
            "employees",
            "living",
            "in",
            "the",
            "city",
            "of",
            "Calgary",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are the distinct billing countries of the invoices?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Invoice",
            "columns": [
                [
                    "BillingCountry"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "billing",
            "countries",
            "of",
            "the",
            "invoices",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Find the different billing countries for all invoices.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Invoice",
            "columns": [
                [
                    "BillingCountry"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "different",
            "billing",
            "countries",
            "for",
            "all",
            "invoices",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customer",
            "columns": [
                [
                    "FirstName",
                    "LastName"
                ],
                [
                    "Email"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Email",
                    "=",
                    "luisg@embraer.com.br"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7,
                    8
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "luisg@embraer.com.br"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "first",
            "name",
            "and",
            "last",
            "name",
            "of",
            "the",
            "customer",
            "that",
            "has",
            "email",
            "``",
            "luisg",
            "@",
            "embraer.com.br",
            "''",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customer",
            "columns": [
                [
                    "FirstName",
                    "LastName"
                ],
                [
                    "Email"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Email",
                    "=",
                    "luisg@embraer.com.br"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7,
                    8
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "luisg@embraer.com.br"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "full",
            "name",
            "of",
            "the",
            "customer",
            "with",
            "the",
            "email",
            "``",
            "luisg",
            "@",
            "embraer.com.br",
            "''",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "List the phone numbers of all employees.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Employee",
            "columns": [
                [
                    "Phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "phone",
            "numbers",
            "of",
            "all",
            "employees",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are the phone numbers for each employee?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Employee",
            "columns": [
                [
                    "Phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "phone",
            "numbers",
            "for",
            "each",
            "employee",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Please list all album titles in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Album",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Please",
            "list",
            "all",
            "album",
            "titles",
            "in",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are all the album titles, in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Album",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "album",
            "titles",
            ",",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are the birth dates of employees living in Edmonton?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employee",
            "columns": [
                [
                    "BirthDate"
                ],
                [
                    "City"
                ]
            ],
            "extra_param": [
                [],
                [
                    "City",
                    "=",
                    "Edmonton"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    24
                ],
                [
                    27
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Edmonton"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "birth",
            "dates",
            "of",
            "employees",
            "living",
            "in",
            "Edmonton",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employee",
            "columns": [
                [
                    "BirthDate"
                ],
                [
                    "City"
                ]
            ],
            "extra_param": [
                [],
                [
                    "City",
                    "=",
                    "Edmonton"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    24
                ],
                [
                    27
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Edmonton"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "birth",
            "dates",
            "corresponding",
            "to",
            "employees",
            "who",
            "live",
            "in",
            "the",
            "city",
            "of",
            "Edmonton",
            "."
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "What are the distinct unit prices of all tracks?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Track",
            "columns": [
                [
                    "UnitPrice"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    64
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "unit",
            "prices",
            "of",
            "all",
            "tracks",
            "?"
        ]
    },
    {
        "db_id": "chinook_1",
        "question": "Find the distinct unit prices for tracks.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Track",
            "columns": [
                [
                    "UnitPrice"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    64
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "distinct",
            "unit",
            "prices",
            "for",
            "tracks",
            "."
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "Find all the phone numbers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Available_Policies",
            "columns": [
                [
                    "Customer_Phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "all",
            "the",
            "phone",
            "numbers",
            "."
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "What are all the phone numbers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Available_Policies",
            "columns": [
                [
                    "Customer_Phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "phone",
            "numbers",
            "?"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Available_Policies",
            "columns": [
                [
                    "Customer_Phone"
                ],
                [
                    "policy_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "policy_type_code",
                    "=",
                    "Life Insurance"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Life Insurance"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "customer",
            "phone",
            "numbers",
            "under",
            "the",
            "policy",
            "``",
            "Life",
            "Insurance",
            "''",
            "?"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Available_Policies",
            "columns": [
                [
                    "Customer_Phone"
                ],
                [
                    "policy_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "policy_type_code",
                    "=",
                    "Life Insurance"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Life Insurance"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "phone",
            "numbers",
            "of",
            "customers",
            "using",
            "the",
            "policy",
            "with",
            "the",
            "code",
            "``",
            "Life",
            "Insurance",
            "''",
            "?"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "List all the services in the alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Services",
            "columns": [
                [
                    "Service_name"
                ],
                [
                    "Service_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "the",
            "services",
            "in",
            "the",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "Give me a list of all the service names sorted alphabetically.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Services",
            "columns": [
                [
                    "Service_name"
                ],
                [
                    "Service_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "list",
            "of",
            "all",
            "the",
            "service",
            "names",
            "sorted",
            "alphabetically",
            "."
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "List all the customers in increasing order of IDs.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_ID",
                    "Customer_name"
                ],
                [
                    "Customer_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    1,
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "the",
            "customers",
            "in",
            "increasing",
            "order",
            "of",
            "IDs",
            "."
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "What is the ordered list of customer ids?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_ID",
                    "Customer_name"
                ],
                [
                    "Customer_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    1,
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "ordered",
            "list",
            "of",
            "customer",
            "ids",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "List the name of enzymes in descending lexicographical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "of",
            "enzymes",
            "in",
            "descending",
            "lexicographical",
            "order",
            "."
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the names of enzymes in descending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "enzymes",
            "in",
            "descending",
            "order",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "List the names and the locations that the enzymes can make an effect.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "name",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "and",
            "the",
            "locations",
            "that",
            "the",
            "enzymes",
            "can",
            "make",
            "an",
            "effect",
            "."
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the names and locations of all enzymes listed?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "name",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "locations",
            "of",
            "all",
            "enzymes",
            "listed",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "Product",
                    "Chromosome",
                    "Porphyria"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location",
                    "=",
                    "Cytosol"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    9,
                    11
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Cytosol"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "product",
            ",",
            "chromosome",
            "and",
            "porphyria",
            "related",
            "to",
            "the",
            "enzymes",
            "which",
            "take",
            "effect",
            "at",
            "the",
            "location",
            "'Cytosol",
            "'",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "Product",
                    "Chromosome",
                    "Porphyria"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location",
                    "=",
                    "Cytosol"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    9,
                    11
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Cytosol"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "product",
            ",",
            "chromosome",
            ",",
            "and",
            "porphyria",
            "of",
            "the",
            "enzymes",
            "located",
            "at",
            "'Cytosol",
            "'",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the names of enzymes who does not produce 'Heme'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "name"
                ],
                [
                    "Product"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Product",
                    "!=",
                    "Heme"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    6
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Heme"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "enzymes",
            "who",
            "does",
            "not",
            "produce",
            "'Heme",
            "'",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the names of enzymes whose product is not 'Heme'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "enzyme",
            "columns": [
                [
                    "name"
                ],
                [
                    "Product"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Product",
                    "!=",
                    "Heme"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    6
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Heme"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "enzymes",
            "whose",
            "product",
            "is",
            "not",
            "'Heme",
            "'",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "medicine",
            "columns": [
                [
                    "name",
                    "Trade_Name"
                ],
                [
                    "FDA_approved"
                ]
            ],
            "extra_param": [
                [],
                [
                    "FDA_approved",
                    "=",
                    "Yes"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Yes"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "trade",
            "names",
            "of",
            "the",
            "medicines",
            "which",
            "has",
            "'Yes",
            "'",
            "value",
            "in",
            "the",
            "FDA",
            "record",
            "?"
        ]
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the names and trade names of the medcines that are FDA approved?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "medicine",
            "columns": [
                [
                    "name",
                    "Trade_Name"
                ],
                [
                    "FDA_approved"
                ]
            ],
            "extra_param": [
                [],
                [
                    "FDA_approved",
                    "=",
                    "Yes"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Yes"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "trade",
            "names",
            "of",
            "the",
            "medcines",
            "that",
            "are",
            "FDA",
            "approved",
            "?"
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "List all schools and their nicknames in the order of founded year.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "university",
            "columns": [
                [
                    "School",
                    "Nickname"
                ],
                [
                    "Founded"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    14,
                    19
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "schools",
            "and",
            "their",
            "nicknames",
            "in",
            "the",
            "order",
            "of",
            "founded",
            "year",
            "."
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "What are the different schools and their nicknames, ordered by their founding years?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "university",
            "columns": [
                [
                    "School",
                    "Nickname"
                ],
                [
                    "Founded"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    14,
                    19
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "schools",
            "and",
            "their",
            "nicknames",
            ",",
            "ordered",
            "by",
            "their",
            "founding",
            "years",
            "?"
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "List all public schools and their locations.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "university",
            "columns": [
                [
                    "School",
                    "Location"
                ],
                [
                    "Affiliation"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Affiliation",
                    "=",
                    "Public"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    14,
                    15
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Public"
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "public",
            "schools",
            "and",
            "their",
            "locations",
            "."
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "What are the public schools and what are their locations?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "university",
            "columns": [
                [
                    "School",
                    "Location"
                ],
                [
                    "Affiliation"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Affiliation",
                    "=",
                    "Public"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    14,
                    15
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Public"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "public",
            "schools",
            "and",
            "what",
            "are",
            "their",
            "locations",
            "?"
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "List all information regarding the basketball match.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "basketball_match",
            "columns": [
                [
                    "*"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                []
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "information",
            "regarding",
            "the",
            "basketball",
            "match",
            "."
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "What is all the information about the basketball match?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "basketball_match",
            "columns": [
                [
                    "*"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                []
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "all",
            "the",
            "information",
            "about",
            "the",
            "basketball",
            "match",
            "?"
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "basketball_match",
            "columns": [
                [
                    "Team_Name"
                ],
                [
                    "All_Home"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "names",
            "of",
            "all",
            "teams",
            "in",
            "the",
            "basketball",
            "competition",
            ",",
            "ordered",
            "by",
            "all",
            "home",
            "scores",
            "in",
            "descending",
            "order",
            "."
        ]
    },
    {
        "db_id": "university_basketball",
        "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "basketball_match",
            "columns": [
                [
                    "Team_Name"
                ],
                [
                    "All_Home"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "the",
            "teams",
            "in",
            "the",
            "basketball",
            "competition",
            ",",
            "sorted",
            "by",
            "all",
            "home",
            "scores",
            "in",
            "descending",
            "order",
            "?"
        ]
    },
    {
        "db_id": "phone_1",
        "question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "phone",
            "columns": [
                [
                    "chip_model",
                    "screen_mode"
                ],
                [
                    "Hardware_Model_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Hardware_Model_name",
                    "=",
                    "LG-P760"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    20,
                    21
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "LG-P760"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "chip",
            "model",
            "and",
            "screen",
            "mode",
            "of",
            "the",
            "phone",
            "with",
            "hardware",
            "model",
            "name",
            "``",
            "LG-P760",
            "''",
            "?"
        ]
    },
    {
        "db_id": "phone_1",
        "question": "Find the details for all chip models.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "chip_model",
            "columns": [
                [
                    "*"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                []
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "details",
            "for",
            "all",
            "chip",
            "models",
            "."
        ]
    },
    {
        "db_id": "phone_1",
        "question": "List all the model names sorted by their launch year.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "chip_model",
            "columns": [
                [
                    "Model_name"
                ],
                [
                    "Launch_year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "the",
            "model",
            "names",
            "sorted",
            "by",
            "their",
            "launch",
            "year",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "Show the country name and capital of all countries.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "country",
            "columns": [
                [
                    "Country_name",
                    "Capital"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "country",
            "name",
            "and",
            "capital",
            "of",
            "all",
            "countries",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "What are the names and capitals of each country?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "country",
            "columns": [
                [
                    "Country_name",
                    "Capital"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "capitals",
            "of",
            "each",
            "country",
            "?"
        ]
    },
    {
        "db_id": "match_season",
        "question": "Show all distinct positions of matches.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Position"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "distinct",
            "positions",
            "of",
            "matches",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "What are the different positions for match season?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Position"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "positions",
            "for",
            "match",
            "season",
            "?"
        ]
    },
    {
        "db_id": "match_season",
        "question": "Show the players from college UCLA.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Player"
                ],
                [
                    "College"
                ]
            ],
            "extra_param": [
                [],
                [
                    "College",
                    "=",
                    "UCLA"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    8
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UCLA"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "players",
            "from",
            "college",
            "UCLA",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "Who are the players from UCLA?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Player"
                ],
                [
                    "College"
                ]
            ],
            "extra_param": [
                [],
                [
                    "College",
                    "=",
                    "UCLA"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    8
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UCLA"
                ]
            ]
        ],
        "question_tokens": [
            "Who",
            "are",
            "the",
            "players",
            "from",
            "UCLA",
            "?"
        ]
    },
    {
        "db_id": "match_season",
        "question": "Show the draft pick numbers and draft classes of players whose positions are defenders.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Draft_Pick_Number",
                    "Draft_Class"
                ],
                [
                    "Position"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Position",
                    "=",
                    "Defender"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12,
                    13
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Defender"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "draft",
            "pick",
            "numbers",
            "and",
            "draft",
            "classes",
            "of",
            "players",
            "whose",
            "positions",
            "are",
            "defenders",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "What are the draft pick numbers and draft classes for players who play the Defender position?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Draft_Pick_Number",
                    "Draft_Class"
                ],
                [
                    "Position"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Position",
                    "=",
                    "Defender"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12,
                    13
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Defender"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "draft",
            "pick",
            "numbers",
            "and",
            "draft",
            "classes",
            "for",
            "players",
            "who",
            "play",
            "the",
            "Defender",
            "position",
            "?"
        ]
    },
    {
        "db_id": "match_season",
        "question": "Show the players and the years played.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "player",
            "columns": [
                [
                    "Player",
                    "Years_Played"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    16,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "players",
            "and",
            "the",
            "years",
            "played",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "Who are the different players and how many years has each played?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "player",
            "columns": [
                [
                    "Player",
                    "Years_Played"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    16,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Who",
            "are",
            "the",
            "different",
            "players",
            "and",
            "how",
            "many",
            "years",
            "has",
            "each",
            "played",
            "?"
        ]
    },
    {
        "db_id": "match_season",
        "question": "Show all team names.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "team",
            "columns": [
                [
                    "Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "team",
            "names",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "What are the names of all teams?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "team",
            "columns": [
                [
                    "Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "teams",
            "?"
        ]
    },
    {
        "db_id": "match_season",
        "question": "Return all players sorted by college in ascending alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Player"
                ],
                [
                    "College"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    8
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "all",
            "players",
            "sorted",
            "by",
            "college",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "match_season",
        "question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "match_season",
            "columns": [
                [
                    "Player"
                ],
                [
                    "College"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    8
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "players",
            "who",
            "played",
            "in",
            "match",
            "season",
            ",",
            "sorted",
            "by",
            "college",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "climbing",
        "question": "List the names of climbers in descending order of points.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "climber",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "climbers",
            "in",
            "descending",
            "order",
            "of",
            "points",
            "."
        ]
    },
    {
        "db_id": "climbing",
        "question": "What are the names of the climbers, ordered by points descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "climber",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "climbers",
            ",",
            "ordered",
            "by",
            "points",
            "descending",
            "?"
        ]
    },
    {
        "db_id": "climbing",
        "question": "List the names of climbers whose country is not Switzerland.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "climber",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Country"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Country",
                    "!=",
                    "Switzerland"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Switzerland"
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "climbers",
            "whose",
            "country",
            "is",
            "not",
            "Switzerland",
            "."
        ]
    },
    {
        "db_id": "climbing",
        "question": "What are the names of climbers who are not from the country of Switzerland?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "climber",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Country"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Country",
                    "!=",
                    "Switzerland"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Switzerland"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "climbers",
            "who",
            "are",
            "not",
            "from",
            "the",
            "country",
            "of",
            "Switzerland",
            "?"
        ]
    },
    {
        "db_id": "climbing",
        "question": "What are the names of mountains in ascending alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "mountains",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "climbing",
        "question": "Give the names of mountains in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "names",
            "of",
            "mountains",
            "in",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "climbing",
        "question": "What are the countries of mountains with height bigger than 5000?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Country"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    ">",
                    5000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    5000.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "countries",
            "of",
            "mountains",
            "with",
            "height",
            "bigger",
            "than",
            "5000",
            "?"
        ]
    },
    {
        "db_id": "climbing",
        "question": "Return the countries of the mountains that have a height larger than 5000.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "mountain",
            "columns": [
                [
                    "Country"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    ">",
                    5000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    5000.0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "countries",
            "of",
            "the",
            "mountains",
            "that",
            "have",
            "a",
            "height",
            "larger",
            "than",
            "5000",
            "."
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the total scores of body builders in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "total",
            "scores",
            "of",
            "body",
            "builders",
            "in",
            "ascending",
            "order",
            "."
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch",
                    "Clean_Jerk"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "snatch",
            "score",
            "and",
            "clean",
            "jerk",
            "score",
            "of",
            "body",
            "builders",
            "in",
            "ascending",
            "order",
            "of",
            "snatch",
            "score",
            "."
        ]
    },
    {
        "db_id": "body_builder",
        "question": "What are the birthdays of people in ascending order of height?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Date"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "birthdays",
            "of",
            "people",
            "in",
            "ascending",
            "order",
            "of",
            "height",
            "?"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the height and weight of people in descending order of height.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Weight"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    9
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "height",
            "and",
            "weight",
            "of",
            "people",
            "in",
            "descending",
            "order",
            "of",
            "height",
            "."
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show all information about each body builder.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "*"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                []
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "information",
            "about",
            "each",
            "body",
            "builder",
            "."
        ]
    },
    {
        "db_id": "election_representative",
        "question": "List the votes of elections in descending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "election",
            "columns": [
                [
                    "Votes"
                ],
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "votes",
            "of",
            "elections",
            "in",
            "descending",
            "order",
            "."
        ]
    },
    {
        "db_id": "election_representative",
        "question": "List the dates and vote percents of elections.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "election",
            "columns": [
                [
                    "Date",
                    "Vote_Percent"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "dates",
            "and",
            "vote",
            "percents",
            "of",
            "elections",
            "."
        ]
    },
    {
        "db_id": "election_representative",
        "question": "What are the names and parties of representatives?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "representative",
            "columns": [
                [
                    "Name",
                    "Party"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    9,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "parties",
            "of",
            "representatives",
            "?"
        ]
    },
    {
        "db_id": "election_representative",
        "question": "What are the names of representatives whose party is not \"Republican\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "representative",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Party"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Party",
                    "!=",
                    "Republican"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Republican"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "representatives",
            "whose",
            "party",
            "is",
            "not",
            "``",
            "Republican",
            "''",
            "?"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the start dates and end dates of all the apartment bookings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_start_date",
                    "booking_end_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "start",
            "dates",
            "and",
            "end",
            "dates",
            "of",
            "all",
            "the",
            "apartment",
            "bookings",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the start date and end date of each apartment booking?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_start_date",
                    "booking_end_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "start",
            "date",
            "and",
            "end",
            "date",
            "of",
            "each",
            "apartment",
            "booking",
            "?"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show all distinct building descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "distinct",
            "building",
            "descriptions",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Give me a list of all the distinct building descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "list",
            "of",
            "all",
            "the",
            "distinct",
            "building",
            "descriptions",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the short names of the buildings managed by \"Emma\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_short_name"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Emma"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Emma"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "short",
            "names",
            "of",
            "the",
            "buildings",
            "managed",
            "by",
            "``",
            "Emma",
            "''",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_short_name"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Emma"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Emma"
                ]
            ]
        ],
        "question_tokens": [
            "Which",
            "buildings",
            "does",
            "``",
            "Emma",
            "''",
            "manage",
            "?",
            "Give",
            "me",
            "the",
            "short",
            "names",
            "of",
            "the",
            "buildings",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the addresses and phones of all the buildings managed by \"Brenden\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_address",
                    "building_phone"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Brenden"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5,
                    7
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Brenden"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "addresses",
            "and",
            "phones",
            "of",
            "all",
            "the",
            "buildings",
            "managed",
            "by",
            "``",
            "Brenden",
            "''",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the address and phone number of the buildings managed by \"Brenden\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_address",
                    "building_phone"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Brenden"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5,
                    7
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Brenden"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "address",
            "and",
            "phone",
            "number",
            "of",
            "the",
            "buildings",
            "managed",
            "by",
            "``",
            "Brenden",
            "''",
            "?"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the apartment number and the number of rooms for each apartment.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "number",
            "of",
            "rooms",
            "for",
            "each",
            "apartment",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the apartment number and the room count of each apartment?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "apartment",
            "number",
            "and",
            "the",
            "room",
            "count",
            "of",
            "each",
            "apartment",
            "?"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "apt_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "apt_type_code",
                    "=",
                    "Flat"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Flat"
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "apartment",
            "numbers",
            "of",
            "the",
            "apartments",
            "with",
            "type",
            "code",
            "``",
            "Flat",
            "''",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "apt_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "apt_type_code",
                    "=",
                    "Flat"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Flat"
                ]
            ]
        ],
        "question_tokens": [
            "Which",
            "apartments",
            "have",
            "type",
            "code",
            "``",
            "Flat",
            "''",
            "?",
            "Give",
            "me",
            "their",
            "apartment",
            "numbers",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the first names and last names of all guests",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Guests",
            "columns": [
                [
                    "guest_first_name",
                    "guest_last_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    19,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "first",
            "names",
            "and",
            "last",
            "names",
            "of",
            "all",
            "guests"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the first names and last names of all the guests?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Guests",
            "columns": [
                [
                    "guest_first_name",
                    "guest_last_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    19,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "first",
            "names",
            "and",
            "last",
            "names",
            "of",
            "all",
            "the",
            "guests",
            "?"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the date of birth for all the guests with gender code \"Male\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Guests",
            "columns": [
                [
                    "date_of_birth"
                ],
                [
                    "gender_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "gender_code",
                    "=",
                    "Male"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    21
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Male"
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "date",
            "of",
            "birth",
            "for",
            "all",
            "the",
            "guests",
            "with",
            "gender",
            "code",
            "``",
            "Male",
            "''",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Guests",
            "columns": [
                [
                    "date_of_birth"
                ],
                [
                    "gender_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "gender_code",
                    "=",
                    "Male"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    21
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Male"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "dates",
            "of",
            "birth",
            "of",
            "all",
            "the",
            "guests",
            "whose",
            "gender",
            "is",
            "``",
            "Male",
            "''",
            "?"
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return all the apartment numbers sorted by the room count in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "all",
            "the",
            "apartment",
            "numbers",
            "sorted",
            "by",
            "the",
            "room",
            "count",
            "in",
            "ascending",
            "order",
            "."
        ]
    },
    {
        "db_id": "apartment_rentals",
        "question": "Sort the apartment numbers in ascending order of room count.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Sort",
            "the",
            "apartment",
            "numbers",
            "in",
            "ascending",
            "order",
            "of",
            "room",
            "count",
            "."
        ]
    },
    {
        "db_id": "game_injury",
        "question": "List the dates of games by the home team name in descending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "game",
            "columns": [
                [
                    "Date"
                ],
                [
                    "Home_team"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "dates",
            "of",
            "games",
            "by",
            "the",
            "home",
            "team",
            "name",
            "in",
            "descending",
            "order",
            "."
        ]
    },
    {
        "db_id": "game_injury",
        "question": "List the season, home team, away team of all the games.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "game",
            "columns": [
                [
                    "Season",
                    "Home_team",
                    "Away_team"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    9,
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "season",
            ",",
            "home",
            "team",
            ",",
            "away",
            "team",
            "of",
            "all",
            "the",
            "games",
            "."
        ]
    },
    {
        "db_id": "game_injury",
        "question": "What is the average attendance of stadiums with capacity percentage higher than 100%?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "stadium",
            "columns": [
                [
                    "Average_Attendance"
                ],
                [
                    "Capacity_Percentage"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Capacity_Percentage",
                    ">",
                    100.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    100.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "average",
            "attendance",
            "of",
            "stadiums",
            "with",
            "capacity",
            "percentage",
            "higher",
            "than",
            "100",
            "%",
            "?"
        ]
    },
    {
        "db_id": "game_injury",
        "question": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "injury_accident",
            "columns": [
                [
                    "Player",
                    "Number_of_matches",
                    "Source"
                ],
                [
                    "Injury"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Injury",
                    "!=",
                    "Knee problem"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    17,
                    19,
                    20
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Knee problem"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "player",
            "name",
            ",",
            "number",
            "of",
            "matches",
            ",",
            "and",
            "information",
            "source",
            "for",
            "players",
            "who",
            "do",
            "not",
            "suffer",
            "from",
            "injury",
            "of",
            "'Knee",
            "problem",
            "'",
            "?"
        ]
    },
    {
        "db_id": "performance_attendance",
        "question": "List the hosts of performances in ascending order of attendance.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "performance",
            "columns": [
                [
                    "Host"
                ],
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    7
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "hosts",
            "of",
            "performances",
            "in",
            "ascending",
            "order",
            "of",
            "attendance",
            "."
        ]
    },
    {
        "db_id": "performance_attendance",
        "question": "What are the dates and locations of performances?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "performance",
            "columns": [
                [
                    "Date",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "dates",
            "and",
            "locations",
            "of",
            "performances",
            "?"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find the buildings which have rooms with capacity more than 50.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "classroom",
            "columns": [
                [
                    "building"
                ],
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [],
                [
                    "capacity",
                    ">",
                    50.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    50.0
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "buildings",
            "which",
            "have",
            "rooms",
            "with",
            "capacity",
            "more",
            "than",
            "50",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "What are the distinct buildings with capacities of greater than 50?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "classroom",
            "columns": [
                [
                    "building"
                ],
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [],
                [
                    "capacity",
                    ">",
                    50.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    50.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "buildings",
            "with",
            "capacities",
            "of",
            "greater",
            "than",
            "50",
            "?"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the names of all courses ordered by their titles and credits.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "course",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "all",
            "courses",
            "ordered",
            "by",
            "their",
            "titles",
            "and",
            "credits",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "Given the titles of all courses, in order of titles and credits.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "course",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Given",
            "the",
            "titles",
            "of",
            "all",
            "courses",
            ",",
            "in",
            "order",
            "of",
            "titles",
            "and",
            "credits",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the names and buildings of all departments sorted by the budget from large to small.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "department",
            "columns": [
                [
                    "dept_name",
                    "building"
                ],
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "and",
            "buildings",
            "of",
            "all",
            "departments",
            "sorted",
            "by",
            "the",
            "budget",
            "from",
            "large",
            "to",
            "small",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "What are the names and buildings of the deparments, sorted by budget descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "department",
            "columns": [
                [
                    "dept_name",
                    "building"
                ],
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "buildings",
            "of",
            "the",
            "deparments",
            ",",
            "sorted",
            "by",
            "budget",
            "descending",
            "?"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the information of all instructors ordered by their salary in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "instructor",
            "columns": [
                [
                    "*"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "information",
            "of",
            "all",
            "instructors",
            "ordered",
            "by",
            "their",
            "salary",
            "in",
            "ascending",
            "order",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "Give all information regarding instructors, in order of salary from least to greatest.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "instructor",
            "columns": [
                [
                    "*"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Give",
            "all",
            "information",
            "regarding",
            "instructors",
            ",",
            "in",
            "order",
            "of",
            "salary",
            "from",
            "least",
            "to",
            "greatest",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find the name of the students and their department names sorted by their total credits in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "student",
            "columns": [
                [
                    "name",
                    "dept_name"
                ],
                [
                    "tot_cred"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            6,
            [
                [
                    28,
                    29
                ],
                [
                    30
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "name",
            "of",
            "the",
            "students",
            "and",
            "their",
            "department",
            "names",
            "sorted",
            "by",
            "their",
            "total",
            "credits",
            "in",
            "ascending",
            "order",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "What are the names of students and their respective departments, ordered by number of credits from least to greatest?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "student",
            "columns": [
                [
                    "name",
                    "dept_name"
                ],
                [
                    "tot_cred"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            6,
            [
                [
                    28,
                    29
                ],
                [
                    30
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "students",
            "and",
            "their",
            "respective",
            "departments",
            ",",
            "ordered",
            "by",
            "number",
            "of",
            "credits",
            "from",
            "least",
            "to",
            "greatest",
            "?"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find the names of all instructors in computer science department",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "instructor",
            "columns": [
                [
                    "name"
                ],
                [
                    "dept_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "dept_name",
                    "=",
                    "Comp. Sci."
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    12
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Comp. Sci."
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "names",
            "of",
            "all",
            "instructors",
            "in",
            "computer",
            "science",
            "department"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What are the names of all instructors in the Comp. Sci. department?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "instructor",
            "columns": [
                [
                    "name"
                ],
                [
                    "dept_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "dept_name",
                    "=",
                    "Comp. Sci."
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    12
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Comp. Sci."
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "instructors",
            "in",
            "the",
            "Comp",
            ".",
            "Sci",
            ".",
            "department",
            "?"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List in alphabetic order the names of all distinct instructors.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "instructor",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "in",
            "alphabetic",
            "order",
            "the",
            "names",
            "of",
            "all",
            "distinct",
            "instructors",
            "."
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the distinct names of the instructors, ordered by name.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "instructor",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "distinct",
            "names",
            "of",
            "the",
            "instructors",
            ",",
            "ordered",
            "by",
            "name",
            "."
        ]
    },
    {
        "db_id": "debate",
        "question": "List the venues of debates in ascending order of the number of audience.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "debate",
            "columns": [
                [
                    "Venue"
                ],
                [
                    "Num_of_Audience"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "venues",
            "of",
            "debates",
            "in",
            "ascending",
            "order",
            "of",
            "the",
            "number",
            "of",
            "audience",
            "."
        ]
    },
    {
        "db_id": "debate",
        "question": "What are the date and venue of each debate?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "debate",
            "columns": [
                [
                    "Date",
                    "Venue"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "date",
            "and",
            "venue",
            "of",
            "each",
            "debate",
            "?"
        ]
    },
    {
        "db_id": "debate",
        "question": "List the dates of debates with number of audience bigger than 150",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "debate",
            "columns": [
                [
                    "Date"
                ],
                [
                    "Num_of_Audience"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Num_of_Audience",
                    ">",
                    150.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    7
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    150.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "dates",
            "of",
            "debates",
            "with",
            "number",
            "of",
            "audience",
            "bigger",
            "than",
            "150"
        ]
    },
    {
        "db_id": "debate",
        "question": "Show the distinct venues of debates",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "debate",
            "columns": [
                [
                    "Venue"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "distinct",
            "venues",
            "of",
            "debates"
        ]
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "List the names of all the customers in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_Details"
                ],
                [
                    "Customer_Details"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "all",
            "the",
            "customers",
            "in",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Sort the customer names in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_Details"
                ],
                [
                    "Customer_Details"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Sort",
            "the",
            "customer",
            "names",
            "in",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "What is the description of the claim status \"Open\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Claims_Processing_Stages",
            "columns": [
                [
                    "Claim_Status_Description"
                ],
                [
                    "Claim_Status_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Claim_Status_Name",
                    "=",
                    "Open"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    25
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Open"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "description",
            "of",
            "the",
            "claim",
            "status",
            "``",
            "Open",
            "''",
            "?"
        ]
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Find the description of the claim status \"Open\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Claims_Processing_Stages",
            "columns": [
                [
                    "Claim_Status_Description"
                ],
                [
                    "Claim_Status_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Claim_Status_Name",
                    "=",
                    "Open"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    25
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Open"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "description",
            "of",
            "the",
            "claim",
            "status",
            "``",
            "Open",
            "''",
            "."
        ]
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Show the id, the date of account opened, the account name, and other account detail for all accounts.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "account_id",
                    "date_account_opened",
                    "account_name",
                    "other_account_details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    20,
                    22,
                    23,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "id",
            ",",
            "the",
            "date",
            "of",
            "account",
            "opened",
            ",",
            "the",
            "account",
            "name",
            ",",
            "and",
            "other",
            "account",
            "detail",
            "for",
            "all",
            "accounts",
            "."
        ]
    },
    {
        "db_id": "customers_and_invoices",
        "question": "What are the ids, date opened, name, and other details for all accounts?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "account_id",
                    "date_account_opened",
                    "account_name",
                    "other_account_details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    20,
                    22,
                    23,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "ids",
            ",",
            "date",
            "opened",
            ",",
            "name",
            ",",
            "and",
            "other",
            "details",
            "for",
            "all",
            "accounts",
            "?"
        ]
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Show all product sizes.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_size"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    34
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "product",
            "sizes",
            "."
        ]
    },
    {
        "db_id": "customers_and_invoices",
        "question": "What are the different product sizes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_size"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    34
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "product",
            "sizes",
            "?"
        ]
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Show all product colors.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_color"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    33
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "product",
            "colors",
            "."
        ]
    },
    {
        "db_id": "customers_and_invoices",
        "question": "What are the different product colors?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_color"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    33
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "product",
            "colors",
            "?"
        ]
    },
    {
        "db_id": "wedding",
        "question": "Show the name, open date, and organizer for all churches.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "church",
            "columns": [
                [
                    "Name",
                    "Open_Date",
                    "Organized_by"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    9,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "name",
            ",",
            "open",
            "date",
            ",",
            "and",
            "organizer",
            "for",
            "all",
            "churches",
            "."
        ]
    },
    {
        "db_id": "wedding",
        "question": "List all church names in descending order of opening date.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "church",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Open_Date"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    7
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "church",
            "names",
            "in",
            "descending",
            "order",
            "of",
            "opening",
            "date",
            "."
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "Show all artist name, age, and country ordered by the yeared they joined.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Age",
                    "Country"
                ],
                [
                    "Year_Join"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    5,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "artist",
            "name",
            ",",
            "age",
            ",",
            "and",
            "country",
            "ordered",
            "by",
            "the",
            "yeared",
            "they",
            "joined",
            "."
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the names, ages, and countries of artists, sorted by the year they joined?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Age",
                    "Country"
                ],
                [
                    "Year_Join"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    5,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            ",",
            "ages",
            ",",
            "and",
            "countries",
            "of",
            "artists",
            ",",
            "sorted",
            "by",
            "the",
            "year",
            "they",
            "joined",
            "?"
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "What are all distinct country for artists?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "artist",
            "columns": [
                [
                    "Country"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "distinct",
            "country",
            "for",
            "artists",
            "?"
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "Return the different countries for artists.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "artist",
            "columns": [
                [
                    "Country"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "different",
            "countries",
            "for",
            "artists",
            "."
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "Show all artist names and the year joined who are not from United States.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Year_Join"
                ],
                [
                    "Country"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Country",
                    "!=",
                    "United States"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "United States"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "artist",
            "names",
            "and",
            "the",
            "year",
            "joined",
            "who",
            "are",
            "not",
            "from",
            "United",
            "States",
            "."
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the names and year of joining for artists that do not have the country \"United States\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Year_Join"
                ],
                [
                    "Country"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Country",
                    "!=",
                    "United States"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "United States"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "year",
            "of",
            "joining",
            "for",
            "artists",
            "that",
            "do",
            "not",
            "have",
            "the",
            "country",
            "``",
            "United",
            "States",
            "''",
            "?"
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "Show theme and year for all exhibitions with ticket prices lower than 15.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    "<",
                    15.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    15.0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "theme",
            "and",
            "year",
            "for",
            "all",
            "exhibitions",
            "with",
            "ticket",
            "prices",
            "lower",
            "than",
            "15",
            "."
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the theme and year for all exhibitions that have a ticket price under 15?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    "<",
                    15.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    15.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "theme",
            "and",
            "year",
            "for",
            "all",
            "exhibitions",
            "that",
            "have",
            "a",
            "ticket",
            "price",
            "under",
            "15",
            "?"
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "Show theme and year for all exhibitions in an descending order of ticket price.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "theme",
            "and",
            "year",
            "for",
            "all",
            "exhibitions",
            "in",
            "an",
            "descending",
            "order",
            "of",
            "ticket",
            "price",
            "."
        ]
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the themes and years for exhibitions, sorted by ticket price descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "themes",
            "and",
            "years",
            "for",
            "exhibitions",
            ",",
            "sorted",
            "by",
            "ticket",
            "price",
            "descending",
            "?"
        ]
    },
    {
        "db_id": "epinions_1",
        "question": "Find the id of the item whose title is \"orange\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "item",
            "columns": [
                [
                    "i_id"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "title",
                    "=",
                    "orange"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "orange"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "id",
            "of",
            "the",
            "item",
            "whose",
            "title",
            "is",
            "``",
            "orange",
            "''",
            "."
        ]
    },
    {
        "db_id": "epinions_1",
        "question": "List all information in the item table.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "item",
            "columns": [
                [
                    "*"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                []
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "information",
            "in",
            "the",
            "item",
            "table",
            "."
        ]
    },
    {
        "db_id": "epinions_1",
        "question": "List the titles of all items in alphabetic order .",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "item",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "titles",
            "of",
            "all",
            "items",
            "in",
            "alphabetic",
            "order",
            "."
        ]
    },
    {
        "db_id": "riding_club",
        "question": "List the names of players in ascending order of votes.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "player",
            "columns": [
                [
                    "Player_name"
                ],
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "players",
            "in",
            "ascending",
            "order",
            "of",
            "votes",
            "."
        ]
    },
    {
        "db_id": "riding_club",
        "question": "What are the gender and occupation of players?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "player",
            "columns": [
                [
                    "Gender",
                    "Occupation"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "gender",
            "and",
            "occupation",
            "of",
            "players",
            "?"
        ]
    },
    {
        "db_id": "riding_club",
        "question": "List the name and residence for players whose occupation is not \"Researcher\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "player",
            "columns": [
                [
                    "Player_name",
                    "Residence"
                ],
                [
                    "Occupation"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Occupation",
                    "!=",
                    "Researcher"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3,
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Researcher"
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "and",
            "residence",
            "for",
            "players",
            "whose",
            "occupation",
            "is",
            "not",
            "``",
            "Researcher",
            "''",
            "."
        ]
    },
    {
        "db_id": "gymnast",
        "question": "List the total points of gymnasts in descending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gymnast",
            "columns": [
                [
                    "Total_Points"
                ],
                [
                    "Total_Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "total",
            "points",
            "of",
            "gymnasts",
            "in",
            "descending",
            "order",
            "."
        ]
    },
    {
        "db_id": "gymnast",
        "question": "What are the total points for all gymnasts, ordered by total points descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gymnast",
            "columns": [
                [
                    "Total_Points"
                ],
                [
                    "Total_Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "total",
            "points",
            "for",
            "all",
            "gymnasts",
            ",",
            "ordered",
            "by",
            "total",
            "points",
            "descending",
            "?"
        ]
    },
    {
        "db_id": "gymnast",
        "question": "List the total points of gymnasts in descending order of floor exercise points.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gymnast",
            "columns": [
                [
                    "Total_Points"
                ],
                [
                    "Floor_Exercise_Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    8
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "total",
            "points",
            "of",
            "gymnasts",
            "in",
            "descending",
            "order",
            "of",
            "floor",
            "exercise",
            "points",
            "."
        ]
    },
    {
        "db_id": "gymnast",
        "question": "What are the total points of gymnasts, ordered by their floor exercise points descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gymnast",
            "columns": [
                [
                    "Total_Points"
                ],
                [
                    "Floor_Exercise_Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    8
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "total",
            "points",
            "of",
            "gymnasts",
            ",",
            "ordered",
            "by",
            "their",
            "floor",
            "exercise",
            "points",
            "descending",
            "?"
        ]
    },
    {
        "db_id": "gymnast",
        "question": "What are the names of people in ascending alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "people",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "gymnast",
        "question": "Return the names of people, ordered alphabetically.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "names",
            "of",
            "people",
            ",",
            "ordered",
            "alphabetically",
            "."
        ]
    },
    {
        "db_id": "small_bank_1",
        "question": "List all customers\u2019 names in the alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "ACCOUNTS",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "customers",
            "\u2019",
            "names",
            "in",
            "the",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "small_bank_1",
        "question": "What are the names of all the customers in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "ACCOUNTS",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "the",
            "customers",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the name of browsers in descending order by market share.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "browser",
            "columns": [
                [
                    "name"
                ],
                [
                    "market_share"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    7
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "of",
            "browsers",
            "in",
            "descending",
            "order",
            "by",
            "market",
            "share",
            "."
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the ids, names and market shares of all browsers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "browser",
            "columns": [
                [
                    "id",
                    "name",
                    "market_share"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6,
                    7,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "ids",
            ",",
            "names",
            "and",
            "market",
            "shares",
            "of",
            "all",
            "browsers",
            "."
        ]
    },
    {
        "db_id": "browser_web",
        "question": "What is the id and market share of the browser Safari?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "browser",
            "columns": [
                [
                    "id",
                    "market_share"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Safari"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    6,
                    8
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Safari"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "id",
            "and",
            "market",
            "share",
            "of",
            "the",
            "browser",
            "Safari",
            "?"
        ]
    },
    {
        "db_id": "browser_web",
        "question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Web_client_accelerator",
            "columns": [
                [
                    "name",
                    "Operating_system"
                ],
                [
                    "Connection"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Connection",
                    "!=",
                    "Broadband"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Broadband"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "name",
            "and",
            "os",
            "of",
            "web",
            "client",
            "accelerators",
            "that",
            "do",
            "not",
            "work",
            "with",
            "only",
            "a",
            "'Broadband",
            "'",
            "type",
            "connection",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "List the names of wrestlers in descending order of days held.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Days_held"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "wrestlers",
            "in",
            "descending",
            "order",
            "of",
            "days",
            "held",
            "."
        ]
    },
    {
        "db_id": "wrestler",
        "question": "What are the names of the wrestlers, ordered descending by days held?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Days_held"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "wrestlers",
            ",",
            "ordered",
            "descending",
            "by",
            "days",
            "held",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Reign"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location",
                    "!=",
                    "Tokyo , Japan"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Tokyo , Japan"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "reigns",
            "of",
            "wrestlers",
            "whose",
            "location",
            "is",
            "not",
            "``",
            "Tokyo",
            ",",
            "Japan",
            "''",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "Give the different reigns of wrestlers who are not located in Tokyo, Japan.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Reign"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location",
                    "!=",
                    "Tokyo , Japan"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Tokyo , Japan"
                ]
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "different",
            "reigns",
            "of",
            "wrestlers",
            "who",
            "are",
            "not",
            "located",
            "in",
            "Tokyo",
            ",",
            "Japan",
            "."
        ]
    },
    {
        "db_id": "wrestler",
        "question": "What are the names and location of the wrestlers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Name",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "location",
            "of",
            "the",
            "wrestlers",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "Give the names and locations of all wrestlers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Name",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "names",
            "and",
            "locations",
            "of",
            "all",
            "wrestlers",
            "."
        ]
    },
    {
        "db_id": "wrestler",
        "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Elimination",
            "columns": [
                [
                    "Elimination_Move"
                ],
                [
                    "Team"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Team",
                    "=",
                    "Team Orton"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Team Orton"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "elimination",
            "moves",
            "of",
            "wrestlers",
            "whose",
            "team",
            "is",
            "``",
            "Team",
            "Orton",
            "''",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "Return the elimination movies of wrestlers on Team Orton.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Elimination",
            "columns": [
                [
                    "Elimination_Move"
                ],
                [
                    "Team"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Team",
                    "=",
                    "Team Orton"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Team Orton"
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "elimination",
            "movies",
            "of",
            "wrestlers",
            "on",
            "Team",
            "Orton",
            "."
        ]
    },
    {
        "db_id": "wrestler",
        "question": "Show the reign and days held of wrestlers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Reign",
                    "Days_held"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "reign",
            "and",
            "days",
            "held",
            "of",
            "wrestlers",
            "."
        ]
    },
    {
        "db_id": "wrestler",
        "question": "What are the reigns and days held of all wrestlers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Reign",
                    "Days_held"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "reigns",
            "and",
            "days",
            "held",
            "of",
            "all",
            "wrestlers",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "What are the names of wrestlers days held less than 100?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Days_held"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Days_held",
                    "<",
                    100.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    100.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "wrestlers",
            "days",
            "held",
            "less",
            "than",
            "100",
            "?"
        ]
    },
    {
        "db_id": "wrestler",
        "question": "Return the names of wrestlers with fewer than 100 days held.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "wrestler",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Days_held"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Days_held",
                    "<",
                    100.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    100.0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "names",
            "of",
            "wrestlers",
            "with",
            "fewer",
            "than",
            "100",
            "days",
            "held",
            "."
        ]
    },
    {
        "db_id": "school_finance",
        "question": "Show all school names in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "School",
            "columns": [
                [
                    "School_name"
                ],
                [
                    "School_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "school",
            "names",
            "in",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "school_finance",
        "question": "List the name, location, mascot for all schools.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "School",
            "columns": [
                [
                    "School_name",
                    "Location",
                    "Mascot"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            ",",
            "location",
            ",",
            "mascot",
            "for",
            "all",
            "schools",
            "."
        ]
    },
    {
        "db_id": "school_finance",
        "question": "Show all donor names.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "endowment",
            "columns": [
                [
                    "donator_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "donor",
            "names",
            "."
        ]
    },
    {
        "db_id": "protein_institute",
        "question": "Show the name, street address, and number of floors for all buildings ordered by the number of floors.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "building",
            "columns": [
                [
                    "Name",
                    "Street_address",
                    "Floors"
                ],
                [
                    "Floors"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    3,
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "name",
            ",",
            "street",
            "address",
            ",",
            "and",
            "number",
            "of",
            "floors",
            "for",
            "all",
            "buildings",
            "ordered",
            "by",
            "the",
            "number",
            "of",
            "floors",
            "."
        ]
    },
    {
        "db_id": "protein_institute",
        "question": "Show all the distinct institution types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Institution",
            "columns": [
                [
                    "Type"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "the",
            "distinct",
            "institution",
            "types",
            "."
        ]
    },
    {
        "db_id": "cinema",
        "question": "Show name, opening year, and capacity for each cinema.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Name",
                    "Openning_year",
                    "Capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    9,
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "name",
            ",",
            "opening",
            "year",
            ",",
            "and",
            "capacity",
            "for",
            "each",
            "cinema",
            "."
        ]
    },
    {
        "db_id": "cinema",
        "question": "What are all the locations with a cinema?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "locations",
            "with",
            "a",
            "cinema",
            "?"
        ]
    },
    {
        "db_id": "cinema",
        "question": "Find the distinct locations that has a cinema.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "distinct",
            "locations",
            "that",
            "has",
            "a",
            "cinema",
            "."
        ]
    },
    {
        "db_id": "cinema",
        "question": "Show all the cinema names and opening years in descending order of opening year.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "cinema",
            "columns": [
                [
                    "Name",
                    "Openning_year"
                ],
                [
                    "Openning_year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "the",
            "cinema",
            "names",
            "and",
            "opening",
            "years",
            "in",
            "descending",
            "order",
            "of",
            "opening",
            "year",
            "."
        ]
    },
    {
        "db_id": "cinema",
        "question": "Show the title and director for all films.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "film",
            "columns": [
                [
                    "Title",
                    "Directed_by"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "title",
            "and",
            "director",
            "for",
            "all",
            "films",
            "."
        ]
    },
    {
        "db_id": "cinema",
        "question": "What are the title and director of each film?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "film",
            "columns": [
                [
                    "Title",
                    "Directed_by"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "title",
            "and",
            "director",
            "of",
            "each",
            "film",
            "?"
        ]
    },
    {
        "db_id": "cinema",
        "question": "Show all directors.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "film",
            "columns": [
                [
                    "Directed_by"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "directors",
            "."
        ]
    },
    {
        "db_id": "cinema",
        "question": "Who are all the directors?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "film",
            "columns": [
                [
                    "Directed_by"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Who",
            "are",
            "all",
            "the",
            "directors",
            "?"
        ]
    },
    {
        "db_id": "products_for_hire",
        "question": "What are the first name, last name, and gender of all the good customers? Order by their last name.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "Customers",
            "columns": [
                [
                    "first_name",
                    "last_name",
                    "gender_mf"
                ],
                [
                    "good_or_bad_customer"
                ],
                [
                    "last_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "good_or_bad_customer",
                    "=",
                    "good"
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            1,
            [
                [
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "good"
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "first",
            "name",
            ",",
            "last",
            "name",
            ",",
            "and",
            "gender",
            "of",
            "all",
            "the",
            "good",
            "customers",
            "?",
            "Order",
            "by",
            "their",
            "last",
            "name",
            "."
        ]
    },
    {
        "db_id": "products_for_hire",
        "question": "What are all the distinct payment types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Payments",
            "columns": [
                [
                    "payment_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "distinct",
            "payment",
            "types",
            "?"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "List the names of phones in ascending order of price.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "phone",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    1
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "phones",
            "in",
            "ascending",
            "order",
            "of",
            "price",
            "."
        ]
    },
    {
        "db_id": "phone_market",
        "question": "What are the memories and carriers of phones?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "phone",
            "columns": [
                [
                    "Memory_in_G",
                    "Carrier"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "memories",
            "and",
            "carriers",
            "of",
            "phones",
            "?"
        ]
    },
    {
        "db_id": "phone_market",
        "question": "List the distinct carriers of phones with memories bigger than 32.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "phone",
            "columns": [
                [
                    "Carrier"
                ],
                [
                    "Memory_in_G"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Memory_in_G",
                    ">",
                    32.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    32.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "distinct",
            "carriers",
            "of",
            "phones",
            "with",
            "memories",
            "bigger",
            "than",
            "32",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "List the company name and rank for all companies in the decreasing order of their sales.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "company",
            "columns": [
                [
                    "Company",
                    "Rank"
                ],
                [
                    "Sales_billion"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "company",
            "name",
            "and",
            "rank",
            "for",
            "all",
            "companies",
            "in",
            "the",
            "decreasing",
            "order",
            "of",
            "their",
            "sales",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What is the name and rank of every company ordered by descending number of sales?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "company",
            "columns": [
                [
                    "Company",
                    "Rank"
                ],
                [
                    "Sales_billion"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "rank",
            "of",
            "every",
            "company",
            "ordered",
            "by",
            "descending",
            "number",
            "of",
            "sales",
            "?"
        ]
    },
    {
        "db_id": "gas_company",
        "question": "Show the company name and the main industry for all companies whose headquarters are not from USA.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "company",
            "columns": [
                [
                    "Company",
                    "Main_Industry"
                ],
                [
                    "Headquarters"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Headquarters",
                    "!=",
                    "USA"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3,
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "USA"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "company",
            "name",
            "and",
            "the",
            "main",
            "industry",
            "for",
            "all",
            "companies",
            "whose",
            "headquarters",
            "are",
            "not",
            "from",
            "USA",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What are the companies and main industries of all companies that are not headquartered in the United States?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "company",
            "columns": [
                [
                    "Company",
                    "Main_Industry"
                ],
                [
                    "Headquarters"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Headquarters",
                    "!=",
                    "USA"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3,
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "USA"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "companies",
            "and",
            "main",
            "industries",
            "of",
            "all",
            "companies",
            "that",
            "are",
            "not",
            "headquartered",
            "in",
            "the",
            "United",
            "States",
            "?"
        ]
    },
    {
        "db_id": "gas_company",
        "question": "Show all company names and headquarters in the descending order of market value.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "company",
            "columns": [
                [
                    "Company",
                    "Headquarters"
                ],
                [
                    "Market_Value"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    4
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "company",
            "names",
            "and",
            "headquarters",
            "in",
            "the",
            "descending",
            "order",
            "of",
            "market",
            "value",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What are the names and headquarters of all companies ordered by descending market value?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "company",
            "columns": [
                [
                    "Company",
                    "Headquarters"
                ],
                [
                    "Market_Value"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    4
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "headquarters",
            "of",
            "all",
            "companies",
            "ordered",
            "by",
            "descending",
            "market",
            "value",
            "?"
        ]
    },
    {
        "db_id": "gas_company",
        "question": "Show all main industry for all companies.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "company",
            "columns": [
                [
                    "Main_Industry"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "main",
            "industry",
            "for",
            "all",
            "companies",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What are the different main industries for all companies?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "company",
            "columns": [
                [
                    "Main_Industry"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "main",
            "industries",
            "for",
            "all",
            "companies",
            "?"
        ]
    },
    {
        "db_id": "gas_company",
        "question": "Show gas station id, location, and manager_name for all gas stations ordered by open year.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gas_station",
            "columns": [
                [
                    "Station_ID",
                    "Location",
                    "Manager_Name"
                ],
                [
                    "Open_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10,
                    12,
                    13
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "gas",
            "station",
            "id",
            ",",
            "location",
            ",",
            "and",
            "manager_name",
            "for",
            "all",
            "gas",
            "stations",
            "ordered",
            "by",
            "open",
            "year",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gas_station",
            "columns": [
                [
                    "Station_ID",
                    "Location",
                    "Manager_Name"
                ],
                [
                    "Open_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10,
                    12,
                    13
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "gas",
            "station",
            "ids",
            ",",
            "locations",
            ",",
            "and",
            "manager",
            "names",
            "for",
            "the",
            "gas",
            "stations",
            "ordered",
            "by",
            "opening",
            "year",
            "?"
        ]
    },
    {
        "db_id": "gas_company",
        "question": "order all gas station locations by the opening year.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gas_station",
            "columns": [
                [
                    "Location"
                ],
                [
                    "Open_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "order",
            "all",
            "gas",
            "station",
            "locations",
            "by",
            "the",
            "opening",
            "year",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What are the locations of all the gas stations ordered by opening year?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "gas_station",
            "columns": [
                [
                    "Location"
                ],
                [
                    "Open_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "locations",
            "of",
            "all",
            "the",
            "gas",
            "stations",
            "ordered",
            "by",
            "opening",
            "year",
            "?"
        ]
    },
    {
        "db_id": "gas_company",
        "question": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "company",
            "columns": [
                [
                    "Rank",
                    "Company",
                    "Market_Value"
                ],
                [
                    "Main_Industry"
                ],
                [
                    "Sales_billion"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Main_Industry",
                    "=",
                    "Banking"
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    2,
                    3,
                    9
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Banking"
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "the",
            "rank",
            ",",
            "company",
            "names",
            ",",
            "market",
            "values",
            "of",
            "the",
            "companies",
            "in",
            "the",
            "banking",
            "industry",
            "order",
            "by",
            "their",
            "sales",
            "and",
            "profits",
            "in",
            "billion",
            "."
        ]
    },
    {
        "db_id": "gas_company",
        "question": "What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "company",
            "columns": [
                [
                    "Rank",
                    "Company",
                    "Market_Value"
                ],
                [
                    "Main_Industry"
                ],
                [
                    "Sales_billion"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Main_Industry",
                    "=",
                    "Banking"
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    2,
                    3,
                    9
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Banking"
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "rank",
            ",",
            "company",
            ",",
            "and",
            "market",
            "value",
            "of",
            "every",
            "comapny",
            "in",
            "the",
            "banking",
            "industry",
            "ordered",
            "by",
            "sales",
            "and",
            "profits",
            "?"
        ]
    },
    {
        "db_id": "party_people",
        "question": "Show all distinct region names ordered by their labels.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "region",
            "columns": [
                [
                    "Region_name"
                ],
                [
                    "Label"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "distinct",
            "region",
            "names",
            "ordered",
            "by",
            "their",
            "labels",
            "."
        ]
    },
    {
        "db_id": "party_people",
        "question": "What are the different region names, ordered by labels?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "region",
            "columns": [
                [
                    "Region_name"
                ],
                [
                    "Label"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "region",
            "names",
            ",",
            "ordered",
            "by",
            "labels",
            "?"
        ]
    },
    {
        "db_id": "party_people",
        "question": "Show the ministers and the time they took and left office, listed by the time they left office.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "party",
            "columns": [
                [
                    "Minister",
                    "Took_office",
                    "Left_office"
                ],
                [
                    "Left_office"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    9,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "ministers",
            "and",
            "the",
            "time",
            "they",
            "took",
            "and",
            "left",
            "office",
            ",",
            "listed",
            "by",
            "the",
            "time",
            "they",
            "left",
            "office",
            "."
        ]
    },
    {
        "db_id": "party_people",
        "question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "party",
            "columns": [
                [
                    "Minister",
                    "Took_office",
                    "Left_office"
                ],
                [
                    "Left_office"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    9,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "Who",
            "are",
            "the",
            "ministers",
            ",",
            "when",
            "did",
            "they",
            "take",
            "office",
            ",",
            "and",
            "when",
            "did",
            "they",
            "leave",
            "office",
            ",",
            "ordered",
            "by",
            "when",
            "they",
            "left",
            "office",
            "?"
        ]
    },
    {
        "db_id": "party_people",
        "question": "Show all ministers who do not belong to Progress Party.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "party",
            "columns": [
                [
                    "Minister"
                ],
                [
                    "Party_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Party_name",
                    "!=",
                    "Progress Party"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Progress Party"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "ministers",
            "who",
            "do",
            "not",
            "belong",
            "to",
            "Progress",
            "Party",
            "."
        ]
    },
    {
        "db_id": "party_people",
        "question": "Which ministers are not a part of the Progress Party?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "party",
            "columns": [
                [
                    "Minister"
                ],
                [
                    "Party_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Party_name",
                    "!=",
                    "Progress Party"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Progress Party"
                ]
            ]
        ],
        "question_tokens": [
            "Which",
            "ministers",
            "are",
            "not",
            "a",
            "part",
            "of",
            "the",
            "Progress",
            "Party",
            "?"
        ]
    },
    {
        "db_id": "party_people",
        "question": "Show all ministers and parties they belong to in descending order of the time they took office.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "party",
            "columns": [
                [
                    "Minister",
                    "Party_name"
                ],
                [
                    "Took_office"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    12
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "all",
            "ministers",
            "and",
            "parties",
            "they",
            "belong",
            "to",
            "in",
            "descending",
            "order",
            "of",
            "the",
            "time",
            "they",
            "took",
            "office",
            "."
        ]
    },
    {
        "db_id": "party_people",
        "question": "Who are the ministers and what parties do they belong to, listed descending by the times they took office?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "party",
            "columns": [
                [
                    "Minister",
                    "Party_name"
                ],
                [
                    "Took_office"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    12
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "Who",
            "are",
            "the",
            "ministers",
            "and",
            "what",
            "parties",
            "do",
            "they",
            "belong",
            "to",
            ",",
            "listed",
            "descending",
            "by",
            "the",
            "times",
            "they",
            "took",
            "office",
            "?"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "List the names of pilots in ascending order of rank.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Pilot_name"
                ],
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "pilots",
            "in",
            "ascending",
            "order",
            "of",
            "rank",
            "."
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "What are the positions and teams of pilots?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Position",
                    "Team"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    13,
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "positions",
            "and",
            "teams",
            "of",
            "pilots",
            "?"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "List the distinct positions of pilots older than 30.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Position"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Age",
                    ">",
                    30.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    13
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    30.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "distinct",
            "positions",
            "of",
            "pilots",
            "older",
            "than",
            "30",
            "."
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What document status codes do we have?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Status",
            "columns": [
                [
                    "document_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "document",
            "status",
            "codes",
            "do",
            "we",
            "have",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the description of document status code 'working'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Status",
            "columns": [
                [
                    "document_status_description"
                ],
                [
                    "document_status_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_status_code",
                    "=",
                    "working"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    8
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "working"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "description",
            "of",
            "document",
            "status",
            "code",
            "'working",
            "'",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What document type codes do we have?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "document_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "document",
            "type",
            "codes",
            "do",
            "we",
            "have",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the description of document type 'Paper'?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "document_type_description"
                ],
                [
                    "document_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_type_code",
                    "=",
                    "Paper"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Paper"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "description",
            "of",
            "document",
            "type",
            "'Paper",
            "'",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What are the shipping agent names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Shipping_Agents",
            "columns": [
                [
                    "shipping_agent_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "shipping",
            "agent",
            "names",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the shipping agent code of shipping agent UPS?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Shipping_Agents",
            "columns": [
                [
                    "shipping_agent_code"
                ],
                [
                    "shipping_agent_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "shipping_agent_name",
                    "=",
                    "UPS"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    9
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UPS"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "shipping",
            "agent",
            "code",
            "of",
            "shipping",
            "agent",
            "UPS",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What are all role codes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Roles",
            "columns": [
                [
                    "role_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "role",
            "codes",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the description of role code ED?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Roles",
            "columns": [
                [
                    "role_description"
                ],
                [
                    "role_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "role_code",
                    "=",
                    "ED"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "ED"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "description",
            "of",
            "role",
            "code",
            "ED",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "List all document ids and receipt dates of documents.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_id",
                    "receipt_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    12,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "document",
            "ids",
            "and",
            "receipt",
            "dates",
            "of",
            "documents",
            "."
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "List the document type code for the document with the id 2.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_type_code"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    2.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    14
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    2.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "document",
            "type",
            "code",
            "for",
            "the",
            "document",
            "with",
            "the",
            "id",
            "2",
            "."
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the receipt date of the document with id 3?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "receipt_date"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    3.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    16
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    3.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "receipt",
            "date",
            "of",
            "the",
            "document",
            "with",
            "id",
            "3",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the mail date of the document with id 7?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents_Mailed",
            "columns": [
                [
                    "mailing_date"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    7.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            10,
            [
                [
                    35
                ],
                [
                    33
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    7.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mail",
            "date",
            "of",
            "the",
            "document",
            "with",
            "id",
            "7",
            "?"
        ]
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is draft detail of the document with id 7?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Document_Drafts",
            "columns": [
                [
                    "draft_details"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    7.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            7,
            [
                [
                    25
                ],
                [
                    23
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    7.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "draft",
            "detail",
            "of",
            "the",
            "document",
            "with",
            "id",
            "7",
            "?"
        ]
    },
    {
        "db_id": "company_1",
        "question": "List all department names ordered by their starting date.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "department",
            "columns": [
                [
                    "Dname"
                ],
                [
                    "Mgr_start_date"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    14
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "department",
            "names",
            "ordered",
            "by",
            "their",
            "starting",
            "date",
            "."
        ]
    },
    {
        "db_id": "company_1",
        "question": "find all dependent names who have a spouse relation with some employee.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "dependent",
            "columns": [
                [
                    "Dependent_name"
                ],
                [
                    "Relationship"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Relationship",
                    "=",
                    "Spouse"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    23
                ],
                [
                    26
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Spouse"
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "all",
            "dependent",
            "names",
            "who",
            "have",
            "a",
            "spouse",
            "relation",
            "with",
            "some",
            "employee",
            "."
        ]
    },
    {
        "db_id": "company_1",
        "question": "Return the first names and last names of employees who earn more than 30000 in salary.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "Fname",
                    "Lname"
                ],
                [
                    "Salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Salary",
                    ">",
                    30000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    4,
                    6
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    30000.0
                ]
            ]
        ],
        "question_tokens": [
            "Return",
            "the",
            "first",
            "names",
            "and",
            "last",
            "names",
            "of",
            "employees",
            "who",
            "earn",
            "more",
            "than",
            "30000",
            "in",
            "salary",
            "."
        ]
    },
    {
        "db_id": "company_1",
        "question": "list the first and last names, and the addresses of all employees in the ascending order of their birth date.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "employee",
            "columns": [
                [
                    "Fname",
                    "Lname",
                    "Address"
                ],
                [
                    "Bdate"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4,
                    6,
                    9
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "list",
            "the",
            "first",
            "and",
            "last",
            "names",
            ",",
            "and",
            "the",
            "addresses",
            "of",
            "all",
            "employees",
            "in",
            "the",
            "ascending",
            "order",
            "of",
            "their",
            "birth",
            "date",
            "."
        ]
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "What are all the the participant ids, type code and details?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Participants",
            "columns": [
                [
                    "Participant_ID",
                    "Participant_Type_Code",
                    "Participant_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    3,
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "the",
            "participant",
            "ids",
            ",",
            "type",
            "code",
            "and",
            "details",
            "?"
        ]
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "List the type of the services in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Services",
            "columns": [
                [
                    "Service_Type_Code"
                ],
                [
                    "Service_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "type",
            "of",
            "the",
            "services",
            "in",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "List the service id and details for the events.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Events",
            "columns": [
                [
                    "Service_ID",
                    "Event_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    7,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "service",
            "id",
            "and",
            "details",
            "for",
            "the",
            "events",
            "."
        ]
    },
    {
        "db_id": "formula_1",
        "question": "Find the names of all races held in 2017.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "races",
            "columns": [
                [
                    "name"
                ],
                [
                    "year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "year",
                    "=",
                    2017.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    14
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    2017.0
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "names",
            "of",
            "all",
            "races",
            "held",
            "in",
            "2017",
            "."
        ]
    },
    {
        "db_id": "formula_1",
        "question": "What are the names of all the races that occurred in the year 2017?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "races",
            "columns": [
                [
                    "name"
                ],
                [
                    "year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "year",
                    "=",
                    2017.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    14
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    2017.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "the",
            "races",
            "that",
            "occurred",
            "in",
            "the",
            "year",
            "2017",
            "?"
        ]
    },
    {
        "db_id": "formula_1",
        "question": "Find the forename and surname of drivers whose nationality is German?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "drivers",
            "columns": [
                [
                    "forename",
                    "surname"
                ],
                [
                    "nationality"
                ]
            ],
            "extra_param": [
                [],
                [
                    "nationality",
                    "=",
                    "German"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    22,
                    23
                ],
                [
                    25
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "German"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "forename",
            "and",
            "surname",
            "of",
            "drivers",
            "whose",
            "nationality",
            "is",
            "German",
            "?"
        ]
    },
    {
        "db_id": "formula_1",
        "question": "What is the first and last name of all the German drivers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "drivers",
            "columns": [
                [
                    "forename",
                    "surname"
                ],
                [
                    "nationality"
                ]
            ],
            "extra_param": [
                [],
                [
                    "nationality",
                    "=",
                    "German"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    22,
                    23
                ],
                [
                    25
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "German"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "first",
            "and",
            "last",
            "name",
            "of",
            "all",
            "the",
            "German",
            "drivers",
            "?"
        ]
    },
    {
        "db_id": "formula_1",
        "question": "List the forenames of all distinct drivers in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "drivers",
            "columns": [
                [
                    "forename"
                ],
                [
                    "forename"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    22
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "forenames",
            "of",
            "all",
            "distinct",
            "drivers",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "formula_1",
        "question": "What are the first names of all the different drivers in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "drivers",
            "columns": [
                [
                    "forename"
                ],
                [
                    "forename"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    22
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "first",
            "names",
            "of",
            "all",
            "the",
            "different",
            "drivers",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "formula_1",
        "question": "List the names of all distinct races in reversed  lexicographic order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "races",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "all",
            "distinct",
            "races",
            "in",
            "reversed",
            "lexicographic",
            "order",
            "?"
        ]
    },
    {
        "db_id": "formula_1",
        "question": "What are the different names of all the races in reverse alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "races",
            "columns": [
                [
                    "name"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "names",
            "of",
            "all",
            "the",
            "races",
            "in",
            "reverse",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Calculate mean for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Calculate mean of the department budget",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "of",
            "the",
            "department",
            "budget"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate mean for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Calculate mean of the affected_region Number_city_affected",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "of",
            "the",
            "affected_region",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Calculate mean for the track Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "for",
            "the",
            "track",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Calculate mean for Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "for",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find weighted mean for the takes year and year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "takes",
            "columns": [
                [
                    "year",
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            7,
            [
                [
                    35,
                    35
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "weighted",
            "mean",
            "for",
            "the",
            "takes",
            "year",
            "and",
            "year"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the weighted mean of the Authorship authOrder and authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "weighted",
            "mean",
            "of",
            "the",
            "Authorship",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Calculate weighted mean for affected_region Number_city_affected and Number_city_affected",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected",
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            2,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "weighted",
            "mean",
            "for",
            "affected_region",
            "Number_city_affected",
            "and",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Calculate weighted mean for track Year_Opened and Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened",
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            1,
            [
                [
                    10,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "weighted",
            "mean",
            "for",
            "track",
            "Year_Opened",
            "and",
            "Year_Opened"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the weighted mean of the Product_Suppliers total_value_purchased and total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased",
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            12,
            [
                [
                    51,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "weighted",
            "mean",
            "of",
            "the",
            "Product_Suppliers",
            "total_value_purchased",
            "and",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Provide the trimmed mean of the time_slot end_hr with trimmed percental equal to 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            9,
            [
                [
                    43
                ]
            ],
            [
                [
                    2,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "trimmed",
            "mean",
            "of",
            "the",
            "time_slot",
            "end_hr",
            "with",
            "trimmed",
            "percental",
            "equal",
            "to",
            "20",
            "%"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate trimmed mean for Authorship authOrder with trimmed percental equal to 10%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.1
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    2,
                    0,
                    0.1
                ]
            ]
        ],
        "question_tokens": [
            "Calculate",
            "trimmed",
            "mean",
            "for",
            "Authorship",
            "authOrder",
            "with",
            "trimmed",
            "percental",
            "equal",
            "to",
            "10",
            "%"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "What is the trimmed mean for storm Number_Deaths with trimmed percental equal to 10%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.1
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                [
                    2,
                    0,
                    0.1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "trimmed",
            "mean",
            "for",
            "storm",
            "Number_Deaths",
            "with",
            "trimmed",
            "percental",
            "equal",
            "to",
            "10",
            "%"
        ]
    },
    {
        "db_id": "race_track",
        "question": "What is the trimmed mean for track Seating with truncated percental of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    2,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "trimmed",
            "mean",
            "for",
            "track",
            "Seating",
            "with",
            "truncated",
            "percental",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Show me the trimmed mean for Product_Suppliers total_value_purchased with trimmed percental equal to 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                [
                    2,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "trimmed",
            "mean",
            "for",
            "Product_Suppliers",
            "total_value_purchased",
            "with",
            "trimmed",
            "percental",
            "equal",
            "to",
            "20",
            "%"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the mean absolute deviation for course credits",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "course",
            "columns": [
                [
                    "credits"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mean",
            "absolute",
            "deviation",
            "for",
            "course",
            "credits"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate mean absolute deviation for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "absolute",
            "deviation",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "What is the mean absolute deviation of the storm Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mean",
            "absolute",
            "deviation",
            "of",
            "the",
            "storm",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Find mean absolute deviation of the track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mean",
            "absolute",
            "deviation",
            "of",
            "the",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Calculate mean absolute deviation for the Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "absolute",
            "deviation",
            "for",
            "the",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Calculate median for the section year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "section",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            4,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "median",
            "for",
            "the",
            "section",
            "year"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Find median for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Calculate median for affected_region Number_city_affected",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "median",
            "for",
            "affected_region",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "race_track",
        "question": "What is the median for the track Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "median",
            "for",
            "the",
            "track",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the median of the Product_Suppliers total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "median",
            "of",
            "the",
            "Product_Suppliers",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the weighted median for the time_slot start_hr and end_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr",
                    "end_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            9,
            [
                [
                    41,
                    44
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "weighted",
            "median",
            "for",
            "the",
            "time_slot",
            "start_hr",
            "and",
            "end_min"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Find weighted median of the Authorship authOrder and authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "weighted",
            "median",
            "of",
            "the",
            "Authorship",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Find weighted median for the storm Number_Deaths and Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths",
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            0,
            [
                [
                    6,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "weighted",
            "median",
            "for",
            "the",
            "storm",
            "Number_Deaths",
            "and",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Calculate weighted median for the track Year_Opened and Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            1,
            [
                [
                    10,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "weighted",
            "median",
            "for",
            "the",
            "track",
            "Year_Opened",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Calculate weighted median for Products product_price and product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price",
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            5,
            [
                [
                    21,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "weighted",
            "median",
            "for",
            "Products",
            "product_price",
            "and",
            "product_price"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find median absolute deviation for course credits",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "course",
            "columns": [
                [
                    "credits"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "absolute",
            "deviation",
            "for",
            "course",
            "credits"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate median absolute deviation of the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "median",
            "absolute",
            "deviation",
            "of",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Find median absolute deviation for the storm Damage_millions_USD",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "absolute",
            "deviation",
            "for",
            "the",
            "storm",
            "Damage_millions_USD"
        ]
    },
    {
        "db_id": "race_track",
        "question": "List the median absolute deviation for track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "median",
            "absolute",
            "deviation",
            "for",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "department_store",
        "question": "What is the median absolute deviation for the Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "median",
            "absolute",
            "deviation",
            "for",
            "the",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What is the outlier for time_slot end_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            9,
            [
                [
                    44
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "outlier",
            "for",
            "time_slot",
            "end_min"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the outlier for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "outlier",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "List the outlier for the storm Max_speed",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "outlier",
            "for",
            "the",
            "storm",
            "Max_speed"
        ]
    },
    {
        "db_id": "race_track",
        "question": "What is the outlier for the track Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "outlier",
            "for",
            "the",
            "track",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "What is the outlier for the Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "outlier",
            "for",
            "the",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the standard deviation for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "standard",
            "deviation",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Show me the standard deviation for the time_slot end_hr",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            9,
            [
                [
                    43
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "standard",
            "deviation",
            "for",
            "the",
            "time_slot",
            "end_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Find standard deviation for the operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "standard",
            "deviation",
            "for",
            "the",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Find standard deviation for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "standard",
            "deviation",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the standard deviation for the body_builder Snatch",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "standard",
            "deviation",
            "for",
            "the",
            "body_builder",
            "Snatch"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Find standard deviation for storm Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "standard",
            "deviation",
            "for",
            "storm",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "What is the standard deviation for pilot Rank",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "standard",
            "deviation",
            "for",
            "pilot",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "List the standard deviation of the track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "standard",
            "deviation",
            "of",
            "the",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "List the standard deviation for publication year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "standard",
            "deviation",
            "for",
            "publication",
            "year"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the standard deviation for the Product_Suppliers total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "standard",
            "deviation",
            "for",
            "the",
            "Product_Suppliers",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the variance for perpetrator Killed",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "variance",
            "for",
            "perpetrator",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Calculate variance for the time_slot start_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            9,
            [
                [
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "variance",
            "for",
            "the",
            "time_slot",
            "start_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate variance for the operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "variance",
            "for",
            "the",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "What is the variance for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "variance",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "What is the variance of the people Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "variance",
            "of",
            "the",
            "people",
            "Height"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Show me the variance for storm Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "variance",
            "for",
            "storm",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "List the variance for the pilot Rank",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "variance",
            "for",
            "the",
            "pilot",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Provide the variance for track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "variance",
            "for",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "Calculate variance of the publication year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "variance",
            "of",
            "the",
            "publication",
            "year"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the variance of the Product_Suppliers total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "variance",
            "of",
            "the",
            "Product_Suppliers",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Provide the range for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "range",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the range of the classroom capacity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "range",
            "of",
            "the",
            "classroom",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the range of the operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "range",
            "of",
            "the",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Provide the range for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "range",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the range for body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "range",
            "for",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "What is the range for the storm Max_speed",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "range",
            "for",
            "the",
            "storm",
            "Max_speed"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "What is the range of the aircraft Order_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "range",
            "of",
            "the",
            "aircraft",
            "Order_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Provide the range for the track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "range",
            "for",
            "the",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "List the range of the publication reference_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "range",
            "of",
            "the",
            "publication",
            "reference_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the range for Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "range",
            "for",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Show me the interquartile range for perpetrator Killed",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "interquartile",
            "range",
            "for",
            "perpetrator",
            "Killed"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Provide the interquartile range for the department budget",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            1,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "interquartile",
            "range",
            "for",
            "the",
            "department",
            "budget"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate interquartile range of the operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "interquartile",
            "range",
            "of",
            "the",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the interquartile range for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "interquartile",
            "range",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Provide the interquartile range for body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "interquartile",
            "range",
            "for",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Show me the interquartile range for storm Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "interquartile",
            "range",
            "for",
            "storm",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Calculate interquartile range for the pilot Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "interquartile",
            "range",
            "for",
            "the",
            "pilot",
            "Join_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "What is the interquartile range for the track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "interquartile",
            "range",
            "for",
            "the",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "List the interquartile range for cite citing",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "cite",
            "columns": [
                [
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            14,
            [
                [
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "interquartile",
            "range",
            "for",
            "cite",
            "citing"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Provide the interquartile range of the Product_Suppliers total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "interquartile",
            "range",
            "of",
            "the",
            "Product_Suppliers",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the frequency table for the perpetrator Injured, Killed and Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured",
                    "Killed",
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            0,
            [
                [
                    8,
                    7,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "frequency",
            "table",
            "for",
            "the",
            "perpetrator",
            "Injured",
            ",",
            "Killed",
            "and",
            "Year"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find frequency table for the classroom capacity, capacity and capacity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity",
                    "capacity",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            0,
            [
                [
                    3,
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "frequency",
            "table",
            "for",
            "the",
            "classroom",
            "capacity",
            ",",
            "capacity",
            "and",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "List the frequency table for the flight Velocity, Altitude and Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity",
                    "Altitude",
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            2,
            [
                [
                    17,
                    18,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "frequency",
            "table",
            "for",
            "the",
            "flight",
            "Velocity",
            ",",
            "Altitude",
            "and",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "What is the frequency table for the Authorship authOrder, authOrder and authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            3,
            [
                [
                    12,
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "frequency",
            "table",
            "for",
            "the",
            "Authorship",
            "authOrder",
            ",",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the frequency table for the body_builder Total, Total and Total",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total",
                    "Total",
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            0,
            [
                [
                    5,
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "frequency",
            "table",
            "for",
            "the",
            "body_builder",
            "Total",
            ",",
            "Total",
            "and",
            "Total"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Calculate frequency table of the storm Number_Deaths, Damage_millions_USD and Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths",
                    "Damage_millions_USD",
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            0,
            [
                [
                    6,
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "frequency",
            "table",
            "of",
            "the",
            "storm",
            "Number_Deaths",
            ",",
            "Damage_millions_USD",
            "and",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Show me the frequency table for the pilot Age, Join_Year and Rank",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age",
                    "Join_Year",
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            1,
            [
                [
                    11,
                    14,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "frequency",
            "table",
            "for",
            "the",
            "pilot",
            "Age",
            ",",
            "Join_Year",
            "and",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Find frequency table for track Seating, Seating and Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating",
                    "Seating",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            1,
            [
                [
                    9,
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "frequency",
            "table",
            "for",
            "track",
            "Seating",
            ",",
            "Seating",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "Provide the frequency table for publication year, citation_num and reference_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "publication",
            "columns": [
                [
                    "year",
                    "citation_num",
                    "reference_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            9,
            [
                [
                    30,
                    25,
                    28
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "frequency",
            "table",
            "for",
            "publication",
            "year",
            ",",
            "citation_num",
            "and",
            "reference_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Find frequency table for the Products product_price, product_price and product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price",
                    "product_price",
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            5,
            [
                [
                    21,
                    21,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "frequency",
            "table",
            "for",
            "the",
            "Products",
            "product_price",
            ",",
            "product_price",
            "and",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Provide the mode for the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mode",
            "for",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the mode for the time_slot end_hr",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            9,
            [
                [
                    43
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mode",
            "for",
            "the",
            "time_slot",
            "end_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Find mode of the operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mode",
            "of",
            "the",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Provide the mode of the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mode",
            "of",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Find mode for body_builder Total",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mode",
            "for",
            "body_builder",
            "Total"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "What is the mode for storm Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mode",
            "for",
            "storm",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Calculate mode of the pilot Rank",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mode",
            "of",
            "the",
            "pilot",
            "Rank"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Find mode of the track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mode",
            "of",
            "the",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "Calculate mode of the publication year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mode",
            "of",
            "the",
            "publication",
            "year"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Show me the mode for the Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "mode",
            "for",
            "the",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Provide the standard error for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "standard",
            "error",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What is the standard error for teaches year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "teaches",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            5,
            [
                [
                    26
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "standard",
            "error",
            "for",
            "teaches",
            "year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the standard error for flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "standard",
            "error",
            "for",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Show me the standard error for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "standard",
            "error",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "What is the standard error for body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "standard",
            "error",
            "for",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Show me the standard error of the storm Max_speed",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "standard",
            "error",
            "of",
            "the",
            "storm",
            "Max_speed"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Calculate standard error for pilot Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "standard",
            "error",
            "for",
            "pilot",
            "Join_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Find standard error for track Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "standard",
            "error",
            "for",
            "track",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "Provide the standard error of the publication reference_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "standard",
            "error",
            "of",
            "the",
            "publication",
            "reference_num"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Calculate standard error for the Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "standard",
            "error",
            "for",
            "the",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Find percentile of the perpetrator Year in the percental position of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    15,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "percentile",
            "of",
            "the",
            "perpetrator",
            "Year",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Provide the percentile for the takes year in the percental position of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "takes",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            7,
            [
                [
                    35
                ]
            ],
            [
                [
                    15,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "percentile",
            "for",
            "the",
            "takes",
            "year",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "What is the percentile for the operate_company Group_Equity_Shareholding in the percental position of 30%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                [
                    15,
                    0,
                    0.3
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "percentile",
            "for",
            "the",
            "operate_company",
            "Group_Equity_Shareholding",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "30",
            "%"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate percentile for the Authorship authOrder in the percental position of 30%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    15,
                    0,
                    0.3
                ]
            ]
        ],
        "question_tokens": [
            "Calculate",
            "percentile",
            "for",
            "the",
            "Authorship",
            "authOrder",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "30",
            "%"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the percentile for people Height in the percental position of 30%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                [
                    15,
                    0,
                    0.3
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "percentile",
            "for",
            "people",
            "Height",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "30",
            "%"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Calculate percentile of the storm Damage_millions_USD in the percental position of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    15,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "Calculate",
            "percentile",
            "of",
            "the",
            "storm",
            "Damage_millions_USD",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Show me the percentile for pilot Age in the percental position of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    15,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "percentile",
            "for",
            "pilot",
            "Age",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Show me the percentile for track Seating in the percental position of 30%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    15,
                    0,
                    0.3
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "percentile",
            "for",
            "track",
            "Seating",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "30",
            "%"
        ]
    },
    {
        "db_id": "academic",
        "question": "What is the percentile for publication citation_num in the percental position of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                [
                    15,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "percentile",
            "for",
            "publication",
            "citation_num",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the percentile for the Product_Suppliers total_value_purchased in the percental position of 10%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.1
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                [
                    15,
                    0,
                    0.1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "percentile",
            "for",
            "the",
            "Product_Suppliers",
            "total_value_purchased",
            "in",
            "the",
            "percental",
            "position",
            "of",
            "10",
            "%"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Calculate correlation matrix of the perpetrator Killed, Killed and Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Killed",
                    "Killed",
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            0,
            [
                [
                    7,
                    7,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "correlation",
            "matrix",
            "of",
            "the",
            "perpetrator",
            "Killed",
            ",",
            "Killed",
            "and",
            "Year"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Calculate correlation matrix for the time_slot end_hr, end_min and start_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr",
                    "end_min",
                    "start_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            9,
            [
                [
                    43,
                    44,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "correlation",
            "matrix",
            "for",
            "the",
            "time_slot",
            "end_hr",
            ",",
            "end_min",
            "and",
            "start_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate correlation matrix of the flight Altitude, Velocity and Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude",
                    "Velocity",
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            2,
            [
                [
                    18,
                    17,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "correlation",
            "matrix",
            "of",
            "the",
            "flight",
            "Altitude",
            ",",
            "Velocity",
            "and",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Show me the correlation matrix for Authorship authOrder, authOrder and authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            3,
            [
                [
                    12,
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "correlation",
            "matrix",
            "for",
            "Authorship",
            "authOrder",
            ",",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the correlation matrix of the people Height, Height and Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Height",
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            1,
            [
                [
                    8,
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "correlation",
            "matrix",
            "of",
            "the",
            "people",
            "Height",
            ",",
            "Height",
            "and",
            "Height"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "List the correlation matrix for storm Damage_millions_USD, Damage_millions_USD and Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD",
                    "Damage_millions_USD",
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            0,
            [
                [
                    5,
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "correlation",
            "matrix",
            "for",
            "storm",
            "Damage_millions_USD",
            ",",
            "Damage_millions_USD",
            "and",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "List the correlation matrix for the aircraft Order_Year, Order_Year and Order_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year",
                    "Order_Year",
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            0,
            [
                [
                    2,
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "correlation",
            "matrix",
            "for",
            "the",
            "aircraft",
            "Order_Year",
            ",",
            "Order_Year",
            "and",
            "Order_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Calculate correlation matrix for track Seating, Seating and Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating",
                    "Seating",
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            1,
            [
                [
                    9,
                    9,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "correlation",
            "matrix",
            "for",
            "track",
            "Seating",
            ",",
            "Seating",
            "and",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "Provide the correlation matrix for cite citing, citing and cited",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "cite",
            "columns": [
                [
                    "citing",
                    "citing",
                    "cited"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            14,
            [
                [
                    42,
                    42,
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "correlation",
            "matrix",
            "for",
            "cite",
            "citing",
            ",",
            "citing",
            "and",
            "cited"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Provide the correlation matrix for Product_Suppliers total_value_purchased, total_value_purchased and total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased",
                    "total_value_purchased",
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            12,
            [
                [
                    51,
                    51,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "correlation",
            "matrix",
            "for",
            "Product_Suppliers",
            "total_value_purchased",
            ",",
            "total_value_purchased",
            "and",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Find correlation coefficient for the perpetrator Injured and Injured",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured",
                    "Injured"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            0,
            [
                [
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "correlation",
            "coefficient",
            "for",
            "the",
            "perpetrator",
            "Injured",
            "and",
            "Injured"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the correlation coefficient for time_slot start_min and start_hr",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_min",
                    "start_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            9,
            [
                [
                    42,
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "correlation",
            "coefficient",
            "for",
            "time_slot",
            "start_min",
            "and",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the correlation coefficient for flight Velocity and Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity",
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            2,
            [
                [
                    17,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "correlation",
            "coefficient",
            "for",
            "flight",
            "Velocity",
            "and",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the correlation coefficient for the Authorship authOrder and authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            3,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "correlation",
            "coefficient",
            "for",
            "the",
            "Authorship",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Calculate correlation coefficient for body_builder Clean_Jerk and Snatch",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk",
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            0,
            [
                [
                    4,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "correlation",
            "coefficient",
            "for",
            "body_builder",
            "Clean_Jerk",
            "and",
            "Snatch"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Provide the correlation coefficient for storm Damage_millions_USD and Max_speed",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD",
                    "Max_speed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            0,
            [
                [
                    5,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "correlation",
            "coefficient",
            "for",
            "storm",
            "Damage_millions_USD",
            "and",
            "Max_speed"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "What is the correlation coefficient of the pilot Join_Year and Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year",
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            1,
            [
                [
                    14,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "correlation",
            "coefficient",
            "of",
            "the",
            "pilot",
            "Join_Year",
            "and",
            "Join_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Provide the correlation coefficient for track Year_Opened and Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            1,
            [
                [
                    10,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "correlation",
            "coefficient",
            "for",
            "track",
            "Year_Opened",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "What is the correlation coefficient for the cite citing and citing",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "cite",
            "columns": [
                [
                    "citing",
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            14,
            [
                [
                    42,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "correlation",
            "coefficient",
            "for",
            "the",
            "cite",
            "citing",
            "and",
            "citing"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Calculate correlation coefficient of the Products product_price and product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price",
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            5,
            [
                [
                    21,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "correlation",
            "coefficient",
            "of",
            "the",
            "Products",
            "product_price",
            "and",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "List the contingency table of the perpetrator Injured, Year and Injured",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured",
                    "Year",
                    "Injured"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            0,
            [
                [
                    8,
                    4,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "contingency",
            "table",
            "of",
            "the",
            "perpetrator",
            "Injured",
            ",",
            "Year",
            "and",
            "Injured"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What is the contingency table of the classroom capacity, capacity and capacity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity",
                    "capacity",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            0,
            [
                [
                    3,
                    3,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "contingency",
            "table",
            "of",
            "the",
            "classroom",
            "capacity",
            ",",
            "capacity",
            "and",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Show me the contingency table for operate_company Group_Equity_Shareholding, Group_Equity_Shareholding and Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding",
                    "Group_Equity_Shareholding",
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    12,
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "contingency",
            "table",
            "for",
            "operate_company",
            "Group_Equity_Shareholding",
            ",",
            "Group_Equity_Shareholding",
            "and",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "What is the contingency table of the Authorship authOrder, authOrder and authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder",
                    "authOrder",
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            3,
            [
                [
                    12,
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "contingency",
            "table",
            "of",
            "the",
            "Authorship",
            "authOrder",
            ",",
            "authOrder",
            "and",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the contingency table for people Height, Height and Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Height",
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    8,
                    8,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "contingency",
            "table",
            "for",
            "people",
            "Height",
            ",",
            "Height",
            "and",
            "Height"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "List the contingency table for the storm Max_speed, Damage_millions_USD and Damage_millions_USD",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed",
                    "Damage_millions_USD",
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            0,
            [
                [
                    4,
                    5,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "contingency",
            "table",
            "for",
            "the",
            "storm",
            "Max_speed",
            ",",
            "Damage_millions_USD",
            "and",
            "Damage_millions_USD"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Show me the contingency table for pilot Age, Age and Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age",
                    "Age",
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    11,
                    11,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "contingency",
            "table",
            "for",
            "pilot",
            "Age",
            ",",
            "Age",
            "and",
            "Join_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Show me the contingency table of the track Year_Opened, Seating and Seating",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened",
                    "Seating",
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    10,
                    9,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "contingency",
            "table",
            "of",
            "the",
            "track",
            "Year_Opened",
            ",",
            "Seating",
            "and",
            "Seating"
        ]
    },
    {
        "db_id": "academic",
        "question": "Show me the contingency table for cite cited, cited and citing",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited",
                    "cited",
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            14,
            [
                [
                    41,
                    41,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "contingency",
            "table",
            "for",
            "cite",
            "cited",
            ",",
            "cited",
            "and",
            "citing"
        ]
    },
    {
        "db_id": "department_store",
        "question": "List the contingency table for the Product_Suppliers total_value_purchased, total_value_purchased and total_value_purchased",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased",
                    "total_value_purchased",
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            12,
            [
                [
                    51,
                    51,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "contingency",
            "table",
            "for",
            "the",
            "Product_Suppliers",
            "total_value_purchased",
            ",",
            "total_value_purchased",
            "and",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Show me the size for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "size",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What is the size for takes year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "takes",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            7,
            [
                [
                    35
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "size",
            "for",
            "takes",
            "year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the size of the operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "size",
            "of",
            "the",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate size for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "size",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the size for the body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "size",
            "for",
            "the",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "What is the size for the storm Number_Deaths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "size",
            "for",
            "the",
            "storm",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Provide the size for pilot Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "size",
            "for",
            "pilot",
            "Join_Year"
        ]
    },
    {
        "db_id": "race_track",
        "question": "List the size for track Year_Opened",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "size",
            "for",
            "track",
            "Year_Opened"
        ]
    },
    {
        "db_id": "academic",
        "question": "List the size for cite cited",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            14,
            [
                [
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "size",
            "for",
            "cite",
            "cited"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Find size for Products product_price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "size",
            "for",
            "Products",
            "product_price"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Find confidence interval for the perpetrator Year with percental equal to 95%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.95
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    20,
                    0,
                    0.95
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "confidence",
            "interval",
            "for",
            "the",
            "perpetrator",
            "Year",
            "with",
            "percental",
            "equal",
            "to",
            "95",
            "%"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Show me the confidence interval for instructor salary with percental equal to 97%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "instructor",
            "columns": [
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.97
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                [
                    20,
                    0,
                    0.97
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "confidence",
            "interval",
            "for",
            "instructor",
            "salary",
            "with",
            "percental",
            "equal",
            "to",
            "97",
            "%"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "What is the confidence interval for the flight Velocity with percental equal to 90%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.9
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                [
                    20,
                    0,
                    0.9
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "confidence",
            "interval",
            "for",
            "the",
            "flight",
            "Velocity",
            "with",
            "percental",
            "equal",
            "to",
            "90",
            "%"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Find confidence interval of the Authorship authOrder with percental equal to 95%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.95
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    20,
                    0,
                    0.95
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "confidence",
            "interval",
            "of",
            "the",
            "Authorship",
            "authOrder",
            "with",
            "percental",
            "equal",
            "to",
            "95",
            "%"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Calculate confidence interval for the body_builder Snatch with percental equal to 97%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.97
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    20,
                    0,
                    0.97
                ]
            ]
        ],
        "question_tokens": [
            "Calculate",
            "confidence",
            "interval",
            "for",
            "the",
            "body_builder",
            "Snatch",
            "with",
            "percental",
            "equal",
            "to",
            "97",
            "%"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Show me the confidence interval for the storm Damage_millions_USD with percental equal to 97%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.97
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    20,
                    0,
                    0.97
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "confidence",
            "interval",
            "for",
            "the",
            "storm",
            "Damage_millions_USD",
            "with",
            "percental",
            "equal",
            "to",
            "97",
            "%"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Calculate confidence interval for the pilot Age with percental equal to 97%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.97
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    20,
                    0,
                    0.97
                ]
            ]
        ],
        "question_tokens": [
            "Calculate",
            "confidence",
            "interval",
            "for",
            "the",
            "pilot",
            "Age",
            "with",
            "percental",
            "equal",
            "to",
            "97",
            "%"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Show me the confidence interval for track Year_Opened where percental equal to 97%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.97
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                [
                    20,
                    0,
                    0.97
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "confidence",
            "interval",
            "for",
            "track",
            "Year_Opened",
            "where",
            "percental",
            "equal",
            "to",
            "97",
            "%"
        ]
    },
    {
        "db_id": "academic",
        "question": "Provide the confidence interval for the publication citation_num where percental equal to 90%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.9
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                [
                    20,
                    0,
                    0.9
                ]
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "confidence",
            "interval",
            "for",
            "the",
            "publication",
            "citation_num",
            "where",
            "percental",
            "equal",
            "to",
            "90",
            "%"
        ]
    },
    {
        "db_id": "department_store",
        "question": "Show me the confidence interval for the Products product_price with percental equal to 95%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.95
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                [
                    20,
                    0,
                    0.95
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "confidence",
            "interval",
            "for",
            "the",
            "Products",
            "product_price",
            "with",
            "percental",
            "equal",
            "to",
            "95",
            "%"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Show me the mean and median_ad for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median_ad"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                6
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "mean",
            "and",
            "median_ad",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find mean and range for student tot_cred",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "range"
            ],
            "table": "student",
            "columns": [
                [
                    "tot_cred"
                ],
                [
                    "tot_cred"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                10
            ],
            6,
            [
                [
                    30
                ],
                [
                    30
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mean",
            "and",
            "range",
            "for",
            "student",
            "tot_cred"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the mean and mode of the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mode"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ],
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13
            ],
            2,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mean",
            "and",
            "mode",
            "of",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the mean and mean for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                0
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mean",
            "and",
            "mean",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the mean and mean for the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                0
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mean",
            "and",
            "mean",
            "for",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Provide the mean_ad and mean of the perpetrator Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad",
                "mean"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ],
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mean_ad",
            "and",
            "mean",
            "of",
            "the",
            "perpetrator",
            "Year"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the mean_ad and std for time_slot start_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad",
                "std"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_min"
                ],
                [
                    "start_min"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                8
            ],
            9,
            [
                [
                    42
                ],
                [
                    42
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mean_ad",
            "and",
            "std",
            "for",
            "time_slot",
            "start_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Find mean_ad and median_ad for the flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad",
                "median_ad"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ],
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                6
            ],
            2,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mean_ad",
            "and",
            "median_ad",
            "for",
            "the",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate mean_ad and median of the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad",
                "median"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                4
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean_ad",
            "and",
            "median",
            "of",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Find mean_ad and median_ad for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad",
                "median_ad"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                6
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mean_ad",
            "and",
            "median_ad",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "List the median and mean for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "median",
            "and",
            "mean",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Find median and std for the classroom capacity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "std"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity"
                ],
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                8
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "and",
            "std",
            "for",
            "the",
            "classroom",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Show me the median and range of the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "range"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ],
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                10
            ],
            2,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "median",
            "and",
            "range",
            "of",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "What is the median and mean of the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "median",
            "and",
            "mean",
            "of",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Provide the median and mode of the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mode"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                13
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "median",
            "and",
            "mode",
            "of",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Provide the median_ad and var for perpetrator Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "var"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ],
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                9
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "median_ad",
            "and",
            "var",
            "for",
            "perpetrator",
            "Year"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What is the median_ad and median of the time_slot start_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "median"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_min"
                ],
                [
                    "start_min"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                6
            ],
            9,
            [
                [
                    42
                ],
                [
                    42
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "median_ad",
            "and",
            "median",
            "of",
            "the",
            "time_slot",
            "start_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate median_ad and var of the flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "var"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ],
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                9
            ],
            2,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "median_ad",
            "and",
            "var",
            "of",
            "the",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Provide the median_ad and mode of the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "mode"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                13
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "median_ad",
            "and",
            "mode",
            "of",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the median_ad and median_ad for the body_builder Snatch",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "median_ad"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                6
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "median_ad",
            "and",
            "median_ad",
            "for",
            "the",
            "body_builder",
            "Snatch"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Provide the std and var for perpetrator Injured",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Injured"
                ],
                [
                    "Injured"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            0,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "std",
            "and",
            "var",
            "for",
            "perpetrator",
            "Injured"
        ]
    },
    {
        "db_id": "college_2",
        "question": "What is the std and mean for the time_slot start_hr",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "mean"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr"
                ],
                [
                    "start_hr"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                8
            ],
            9,
            [
                [
                    41
                ],
                [
                    41
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "std",
            "and",
            "mean",
            "for",
            "the",
            "time_slot",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Show me the std and var for flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ],
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            2,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "std",
            "and",
            "var",
            "for",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the std and mean_ad for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "mean_ad"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                8
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "std",
            "and",
            "mean_ad",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "What is the std and var for the body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ],
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "std",
            "and",
            "var",
            "for",
            "the",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the var and range for people Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "range"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                10
            ],
            1,
            [
                [
                    11
                ],
                [
                    11
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "var",
            "and",
            "range",
            "for",
            "people",
            "Height"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the var and iqr of the department budget",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "iqr"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ],
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                11
            ],
            1,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "var",
            "and",
            "iqr",
            "of",
            "the",
            "department",
            "budget"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Find var and size of the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "size"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ],
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                19
            ],
            2,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "var",
            "and",
            "size",
            "of",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "List the var and size for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "size"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                19
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "var",
            "and",
            "size",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Find var and std for body_builder Total",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "std"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "var",
            "and",
            "std",
            "for",
            "body_builder",
            "Total"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the range and std for the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "std"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                10
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "range",
            "and",
            "std",
            "for",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Calculate range and size of the department budget",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "size"
            ],
            "table": "department",
            "columns": [
                [
                    "budget"
                ],
                [
                    "budget"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                19
            ],
            1,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "range",
            "and",
            "size",
            "of",
            "the",
            "department",
            "budget"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate range and median_ad of the flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "median_ad"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ],
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                10
            ],
            2,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "range",
            "and",
            "median_ad",
            "of",
            "the",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate range and var for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "var"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                10
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "range",
            "and",
            "var",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the range and mean_ad of the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "mean_ad"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                10
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "range",
            "and",
            "mean_ad",
            "of",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "List the iqr and median_ad for the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "median_ad"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                11
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "iqr",
            "and",
            "median_ad",
            "for",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Show me the iqr and mean_ad of the classroom capacity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "mean_ad"
            ],
            "table": "classroom",
            "columns": [
                [
                    "capacity"
                ],
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                11
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "iqr",
            "and",
            "mean_ad",
            "of",
            "the",
            "classroom",
            "capacity"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate iqr and mean_ad for flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "mean_ad"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ],
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                11
            ],
            2,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "iqr",
            "and",
            "mean_ad",
            "for",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Calculate iqr and mean_ad for Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "mean_ad"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                3,
                11
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "iqr",
            "and",
            "mean_ad",
            "for",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Find iqr and std for the body_builder Total",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "std"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                11
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "iqr",
            "and",
            "std",
            "for",
            "the",
            "body_builder",
            "Total"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "List the mode and iqr of the people Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "iqr"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                13
            ],
            1,
            [
                [
                    11
                ],
                [
                    11
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mode",
            "and",
            "iqr",
            "of",
            "the",
            "people",
            "Height"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Show me the mode and std for time_slot end_min",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "std"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_min"
                ],
                [
                    "end_min"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                13
            ],
            9,
            [
                [
                    44
                ],
                [
                    44
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "mode",
            "and",
            "std",
            "for",
            "time_slot",
            "end_min"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "What is the mode and mean of the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "mean"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ],
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13
            ],
            2,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mode",
            "and",
            "mean",
            "of",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Find mode and median for the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "median"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                13
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mode",
            "and",
            "median",
            "for",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Find mode and mean of the body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "mean"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ],
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mode",
            "and",
            "mean",
            "of",
            "the",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Show me the size and std for people Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "std"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                19
            ],
            1,
            [
                [
                    11
                ],
                [
                    11
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "size",
            "and",
            "std",
            "for",
            "people",
            "Height"
        ]
    },
    {
        "db_id": "college_2",
        "question": "List the size and iqr for time_slot start_hr",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "iqr"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr"
                ],
                [
                    "start_hr"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                19
            ],
            9,
            [
                [
                    41
                ],
                [
                    41
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "size",
            "and",
            "iqr",
            "for",
            "time_slot",
            "start_hr"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Calculate size and median_ad for the flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "median_ad"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ],
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                19
            ],
            2,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "size",
            "and",
            "median_ad",
            "for",
            "the",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "What is the size and iqr of the Authorship authOrder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "iqr"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ],
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                19
            ],
            3,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "size",
            "and",
            "iqr",
            "of",
            "the",
            "Authorship",
            "authOrder"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the size and var for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "var"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                19
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "size",
            "and",
            "var",
            "for",
            "people",
            "Weight"
        ]
    }
]