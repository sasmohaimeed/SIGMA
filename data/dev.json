[
    {
        "db_id": "apartment_rentals",
        "question": "Using the variable number of beds Provide for me the normal distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Using the column number of baths Give me the weibull distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "For the column room count What is the weibull distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "For Snatch exercises present the long tailed distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Using the variable Clean Jerk exercises present the weibull distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "For the variable body builder total exercises What is the weibull distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Using the ages of all captain variable Give me the chi square distribution of its points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Considering the vehicle mass in Kilo pounds, Show me the chi2 distribution of its points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "car_1",
        "question": "Using the column power horse of cars, Plot for me the t distribution of its points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            5,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "For the column car accelerate, Show me the T distribution of its points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            5,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "For the column cars cylinders Give me the weibull distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            5,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For Catalog heights, Plot for me the chi square distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            3,
            [
                [
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the catalog size, What is the fisher-snedecor distribution of its points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                9
            ],
            3,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "Using the catalog lengths Provide the f distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "length"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                9
            ],
            3,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Using the catalog costs in USD dollar, What is the normal distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            3,
            [
                [
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Using the catalog euros price, Plot for me the normal distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            3,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the catalog price in pounds, Provide for me the t distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the catalog widths, Give me the t distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "width"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            3,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Using the column charge amount in the Charges table, please show the chi square distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "For the Dogs ages, Provide for me the exponential distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            5,
            [
                [
                    26
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Using the dogs weights variable, provide for me the exponential distribution of their values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            5,
            [
                [
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Provide the pareto distribution of home matchs audience values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "home_game",
            "columns": [
                [
                    "attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Give me the normal distribution for hotels prices values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Plot for me the normal distribution of hotels rooms prices values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Provide the F distribution for points won by manager.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "show me the distribution of data for the scores earned by leaders using the fisher snedecor distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "f"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                9
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "get the weibull distribution for manager maximum points values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "please show the t distribution for the ships speed in knots.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "mission",
            "columns": [
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the t distribution of mission speed in knots values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "mission",
            "columns": [
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Plot for me the weibull distribution of quantities ordered values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Order_Items",
            "columns": [
                [
                    "Order_Quantity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            13,
            [
                [
                    75
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Plot for me the weibull distribution of the people heights.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "please show the weibull distribution of people weights points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Provide the normal distribution for player weight points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "player",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            4,
            [
                [
                    50
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Give me the t distribution for the player height values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "player",
            "columns": [
                [
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            4,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Give me the long tailed distribution for points won by all players.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Give me the gaussian distribution for the maximum scores earned by all competitors.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "present the chi2 distribution of the match not winning points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "postseason",
            "columns": [
                [
                    "losses"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            7,
            [
                [
                    75
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "What is the long tailed distribution for the post season ties values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "postseason",
            "columns": [
                [
                    "ties"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            7,
            [
                [
                    76
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "present the normal distribution of the games wins points.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            7,
            [
                [
                    74
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Give me the weibull distribution of Products costs values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "present the values distribution for players salaries using the long tailed distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "salary",
            "columns": [
                [
                    "salary"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            5,
            [
                [
                    62
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "provide the points distribution for all the ships built years using the chi square distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "plot for me the distribution of data for stations annual interchanges using the chi square distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "present the data distribution for stations total passengers using the chi square type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "present the distribution of data for the stations number of platforms using the chi square type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "chi_square"
            ],
            "table": "station",
            "columns": [
                [
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                7
            ],
            0,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "give the values distribution for the stations annual entry passengers using the exponential type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "show the data distribution for games of all teams using the weibull type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "weibull"
            ],
            "table": "team",
            "columns": [
                [
                    "g"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                6
            ],
            8,
            [
                [
                    83
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "present the points distribution for the operations prices using the pareto distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "tvshow",
        "question": "provide the points distribution for the TV shows in weekly position variable using the gaussian distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "tvshow",
        "question": "give the data distribution for the TV shows ratings using the t type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "present the values distribution for the TV series viewers numbers using the t distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "present the points distribution for the TV series ratings using the t distribution type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "show the points distribution for the TV shows audience in millions using the Student's t type.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                8
            ],
            1,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Considering the column unit availables, What is the binomial distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "View_Unit_Status",
            "columns": [
                [
                    "available_yn"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            5,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Considering the column units booking status code, What is the binomial distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            4,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Show the data distribution using poisson distribution type, of the number of team wins per game.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "team",
            "columns": [
                [
                    "w"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                4
            ],
            8,
            [
                [
                    85
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show me the binomial distribution of the chances that hotels allowing pets inside.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "pets_allowed_yn"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            5,
            [
                [
                    15
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Get for me the data distribution for the dog genders by using the binomial type",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "gender"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            5,
            [
                [
                    28
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Considering the number of units ready for booking, What is the Bernoulli distribution of its data.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "View_Unit_Status",
            "columns": [
                [
                    "available_yn"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            5,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Considering the number of units booking status code, What is the Bernoulli distributio.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            4,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Give the data distribution using count type, of number of wins per game.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "poisson"
            ],
            "table": "team",
            "columns": [
                [
                    "w"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                4
            ],
            8,
            [
                [
                    85
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show me the bernoulli distribution of the places animals allowed variable.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "binomial"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "pets_allowed_yn"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                3
            ],
            5,
            [
                [
                    15
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "For the count of beds, provide for me the standard normal distribution.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the catalog costs in USD, What is the gaussian distribution after standardizing its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            3,
            [
                [
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "what is the catalog price in euros, show me the standard normal distribution of its values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            3,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the Z distribution for hotels costs.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Plot for me the Z distribution of costs of room in the hotels.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Provide the Z distribution for the mass in pounds of all competitors.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "player",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            4,
            [
                [
                    50
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "Give me the Z distribution for the maximum scores earned by every individuals.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "What is the standard normal distribution of the number of wins values.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            7,
            [
                [
                    74
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the average horsepower of all cars exist in the database?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            5,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Can you find the mean workshops products costs  (give a number)?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What is the mean for the points max column in the manager award vote table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What is the average for the number of items in the bills lines table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "quantity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            9,
            [
                [
                    62
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "ship_mission",
        "question": "Give the mean for the Speed knots column in the mission table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "mission",
            "columns": [
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the average horsepower of the car data?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            5,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Calculate the mean attendance at home games",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "home_game",
            "columns": [
                [
                    "attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            2,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Calculate the mean wages of in the income table.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "salary",
            "columns": [
                [
                    "salary"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            5,
            [
                [
                    62
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "store_1",
        "question": "What is the average number each invoice has in total cost?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "invoices",
            "columns": [
                [
                    "total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            6,
            [
                [
                    46
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the trimmed mean 10% of body builders' clean jerk?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    10.0
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    2,
                    0,
                    10.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "show the 30% truncated average of animals ages.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    30.0
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            5,
            [
                [
                    26
                ]
            ],
            [
                [
                    2,
                    0,
                    30.0
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "theme_gallery",
        "question": "Calculate the 10 percent trimmed mean of cost of tickets to the theme.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    10.0
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                [
                    2,
                    0,
                    10.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the 20% truncated average of all catalog costs per UK currancy.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    20.0
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                [
                    2,
                    0,
                    20.0
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "Give me the average of the central 9% for size of catalog contents.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    9.0
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            3,
            [
                [
                    22
                ]
            ],
            [
                [
                    2,
                    0,
                    9.0
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "body_builder",
        "question": "for the snatch exercise weights lifting get the mean absolute deviation for each body builder",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Indicate average absolute deviation for staduim attendance in a game that played at home.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "home_game",
            "columns": [
                [
                    "attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            2,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Determine the mean absolute deviation for the passenger count of the station.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Calculate the 50th position for the number of units per living places.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "Compute the median for home game attendance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "home_game",
            "columns": [
                [
                    "attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            2,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Give me the median of the maximum award points for all player.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find the median for the variable \"win\" for postseason games.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            7,
            [
                [
                    74
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "Determine the median of the player's votes.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "player",
            "columns": [
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find the median value for the number of draws in post-season matches.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "postseason",
            "columns": [
                [
                    "ties"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            7,
            [
                [
                    76
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Find out what the median rating for the TV series is.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Determine the median ages of all captains.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find the median height of all players.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "player",
            "columns": [
                [
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            4,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "What is the median absolute deviation for the number of bathrooms per apartment?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the average distance horsepower of the car data from the median?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            5,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Determine the median absolute deviation yearly interchanges for all stations.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "Determine the median absolute deviation results for all formula car laps.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "results",
            "columns": [
                [
                    "laps"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            7,
            [
                [
                    53
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "For the cars Cylinders, show me the median absolute deviation value.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            5,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "For the cost of invoices  , Give me the median absolute deviation",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            9,
            [
                [
                    61
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "in the baseball team table, show me median absolute deviation value of the number of baseball games.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "team",
            "columns": [
                [
                    "g"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            8,
            [
                [
                    83
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "in the apartments table, show me median absolute deviation value of the number of baths.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "show me the points that considered abnormal in the clean jerk excercises.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Give me the abnormal values for the column that indicate the birth year.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show the extreme abnormal values of range of inn costs?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Provide the normal deviation of the number of baths.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "Calculate the standard deviation of the Catalogs cost in dollars.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            3,
            [
                [
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Calculate the std of Catalogs long.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            3,
            [
                [
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "How does the catalogs costs in euros standartly deviates?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                8
            ],
            3,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Calculate the variance of the number of themes attendance .",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Estimate the variance for the body builders heights.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "Show the variance for the scores values in the final result.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "results",
            "columns": [
                [
                    "points"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            7,
            [
                [
                    52
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Estimate the variance for the body builders weughts.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "in the station table, calculate the variance for the annual entry exit column.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "in the apartments table, calculate the variance for the beds count column.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                9
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Determine the range for clean Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Draw a table that donates frequency distribution of apartments code and number of beds.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_type_code",
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    10,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Create a table that presents categorical data in terms of frequencies counts of apartments type code and number of rooms.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_type_code",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    10,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Indicate the difference between the catalog content highest and lowest capacity.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            3,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Get the range between column snatch.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Determine the range for number of games played by each team.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "team",
            "columns": [
                [
                    "g"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            8,
            [
                [
                    83
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Indicate the range of variable points won by each player.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What is the range of variable points max by each manager.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                10
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Estimate the interquartile range for the acceleration of the cars.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            5,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "List the difference between the third quartile and first quartile of the baseball competitor tall?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "player",
            "columns": [
                [
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            4,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "store_1",
        "question": "Show me the difference between the 3rd quartile and 1st quartile for the entire values of all bills?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "invoices",
            "columns": [
                [
                    "total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            6,
            [
                [
                    46
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "present the Interquartile range for number of platforms used.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "station",
            "columns": [
                [
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            0,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "please can you estimate the interquartile range for the number of votes for all players",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "player",
            "columns": [
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Estimate the interquartile range for the  number of visitors to all the themes.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "Considering the ship tonnage column, calculate their interquartile range.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr"
            ],
            "table": "ship",
            "columns": [
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                11
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show me the frequency table of cars data's cylinders.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            5,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show me the frequency table of cars data's year.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            5,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Construct the frequency table for the booking status of the apartments.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            4,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "For building information display the table of frequencies ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "tvshow",
        "question": "Illustrate the frequency table of  tv shows ratings.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Illustrate the frequency table of weights of all dogs.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            5,
            [
                [
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Display the table of frequencies for the viewers in millions.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                12
            ],
            1,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Find most frequent reservation status condition.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            4,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "What is the most common building description?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the mode for the building description column in the Apartment Buildings table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Get the mode for cost in USD currancy for all catalogs.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            3,
            [
                [
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find most frequent baseball wins in postseason games.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            7,
            [
                [
                    74
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "For the number of losses in the post seasons games, show me the most common number of losses value.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "postseason",
            "columns": [
                [
                    "losses"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            7,
            [
                [
                    75
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "For the laps column in the results table, show me the most common value.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode"
            ],
            "table": "results",
            "columns": [
                [
                    "laps"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                13
            ],
            7,
            [
                [
                    53
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Compute the standard error from home game attendance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "home_game",
            "columns": [
                [
                    "attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            2,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show the variation between calculated mean of the car of power",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            5,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "car_1",
        "question": "Give me the standard error for the Horsepower column in the cars data table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            5,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "For the body builder total exercise, calculate the standard error.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Get the standart error of point max column by all players.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Estimate standard failure for boats manufactures years.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "standard_error"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                14
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "What is the 60 percentile of the yearly entries in the station?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.6
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                [
                    15,
                    0,
                    0.6
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the 10 positions of the individuals tall in cm?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.1
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                [
                    15,
                    0,
                    0.1
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "ship_1",
        "question": "Find the 75th percentile of ages of all captains.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.75
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    15,
                    0,
                    0.75
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Calculate the 77th percentile of all the catalogs widths values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "width"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.77
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            3,
            [
                [
                    25
                ]
            ],
            [
                [
                    15,
                    0,
                    0.77
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "compute the 1st quartile of the people incomes.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "salary",
            "columns": [
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.25
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            5,
            [
                [
                    62
                ]
            ],
            [
                [
                    15,
                    0,
                    0.25
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "For the products cost price, Find the 30% percentile of value.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                [
                    15,
                    0,
                    0.3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "For the body builders weights, Give me the 80% percentile of value.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.8
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    15,
                    0,
                    0.8
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Show me the 25% percentile of the price in euros for all the catalogs.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.25
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            3,
            [
                [
                    20
                ]
            ],
            [
                [
                    15,
                    0,
                    0.25
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Give me the 25% position of the number of products for all ordered products.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile"
            ],
            "table": "Order_Items",
            "columns": [
                [
                    "Order_Quantity"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.25
                ]
            ]
        },
        "python": [
            2,
            [
                15
            ],
            13,
            [
                [
                    75
                ]
            ],
            [
                [
                    15,
                    0,
                    0.25
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "body_builder",
        "question": "What is the size of samples in the body builder snatch?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "Show how much data we have for the unit cost variable",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            9,
            [
                [
                    61
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "In the product catalog database, what is the number of samples for heughts of catalogs column.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            3,
            [
                [
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "show the size of observations in the quantity column in the invoice table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "quantity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            9,
            [
                [
                    62
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "How many samples we have for the tickets cost variable.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "How many observations we have for the cars accelerators values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                19
            ],
            5,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Calculate the 97% confidence interval of age of all dogs",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    97.0
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            5,
            [
                [
                    26
                ]
            ],
            [
                [
                    20,
                    0,
                    97.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "what is the 95%  condidence interval for the variable number of apartments beds.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    95.0
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                [
                    20,
                    0,
                    95.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "what is the 99%  condidence interval for the variable annual interchanges in the table station.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    99.0
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    20,
                    0,
                    99.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "List the CI of the catelog price in pounds where the confidence percentage 95%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    95.0
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                [
                    20,
                    0,
                    95.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "With 90% confidence, show the values in the players weights",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "ci"
            ],
            "table": "player",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    99.0
                ]
            ]
        },
        "python": [
            2,
            [
                20
            ],
            4,
            [
                [
                    50
                ]
            ],
            [
                [
                    20,
                    0,
                    99.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Calculate the mean and the mean absolute deviation for the maximum number of points.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean_ad"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_max"
                ],
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "From the variable g derive its mean and mean absolute deviation",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean_ad"
            ],
            "table": "team",
            "columns": [
                [
                    "g"
                ],
                [
                    "g"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3
            ],
            8,
            [
                [
                    83
                ],
                [
                    83
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the width of the catalog contents calculate its mean and mean absolute deviation ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean_ad"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "width"
                ],
                [
                    "width"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3
            ],
            3,
            [
                [
                    25
                ],
                [
                    25
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Calculate the average salary for Atlanta players and the mean absolute deviation for Boston players' salaries.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean_ad"
            ],
            "table": "salary",
            "columns": [
                [
                    "salary"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3
            ],
            5,
            [
                [
                    62
                ],
                [
                    62
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What is the 90th percentile for home game attendance and find the mean attendance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "mean"
            ],
            "table": "home_game",
            "columns": [
                [
                    "attendance"
                ],
                [
                    "attendance"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    90.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                0
            ],
            2,
            [
                [
                    23
                ],
                [
                    23
                ]
            ],
            [
                [
                    15,
                    0,
                    90.0
                ],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Indicate the 1st quartile and average for total number of travelers.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "mean"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ],
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    25.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                0
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [
                    15,
                    0,
                    25.0
                ],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "Obtain the 20th percentile and mean for the variable point_max",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "mean"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_max"
                ],
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    20.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                0
            ],
            0,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [
                    15,
                    0,
                    20.0
                ],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Develop a contingency table for apartments code and rooms counts.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "contingency_table"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_type_code",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                18
            ],
            1,
            [
                [
                    10,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the mean acceleration of the cars and what is the median acceleration?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate"
                ],
                [
                    "Accelerate"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4
            ],
            5,
            [
                [
                    22
                ],
                [
                    22
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the average price per product and what is the median price?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds"
                ],
                [
                    "price_in_pounds"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4
            ],
            3,
            [
                [
                    21
                ],
                [
                    21
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Compute the mean and median for the number of bathrooms per apartment.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count"
                ],
                [
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "For the number of bedrooms per apartment, obtain the median and the mean.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ],
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                0
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Find the mean and median of the total weight of the bodybuilders' tests.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                0
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "For the number of rooms per apartment, obtain the median and the mean.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "room_count"
                ],
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                0
            ],
            1,
            [
                [
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Find the median and the median absolute deviation for the capacity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "median_ad"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity"
                ],
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                6
            ],
            3,
            [
                [
                    22
                ],
                [
                    22
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the height calculate the median and median absolute deviation.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "median_ad"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height"
                ],
                [
                    "height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                6
            ],
            3,
            [
                [
                    24
                ],
                [
                    24
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "Calculate the median speed in knots and its median absolute deviation",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "median_ad"
            ],
            "table": "mission",
            "columns": [
                [
                    "Speed_knots"
                ],
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                6
            ],
            0,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "Calculate the median absolute deviation and the median for the votes per player",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "median"
            ],
            "table": "player",
            "columns": [
                [
                    "Votes"
                ],
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                4
            ],
            0,
            [
                [
                    7
                ],
                [
                    7
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find the median absolute deviation for the weight of the players and calculate its median.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "median"
            ],
            "table": "player",
            "columns": [
                [
                    "weight"
                ],
                [
                    "weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                4
            ],
            4,
            [
                [
                    50
                ],
                [
                    50
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Taking into account the age of the artists, calculate the median absolute deviation and the median.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad",
                "median"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                6,
                4
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the mean length and standard deviation of the catalogs?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "std"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "length"
                ],
                [
                    "length"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                8
            ],
            3,
            [
                [
                    23
                ],
                [
                    23
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Derive the mean weight of individuals and find the standard deviation.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "std"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                8
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "Determine the standard deviation and the mean of the quantity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "mean"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "quantity"
                ],
                [
                    "quantity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                0
            ],
            9,
            [
                [
                    62
                ],
                [
                    62
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "what is the standard deviation and the mean for the number of spectators per tv series?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "mean"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ],
                [
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                0
            ],
            1,
            [
                [
                    16
                ],
                [
                    16
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Considering the number of platforms per station, show their mean and variance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "var"
            ],
            "table": "station",
            "columns": [
                [
                    "Number_of_Platforms"
                ],
                [
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                9
            ],
            0,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "find the average and variation of the values for the bills in term of their entire costs",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "var"
            ],
            "table": "invoices",
            "columns": [
                [
                    "total"
                ],
                [
                    "total"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                9
            ],
            6,
            [
                [
                    46
                ],
                [
                    46
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "Compute the mean and variance for the height of the players",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "var"
            ],
            "table": "player",
            "columns": [
                [
                    "height"
                ],
                [
                    "height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                9
            ],
            4,
            [
                [
                    51
                ],
                [
                    51
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Deduce the mean cost per treatment and its variance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "var"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ],
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                9
            ],
            7,
            [
                [
                    49
                ],
                [
                    49
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Get variance and mean for the price of the products",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "mean"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ],
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                0
            ],
            3,
            [
                [
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Show the variance and mean of the number of postseason games won.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "mean"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins"
                ],
                [
                    "wins"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                0
            ],
            7,
            [
                [
                    74
                ],
                [
                    74
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Obtain the variance and mean for the number of cylinders per car.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ],
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                0
            ],
            5,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Compute the variance and mean of television series ratings.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "mean"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ],
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                0
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Calculate the mean range of hotel prices and say which is the most used range.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mode"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ],
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13
            ],
            5,
            [
                [
                    16
                ],
                [
                    16
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Compute the average number of season not winning games and What is the most frequent number mentioned.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mode"
            ],
            "table": "postseason",
            "columns": [
                [
                    "losses"
                ],
                [
                    "losses"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13
            ],
            7,
            [
                [
                    75
                ],
                [
                    75
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "formula_1",
        "question": "Show mean and mode for the number of points",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mode"
            ],
            "table": "results",
            "columns": [
                [
                    "points"
                ],
                [
                    "points"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13
            ],
            7,
            [
                [
                    52
                ],
                [
                    52
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Show the most common value of the costs in europe currancy, also show the average value?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ],
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                0
            ],
            3,
            [
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "For the number of ties in postseason calculate the mode and the mean",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "mean"
            ],
            "table": "postseason",
            "columns": [
                [
                    "ties"
                ],
                [
                    "ties"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                0
            ],
            7,
            [
                [
                    76
                ],
                [
                    76
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Get the most common price in the catalogs and the mean price.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                0
            ],
            3,
            [
                [
                    19
                ],
                [
                    19
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Find the mean price of the cars and obtain the sample size.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "size"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                19
            ],
            5,
            [
                [
                    21
                ],
                [
                    21
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Estimate the sample size and the mean for \"Annual exchanges\".",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "mean"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ],
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                0
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Report the sample size of the distribution of the number of horsepower per car, and obtain the mean number of horsepower per car.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ],
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                0
            ],
            5,
            [
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "find the quartile 1 and middle value of the squat snatch exercise",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "median"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                4
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "dog_kennels",
        "question": "25% of dogs weigh at most how much? and what about 50%?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "median"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight"
                ],
                [
                    "weight"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    25.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                4
            ],
            5,
            [
                [
                    29
                ],
                [
                    29
                ]
            ],
            [
                [
                    15,
                    0,
                    25.0
                ],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "Provide the unit price range and also indicate the maximum unit price for 75% of the invoices.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "percentile"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "unit_price"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                15
            ],
            9,
            [
                [
                    61
                ],
                [
                    61
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Indicate the difference between highest and lowest value and 2nd quartile of the number of scores earned per leaders.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "percentile"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_won"
                ],
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                15
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "dog_kennels",
        "question": "What is the range of the charge amount? also obtain the quartile 2 for that amount.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "percentile"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ],
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                15
            ],
            1,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Show difference between highest and lowest number of audience, also shows the IQR values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "iqr"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ],
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                11
            ],
            2,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "ship_1",
        "question": "Calculate the interquartile range and the range for the variable representing the year of manufacture.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "range"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Built_Year"
                ],
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                10
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "For tonnage per vessel report the interquartile range and range",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "range"
            ],
            "table": "ship",
            "columns": [
                [
                    "Tonnage"
                ],
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                10
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "Reveal the interquartile range and the range of the number of laps",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "range"
            ],
            "table": "results",
            "columns": [
                [
                    "laps"
                ],
                [
                    "laps"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                10
            ],
            7,
            [
                [
                    53
                ],
                [
                    53
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "For \"Annual entry exit\" get the standard deviation and variance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ],
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Provide the standard deviation and variance of the points earned. ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_won"
                ],
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Reveal the standard deviation and the variance of the height of people",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            1,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "For the weekly range of TV series Get the standard deviation and variance",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ],
                [
                    "Weekly_Rank"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9
            ],
            1,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Compute the variance and standard deviation of the ticket price per exhibition",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "std"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                8
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Determine variance and standard deviation of order quantity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "std"
            ],
            "table": "Order_Items",
            "columns": [
                [
                    "Order_Quantity"
                ],
                [
                    "Order_Quantity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                8
            ],
            13,
            [
                [
                    75
                ],
                [
                    75
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Provide the variance and standard deviation of the age of the ships' captains.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "std"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                8
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Compute the maximum weight of half of all people. What is the most frequent weight of people?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mode"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                13
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Calculate the middle points of the charged money value. Obtain also the most appeared value",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mode"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_amount"
                ],
                [
                    "charge_amount"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                13
            ],
            1,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "Indicate the middle point and most repeated value for the number of systems.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mode"
            ],
            "table": "station",
            "columns": [
                [
                    "Number_of_Platforms"
                ],
                [
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                13
            ],
            0,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "body_builder",
        "question": "For the total compute the mode and the median",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "median"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                4
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Indicate the most common number of rooms in the apartments. Find the median number of rooms",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "median"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "room_count"
                ],
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                4
            ],
            1,
            [
                [
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Usually how many horsepower the cars have. Calculate the median for the number of horsepower",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "median"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ],
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                4
            ],
            5,
            [
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Find the most frequent age of the captain. Additionally, obtain the median for the age of the captains.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "median"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                4
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Provide the most common height of people who practice bodybuilding. Determine the sample size",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "size"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                19
            ],
            1,
            [
                [
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "For the number of votes per player indicate the mode and the sample size",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "size"
            ],
            "table": "player",
            "columns": [
                [
                    "Votes"
                ],
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                19
            ],
            0,
            [
                [
                    7
                ],
                [
                    7
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "For hotel price range get mode and sample size.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "size"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ],
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                19
            ],
            5,
            [
                [
                    16
                ],
                [
                    16
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the most common car weight.  Give the sample size",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "size"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                19
            ],
            5,
            [
                [
                    21
                ],
                [
                    21
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Give the most common catalog length and also the sample size",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mode",
                "size"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "length"
                ],
                [
                    "length"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                13,
                19
            ],
            3,
            [
                [
                    23
                ],
                [
                    23
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Get outliers and sample size for the maximum number of points.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier",
                "size"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_max"
                ],
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                7,
                19
            ],
            0,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Show outliers and sample size for the variable \"game\"",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier",
                "size"
            ],
            "table": "team",
            "columns": [
                [
                    "g"
                ],
                [
                    "g"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                7,
                19
            ],
            8,
            [
                [
                    83
                ],
                [
                    83
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Obtain the abnormal values and sample numebr of items for the number of scores earned by baseball competitor.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier",
                "size"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_won"
                ],
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                7,
                19
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "Reveal sample number of items and detect abnormal values for the total number of travelers",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "outlier"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ],
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                7
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "Report the average and the recurrence of words table for the maximum number of scores.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "frequency_table"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_max"
                ],
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                12
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "baseball_1",
        "question": "Show the mean and a frequency table for the number of games won in the postseason.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "frequency_table"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins"
                ],
                [
                    "wins"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                12
            ],
            7,
            [
                [
                    74
                ],
                [
                    74
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find the mean number of games lost in the postseason. Build a frequency table",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "frequency_table"
            ],
            "table": "postseason",
            "columns": [
                [
                    "losses"
                ],
                [
                    "losses"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                12
            ],
            7,
            [
                [
                    75
                ],
                [
                    75
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the price in pounds, compute the frequency table and the mean.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table",
                "mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds"
                ],
                [
                    "price_in_pounds"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                12,
                0
            ],
            3,
            [
                [
                    21
                ],
                [
                    21
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Produce a frequency table and compute the mean for the number of viewers of the TV series.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "frequency_table",
                "mean"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ],
                [
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                12,
                0
            ],
            1,
            [
                [
                    16
                ],
                [
                    16
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Reveal the median wage and its variance",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "var"
            ],
            "table": "salary",
            "columns": [
                [
                    "salary"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                9
            ],
            5,
            [
                [
                    62
                ],
                [
                    62
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "For the weekly ranking of TV series, what is its median and variance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "var"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ],
                [
                    "Weekly_Rank"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                9
            ],
            1,
            [
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "Report the median and variance of the unit price",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "var"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "unit_price"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                9
            ],
            9,
            [
                [
                    61
                ],
                [
                    61
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "For ticket prices indicate the median and the variance ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "var"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                9
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "For the points earned by managers, calculate the variance and the median",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "median"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_won"
                ],
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                4
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the variance of the price? and its median?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "median"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ],
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                4
            ],
            3,
            [
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Indicate the mean weight of the dogs. Is it weird for a dog to weigh 1.72?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "outlier"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight"
                ],
                [
                    "weight"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                7
            ],
            5,
            [
                [
                    29
                ],
                [
                    29
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the 3rd quartile and the average for the establish year of the boats",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "mean"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Built_Year"
                ],
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    75.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                0
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [
                    15,
                    0,
                    75.0
                ],
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "For \"Annual Exchanges\" estimate the 25th percentile and the mean",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "mean"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ],
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    25.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                0
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [
                    15,
                    0,
                    25.0
                ],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Reveal the outliers for the price of the products, in addition find the mean",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier",
                "mean"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ],
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                7,
                0
            ],
            3,
            [
                [
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Provide the mean and range for number of rooms per apartment",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "range"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ],
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                10
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "For \"Clean jerk\" state range and mean  ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "mean"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ],
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                0
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Compute the range and the mean of attendance ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "mean"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ],
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                0
            ],
            2,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "Consider the tonnage of the ships to calculate the range and the mean ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "mean"
            ],
            "table": "ship",
            "columns": [
                [
                    "Tonnage"
                ],
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                0
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Find the standard deviation and sample size for the bodybuilder's snatch",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "size"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                19
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Give the standard deviation and sample size for the number of bathrooms in the apartments.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "size"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count"
                ],
                [
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                19
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "For the number of ties in postseason, reveal the sample size and standard deviation.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "std"
            ],
            "table": "postseason",
            "columns": [
                [
                    "ties"
                ],
                [
                    "ties"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                8
            ],
            7,
            [
                [
                    76
                ],
                [
                    76
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Show the sample size and standard deviation of the height of the level 8 catalogs",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "std"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height"
                ],
                [
                    "height"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                8
            ],
            3,
            [
                [
                    24
                ],
                [
                    24
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What is the height of a player if he is only surpassed by 40% of his teammates. Obtain the standard deviation of the height.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "percentile",
                "std"
            ],
            "table": "player",
            "columns": [
                [
                    "height"
                ],
                [
                    "height"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    40.0
                ],
                []
            ]
        },
        "python": [
            2,
            [
                15,
                8
            ],
            4,
            [
                [
                    51
                ],
                [
                    51
                ]
            ],
            [
                [
                    15,
                    0,
                    40.0
                ],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "For the variable \"Annual entry exit\" give the sample size and the standard deviation",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "std"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ],
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                8
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Tell what is the sample size of the price and indicate the standard deviation.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "std"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                8
            ],
            3,
            [
                [
                    19
                ],
                [
                    19
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "Display the interquartile range and median of the number of laps.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "median"
            ],
            "table": "results",
            "columns": [
                [
                    "laps"
                ],
                [
                    "laps"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                4
            ],
            7,
            [
                [
                    53
                ],
                [
                    53
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Compute the interquartile range of the age of the dogs and establish how old a dog must be to be older than 60% of all dogs.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "percentile"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "age"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                15
            ],
            5,
            [
                [
                    26
                ],
                [
                    26
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Calculate the interquartile range and median for TV series ratings.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "iqr",
                "median"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ],
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                11,
                4
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "How much is the maximum amount of half of the invoices? Reveal the range for the total amount",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "range"
            ],
            "table": "invoices",
            "columns": [
                [
                    "total"
                ],
                [
                    "total"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                10
            ],
            6,
            [
                [
                    46
                ],
                [
                    46
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "Half of the results have at most how many points? Calculate the range of the number of points",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "range"
            ],
            "table": "results",
            "columns": [
                [
                    "points"
                ],
                [
                    "points"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                10
            ],
            7,
            [
                [
                    52
                ],
                [
                    52
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "For order quantity reveal the range and median",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "median"
            ],
            "table": "Order_Items",
            "columns": [
                [
                    "Order_Quantity"
                ],
                [
                    "Order_Quantity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                4
            ],
            13,
            [
                [
                    75
                ],
                [
                    75
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Estimate the range for the number of cylinders per car. Say how many cylinders a car must have if 50% of the cars exceed it in number of cylinders.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "median"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ],
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                4
            ],
            5,
            [
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "Calculate the range for the quantity and what is the value of the median.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "median"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "quantity"
                ],
                [
                    "quantity"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                4
            ],
            9,
            [
                [
                    62
                ],
                [
                    62
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Obtain the range and median width of the catalogs.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "range",
                "median"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "width"
                ],
                [
                    "width"
                ]
            ],
            "extra_param": [
                [],
                []
            ]
        },
        "python": [
            2,
            [
                10,
                4
            ],
            3,
            [
                [
                    25
                ],
                [
                    25
                ]
            ],
            [
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Display the average weight of the players. Reveal the value that divides the sample into 2 equal parts.. Find the standard deviation of the players' weights",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median",
                "std"
            ],
            "table": "player",
            "columns": [
                [
                    "weight"
                ],
                [
                    "weight"
                ],
                [
                    "weight"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4,
                8
            ],
            4,
            [
                [
                    50
                ],
                [
                    50
                ],
                [
                    50
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Consider the snatch to report median mean and standard deviation.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median",
                "std"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ],
                [
                    "Snatch"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4,
                8
            ],
            0,
            [
                [
                    3
                ],
                [
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "Provide the mean speed of the ships in the missions, also obtain the median and variance.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median",
                "var"
            ],
            "table": "mission",
            "columns": [
                [
                    "Speed_knots"
                ],
                [
                    "Speed_knots"
                ],
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4,
                9
            ],
            0,
            [
                [
                    6
                ],
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Use the weekly range of the tv series to display the mean, median and variance. ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "median",
                "var"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ],
                [
                    "Weekly_Rank"
                ],
                [
                    "Weekly_Rank"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                4,
                9
            ],
            1,
            [
                [
                    17
                ],
                [
                    17
                ],
                [
                    17
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Estimate the mean, standard deviation and sample size of the price.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "std",
                "size"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ],
                [
                    "price_in_dollars"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                8,
                19
            ],
            3,
            [
                [
                    19
                ],
                [
                    19
                ],
                [
                    19
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Indicate the average ticket price. What is the most common price? find the variance. ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mode",
                "var"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ],
                [
                    "Ticket_Price"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                13,
                9
            ],
            1,
            [
                [
                    10
                ],
                [
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Of the points earned by the players, obtain the mean, standard deviation and mode.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "std",
                "mode"
            ],
            "table": "player_award_vote",
            "columns": [
                [
                    "points_won"
                ],
                [
                    "points_won"
                ],
                [
                    "points_won"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                8,
                13
            ],
            1,
            [
                [
                    12
                ],
                [
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Estimate the mean and mean absolute deviation of the number of cylinders per car. Find the number of cylinders most often found in the vehicles",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean_ad",
                "mode"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ],
                [
                    "Cylinders"
                ],
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3,
                13
            ],
            5,
            [
                [
                    18
                ],
                [
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Reveal the mean, mean absolute deviation and mode of the number of postseason ties.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean",
                "mean_ad",
                "mode"
            ],
            "table": "postseason",
            "columns": [
                [
                    "ties"
                ],
                [
                    "ties"
                ],
                [
                    "ties"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                0,
                3,
                13
            ],
            7,
            [
                [
                    76
                ],
                [
                    76
                ],
                [
                    76
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Look up the average age but only of the captains. State the range for the age of the lieutenants. Find the interquartile range for everyone's age",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "range",
                "iqr"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ],
                [
                    "age"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                10,
                11
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "formula_1",
        "question": "Report variance, range and interquartile range of the number of laps",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "range",
                "iqr"
            ],
            "table": "results",
            "columns": [
                [
                    "laps"
                ],
                [
                    "laps"
                ],
                [
                    "laps"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                10,
                11
            ],
            7,
            [
                [
                    53
                ],
                [
                    53
                ],
                [
                    53
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Give the standard deviation and variance of the number of rooms per apartment. If an apartment has 6 rooms would you consider this an outlier?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var",
                "outlier"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ],
                [
                    "bedroom_count"
                ],
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9,
                7
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "For the unit price state the standard deviation and variance. show the outliers.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "var",
                "outlier"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "unit_price"
                ],
                [
                    "unit_price"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                9,
                7
            ],
            9,
            [
                [
                    61
                ],
                [
                    61
                ],
                [
                    61
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Look up the outliers for the salary of the Atlanta players. Give the variance for the salary of Boston players and finally find the median for the salary of Baltimore players",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier",
                "var",
                "median"
            ],
            "table": "salary",
            "columns": [
                [
                    "salary"
                ],
                [
                    "salary"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                7,
                9,
                4
            ],
            5,
            [
                [
                    62
                ],
                [
                    62
                ],
                [
                    62
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Calculate the median and mean of the variable \"g\". Also calculate the standard deviation.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean",
                "std"
            ],
            "table": "team",
            "columns": [
                [
                    "g"
                ],
                [
                    "g"
                ],
                [
                    "g"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                0,
                8
            ],
            8,
            [
                [
                    83
                ],
                [
                    83
                ],
                [
                    83
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Give median, mean and standard deviation for the ordered quantity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median",
                "mean",
                "std"
            ],
            "table": "Order_Items",
            "columns": [
                [
                    "Order_Quantity"
                ],
                [
                    "Order_Quantity"
                ],
                [
                    "Order_Quantity"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                4,
                0,
                8
            ],
            13,
            [
                [
                    75
                ],
                [
                    75
                ],
                [
                    75
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "State the variance for the age, also tell what is the average age of the artists.  Finally, what is the age limit of 50% of artists?",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "mean",
                "median"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ],
                [
                    "Age"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                0,
                4
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Consider the TV series rating to reveal the variance, interquartile range and range. ",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "iqr",
                "range"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating"
                ],
                [
                    "Rating"
                ],
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                11,
                10
            ],
            1,
            [
                [
                    13
                ],
                [
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "State the variance, interquartile range and range of the number of horsepower per car.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "var",
                "iqr",
                "range"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower"
                ],
                [
                    "Horsepower"
                ],
                [
                    "Horsepower"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                9,
                11,
                10
            ],
            5,
            [
                [
                    20
                ],
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Consider the width of the catalogs but use only level 8 catalogs to determine the sample size, mean absolute deviation and mean.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "size",
                "mean_ad",
                "mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "width"
                ],
                [
                    "width"
                ],
                [
                    "width"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                19,
                3,
                0
            ],
            3,
            [
                [
                    25
                ],
                [
                    25
                ],
                [
                    25
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Show the standard deviation, mean and median of the clean jerk.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "std",
                "mean",
                "median"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ],
                [
                    "Clean_Jerk"
                ],
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [],
                [],
                []
            ]
        },
        "python": [
            2,
            [
                8,
                0,
                4
            ],
            0,
            [
                [
                    4
                ],
                [
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [],
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Calculate the corr_coff between the variables shows position and shows audience.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Rating",
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            1,
            [
                [
                    13,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "Calculate the correlation coefficient between the variables total travelers and yearly interchanges",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers",
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            0,
            [
                [
                    5,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Determine the correlation coefficient between catalogs price in pounds and catalogs heights.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds",
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            3,
            [
                [
                    21,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the variables price in euros and catalog heights please show the correlation coefficients value.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds",
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            3,
            [
                [
                    21,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Show the table that displays correlation coefficients of doges ages and wights.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "age",
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            5,
            [
                [
                    26,
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "please for the dogs ages and weights variables, calculate the correlation coefficient for their values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_coff"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "age",
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                17
            ],
            5,
            [
                [
                    26,
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Drow the matrix of correlations between baths, beds and total room counts",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count",
                    "bedroom_count",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            1,
            [
                [
                    12,
                    13,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find out correlation matrix of all the baseball teams In term of their wins, losses and ties.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "postseason",
            "columns": [
                [
                    "wins",
                    "losses",
                    "ties"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            7,
            [
                [
                    74,
                    75,
                    76
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Show the correlation matrix of all body builders, in term of their clean jert and snatch exercise along with the total exercises",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk",
                    "Snatch",
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            0,
            [
                [
                    4,
                    3,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Give the correlation matrix for the cars horsepowers, weights and accelerators columns",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower",
                    "Weight",
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            5,
            [
                [
                    20,
                    21,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Give the correlation matrix for the cars horsepowers, weights and model year columns",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower",
                    "Weight",
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            5,
            [
                [
                    20,
                    21,
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show the correlation matrix for the cars accelerators, cylinders and car weights columns",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate",
                    "Cylinders",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            5,
            [
                [
                    22,
                    18,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Give the correlation matrix for the cars model year, edispl and car Accelerate variables",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Year",
                    "Edispl",
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            5,
            [
                [
                    23,
                    19,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Construct the corr_matrix between the total travelers, yearly movements and number of systems.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers",
                    "Annual_interchanges",
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            0,
            [
                [
                    5,
                    4,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "store_1",
        "question": "For the variables milliseconds duration, size bytes, and item cost, show the correlation matrix for them",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "tracks",
            "columns": [
                [
                    "milliseconds",
                    "bytes",
                    "unit_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            8,
            [
                [
                    55,
                    56,
                    57
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "For the match results variables gold, small silver and bronze, show the correlation matrix for them",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "match_result",
            "columns": [
                [
                    "Gold",
                    "Small_Silver",
                    "Bronze"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            4,
            [
                [
                    23,
                    25,
                    26
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "For the columns medallia small silver, medallia bronze, and score ponits show the correlation matrix for their relations",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "corr_matrix"
            ],
            "table": "match_result",
            "columns": [
                [
                    "Small_Silver",
                    "Bronze",
                    "Points"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                16
            ],
            4,
            [
                [
                    25,
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the weighted mean of the variable tv shows Viewers in millions using the weights as their shows Rating.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m",
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            1,
            [
                [
                    16,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "present the weighted mean for the variables total passengers using the weights as the sation count of platforms.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers",
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            0,
            [
                [
                    5,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Give me the weighted average of the variable catalogs costs in dollar where weights is catalogs capacities.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            3,
            [
                [
                    19,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "get the weighted mean for the catalogs price in euros using the weights as their catalogs capacities.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            3,
            [
                [
                    20,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Give me the weighted mean for the catalogs cost in pounts to catalogs capacities.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            3,
            [
                [
                    21,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the weighted mean for the cars weights to car number of cylinders.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            5,
            [
                [
                    21,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show me the weighted mean for the cars horsepowers values using the weights as their Cylinders.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            5,
            [
                [
                    20,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the weighted average for the cars accelerates where weights is number of cylinders.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            5,
            [
                [
                    22,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "present the weighted mean for the variables Heights to Weights.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            1,
            [
                [
                    8,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Show me the weighted mean for the player heights where the method weights is player weights.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "player",
            "columns": [
                [
                    "height",
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            4,
            [
                [
                    51,
                    50
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Show me the weighted median of the variables viewers in million to shows ratings.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m",
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            1,
            [
                [
                    16,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the weighted median of the variables Total number of Passengers where weights is count of platforms.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers",
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            0,
            [
                [
                    5,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "calculate the weighted median of the variable catalog price in dollar using the weights as catalog capacity.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            3,
            [
                [
                    19,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "calculate the weighted median for the catalog price in euros using the weights as catalog capacity.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            3,
            [
                [
                    20,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the weighted median for the catalog price in pounds using the weights as catalog capacity.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_pounds",
                    "capacity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            3,
            [
                [
                    21,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "present the weighted median for the cars weights using the weights as their cylinders values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            5,
            [
                [
                    21,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "get the weighted median for the cars Horsepowers where weights is Cylinders values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            5,
            [
                [
                    20,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "get the weighted median for the cars accelerates using the weights as their Cylinders values.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            5,
            [
                [
                    22,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "present the weighted median of the people height to weights.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            1,
            [
                [
                    8,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "For the heights of players show me the weighted median using the method weights as the players wieghts.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "player",
            "columns": [
                [
                    "height",
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            4,
            [
                [
                    51,
                    50
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "By using a circle chart, show the code of units where the weights are the sum of the number of their baths",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_type_code",
                    "bathroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    10,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "By using a Pie plot, show the codes of apartments where the weights are the sum of the number of their rooms",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_type_code",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    10,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Using a Pie graph, show the id of body builders where the weights are the sum of snatch exercise",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "People_ID",
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "By using a Pie chart, show the body builders ids where the weights are the sum of clean jerk exercise",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "People_ID",
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    2,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Sketch a circle chart, for the weight lifting people ids where the pie parts are the sum of their total training points. ",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "People_ID",
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            0,
            [
                [
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "body_builder",
        "question": "Sketch a Pie chart, for the name of body builders where the pie parts are the total of their weights",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "pie"
            ],
            "table": "people",
            "columns": [
                [
                    "Name",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                3
            ],
            1,
            [
                [
                    7,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Using the TV series viewers in millions and rating, present the contour plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m",
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    16,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Using the variables number of total number of travelers and yearly interchanges, Provide for me the silhouette plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers",
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    5,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "train_station",
        "question": "Given me the number of travelers and number of systems, Sketch for me the silhouette figure.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers",
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            0,
            [
                [
                    5,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "Considering the columns catalog capacity and its cost in USD dollar, Give me the contour figure.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity",
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            3,
            [
                [
                    22,
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Using the variables catalog capacity and its cost in Euros currency, Provide for me the contour chart.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity",
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            3,
            [
                [
                    22,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For the variables catalog height and its cost in Pounds currency, Give me the hexbin plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height",
                    "price_in_pounds"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            3,
            [
                [
                    24,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "For catalog costs in europe currancy and catalog wide size, Show me the silhouette chart.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros",
                    "width"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            3,
            [
                [
                    20,
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "dog_kennels",
        "question": "Plot for me a hexbin plot for the dogs weights and ages.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight",
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            5,
            [
                [
                    29,
                    26
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What is the contour plot for all cars in the database in terms of their Horsepower and cylinders values.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Horsepower",
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            5,
            [
                [
                    20,
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show me the hexagons plot for all vehicles in the database in terms of their quicken speed and horse power values.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hex"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate",
                    "Horsepower"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                6
            ],
            5,
            [
                [
                    22,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "car_1",
        "question": "Show me the contour plot for all cars in the database in terms of their weight and accelerates values.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight",
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            5,
            [
                [
                    21,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "please show the contour plot for people Heights and Weights .",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    8,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Sketch for me the contour plot for the counts of baths and beds in the Apartments.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bathroom_count",
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            1,
            [
                [
                    12,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Provide the silhouette plot for the people size in pounds and tall in cm.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "contour"
            ],
            "table": "player",
            "columns": [
                [
                    "weight",
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                7
            ],
            4,
            [
                [
                    50,
                    51
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show in hist graphic, the reservation availability code column.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            4,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show in bar graph, the relationship between building description and building name?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description",
                    "building_short_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    4,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show in bar graph, the variables building descriptions with their shorts names.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description",
                    "building_short_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    4,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Using bar graph, Disply the relationship between the manager's of each building and the building names",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_manager",
                    "building_short_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            0,
            [
                [
                    6,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the distribution of sex for all individuals using the hist plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Guests",
            "columns": [
                [
                    "gender_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show in histogram plot, how many available units in building unit status?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "View_Unit_Status",
            "columns": [
                [
                    "available_yn"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show in histogram graph, how many car models are in the car name table?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "car_names",
            "columns": [
                [
                    "Model"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            4,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show in histogram graph, the Cylinders in a car?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Show in histogram graph, the year column?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Display in scatter graph, the relationship between document status code and document type code.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_status_code",
                    "document_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            5,
            [
                [
                    13,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Display in scatter graph, the relationship between document status code and shipping agent code.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_status_code",
                    "shipping_agent_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            5,
            [
                [
                    13,
                    15
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Display in histogram graph, how namy document status in the documents table?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Display in histogram graph, how many document is in CD, hard drive and paper typies code in the documents table?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Display in histogram graph, the role code?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Employees",
            "columns": [
                [
                    "role_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            6,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Display in histogram graph, the document type code distribution?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "All_Documents",
            "columns": [
                [
                    "Document_Type_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            4,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Display in histogram graph, the role code column?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Role_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Display in histogram graph, the distribution of the documents type code?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_Type_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            3,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Display in histogram graph, the distribution of fun, good, very good and excellent document type description?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Display in bar graph, what are the catalog's name and publisher's name in the catalog table?",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Catalogs",
            "columns": [
                [
                    "catalog_name",
                    "catalog_publisher"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Display in bar graph, the catalog names and publishers names",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "bar"
            ],
            "table": "Catalogs",
            "columns": [
                [
                    "catalog_name",
                    "catalog_publisher"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                4
            ],
            1,
            [
                [
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Using a KDE graph, show me the distribution of their values of number of rooms in all apartments",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Using a KDE plot, show me the distribution of their values of catelogs price in USD dollars",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            3,
            [
                [
                    19
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "For the column cost of dog treatments, show KDE plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Deploy a kernel distribution estimation graph for yearly interchanges",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "apartment_rentals",
        "question": "Using the kernel density estimation, show the number of bedrooms in the apartments",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the Kernel Distribution Estimation plot for the number of systems available.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "station",
            "columns": [
                [
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "product_catalog",
        "question": "Show KDE for the products catalogs",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            3,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "using box-and-whisker plot, Give me data distribution for all tv shows position in week.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Considering the column product prices, show box graph.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "For the variable cost of tickets in the exhibition table, show box plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "Show the distribution of data for the boats weight in tons using box-and-whisker graph type",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "ship",
            "columns": [
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "body_builder",
        "question": "sketch Box figure for people heights.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "sketch Box figure for cars accelerator values.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            5,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Considering theme attendance, show Box graph.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Considering dogs weights, plot box graph",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            5,
            [
                [
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Show box plot using the variable postseason losses.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "postseason",
            "columns": [
                [
                    "losses"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            7,
            [
                [
                    75
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "By using a fiddle chart, show me the distribution of data for the number of audience per show.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "riding_club",
        "question": "provide the violin plot for the players votes.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "player",
            "columns": [
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "For the variable people weights, show violin plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "For the variable total number of passengers, show violin plot.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "violin"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                8
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Plot scattergram figure for the catalogs tall and costs in europe currancy.",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height",
                    "price_in_euros"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            3,
            [
                [
                    24,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "ship_1",
        "question": "Show me scatter plot for the captains ages and names",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "scatter"
            ],
            "table": "captain",
            "columns": [
                [
                    "age",
                    "Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                5
            ],
            0,
            [
                [
                    4,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "For the variable point max show the exponential distribution.",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "exponential"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "points_max"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                5
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "show me the median absolute deviation for the station yearly entry and exsit passengers.",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "show me the mean absolute deviation for the catalogs lengths",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "length"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            3,
            [
                [
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the snatch weight lifted by a bodybuilder, for bodybuilder who lifted clean jerk weights with a minimum of 35kg?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ],
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Clean_Jerk",
                    ">=",
                    35
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    35
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the total weight lifted by the bodybuilder when they snatch at least 10 and order results by clean jerk in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Snatch"
                ],
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Snatch",
                    ">=",
                    10
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    5
                ],
                [
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    10
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the identity (name and captain ID number) of the captain?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name",
                    "Captain_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the name, ID number, and age of the captain?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name",
                    "Captain_ID",
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    1,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the age of the Captain whose ID is 122?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "captain",
            "columns": [
                [
                    "age"
                ],
                [
                    "Captain_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Captain_ID",
                    "=",
                    122
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    122
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the Name and Class of the captain, sorted by the captain ID in descending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name",
                    "Class"
                ],
                [
                    "Captain_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    5
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What is the initial voting result for the Manager of the Year Award?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "votes_first"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What is the identification number of the manager award contest where the manager who accumulates at least 37 votes first wins?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "manager_award_vote",
            "columns": [
                [
                    "award_id"
                ],
                [
                    "votes_first"
                ]
            ],
            "extra_param": [
                [],
                [
                    "votes_first",
                    ">=",
                    37
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    37
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "When was the exhibition record established?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the date and cost of the exhibition?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Year",
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the name of the artist who is 34 years old?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Age",
                    "=",
                    34
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    34
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the cost of admission and the year of the exhibition that took place before 2005?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price",
                    "Year"
                ],
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Year",
                    "<",
                    2005
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    10,
                    7
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    2005
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the year and cost of the exhibition if the tickets are priced at less than $17?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Year",
                    "Ticket_Price"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    "<",
                    17
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    7,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    17
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the cost of the tickets and which year is the exhibition taking place, arranged in chronological order starting with the earliest year?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price",
                    "Year"
                ],
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10,
                    7
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the cost of the tickets and what year is the exhibition, arranged in order of decreasing ticket price?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Which guest IDs and dates of birth are associated with the guest, listed in ascending order of guest ID?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Guests",
            "columns": [
                [
                    "guest_id",
                    "date_of_birth"
                ],
                [
                    "guest_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    17,
                    21
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the other details of the Documents?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Other_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the code of the mission?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "mission",
            "columns": [
                [
                    "Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the code of the mission that was launched in the year 1850?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "mission",
            "columns": [
                [
                    "Code"
                ],
                [
                    "Launched_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Launched_Year",
                    "=",
                    1850
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    1850
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "In what year was the mission launched that had a speed of 36 knots?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "mission",
            "columns": [
                [
                    "Launched_Year"
                ],
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Speed_knots",
                    "=",
                    36
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    36
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What type of vessel is the ship with a maximum ship ID of 35?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "ship",
            "columns": [
                [
                    "Type"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    "<=",
                    35
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    35
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What was the year of launch and the speed in knots of a mission where the speed was less than 40 knots?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "mission",
            "columns": [
                [
                    "Launched_Year",
                    "Speed_knots"
                ],
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Speed_knots",
                    "<",
                    40
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    4,
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    40
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What type of ship is associated with a ship ID of 19, also show the ship id?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "ship",
            "columns": [
                [
                    "Type",
                    "Ship_ID"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    "=",
                    19
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    10,
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    19
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What year was the mission launched where the speed of the ship was 19 knots or greater, ordered by ship ID in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "mission",
            "columns": [
                [
                    "Launched_Year"
                ],
                [
                    "Speed_knots"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Speed_knots",
                    ">=",
                    19
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    4
                ],
                [
                    6
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    19
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "What is the home address of the player?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "player",
            "columns": [
                [
                    "Residence"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "What are the score and team ID of the game's results?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "match_result",
            "columns": [
                [
                    "Points",
                    "Club_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    27,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "What is the identifier of the team whose results include a total of 122 points or more?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "match_result",
            "columns": [
                [
                    "Club_ID"
                ],
                [
                    "Points"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Points",
                    ">=",
                    122
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    22
                ],
                [
                    27
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    122
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "What was the points of the game where the team's ID was at least 39?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "match_result",
            "columns": [
                [
                    "Points"
                ],
                [
                    "Club_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Club_ID",
                    ">=",
                    39
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    27
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    39
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What is the title of the employees?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "employees",
            "columns": [
                [
                    "title"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What is the unit cost of the invoice items whose quantity is less than 36?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "quantity"
                ]
            ],
            "extra_param": [
                [],
                [
                    "quantity",
                    "<",
                    36
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            9,
            [
                [
                    61
                ],
                [
                    62
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    36
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What is the unit cost and quantity for the invoices with a quantity greater than 39?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "invoice_lines",
            "columns": [
                [
                    "unit_price",
                    "quantity"
                ],
                [
                    "quantity"
                ]
            ],
            "extra_param": [
                [],
                [
                    "quantity",
                    ">",
                    39
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            9,
            [
                [
                    61,
                    62
                ],
                [
                    62
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    39
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "what is the total number of passengers in the station?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the yearly interchanges and  address of the station?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges",
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "How many passengers use the station each year if its annual interchange is 37?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ],
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_interchanges",
                    "=",
                    37
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    37
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Where is the location of the station with station ID of at most 35?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "Location"
                ],
                [
                    "Station_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Station_ID",
                    "<=",
                    35
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    35
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the identification number of the station that exchanges a minimum of 144 passengers each year?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "Station_ID"
                ],
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_interchanges",
                    ">=",
                    144
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    144
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Where is the station whose annual exchanges are less than 34, also show the annual exchanges value?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "Location",
                    "Annual_interchanges"
                ],
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_interchanges",
                    "<",
                    34
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6,
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    34
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Where is the station with a station ID of at least 15, also show the station id?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "Location",
                    "Station_ID"
                ],
                [
                    "Station_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Station_ID",
                    ">=",
                    15
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6,
                    1
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    15
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the location of the station where the station ID is 50 or greater, sorted by the total number of passengers in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "station",
            "columns": [
                [
                    "Location"
                ],
                [
                    "Station_ID"
                ],
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Station_ID",
                    ">=",
                    50
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    6
                ],
                [
                    1
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    50
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the station ID of the station with annual interchanges more than 34, sorted in ascending order according to total number of passengers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "station",
            "columns": [
                [
                    "Station_ID"
                ],
                [
                    "Annual_interchanges"
                ],
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_interchanges",
                    ">",
                    34
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    1
                ],
                [
                    4
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    34
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Order the station by its annual interchanges in ascending order, state the location and the amount of yearly interchange.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "station",
            "columns": [
                [
                    "Location",
                    "Annual_interchanges"
                ],
                [
                    "Annual_interchanges"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    6,
                    4
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the station's location and total number of passengers, sorted by the total number of passengers in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "station",
            "columns": [
                [
                    "Location",
                    "Total_Passengers"
                ],
                [
                    "Total_Passengers"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    6,
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the date of birth for the body builders?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the Height and Location of Birth for all the body builders?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Birth_Place"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    8,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the date of birth, height, and birthplace of the body builders?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Date",
                    "Height",
                    "Birth_Place"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    8,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the birthday of body builders whose height is no more than 170cm?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Date"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    "<=",
                    170
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    170
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Where are the body builders born who weigh at least 144 pounds?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Weight",
                    ">=",
                    144
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    144
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the Weight of people who are no taller than 180?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    "<=",
                    180
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    180
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Show the name of bodybuilder who weights at most 122 pounds?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Weight",
                    "<=",
                    122
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    7
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    122
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the birthplace of bodybuilder whose height is no more than 175 cm?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place",
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    "<=",
                    175
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11,
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    175
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Where is the birthplace of bodybuilder who weigh less than 80kg?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place",
                    "Weight"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Weight",
                    "<",
                    80
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11,
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    80
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the Name and birthplace of the individuals, sorted by their Weight in descending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place",
                    "Name"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11,
                    7
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the birthplace and height of bodybuilder, sorted from tallest to shortest?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place",
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11,
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "List all the flags of the vessel?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Flag"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Show the class and ship id for every captain?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "captain",
            "columns": [
                [
                    "Class",
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Show the type of every ship where the ship id is more than 3.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Type"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    ">",
                    3
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the class and ship ID of every captain whose ship ID is no more than 3?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "captain",
            "columns": [
                [
                    "Class",
                    "Ship_ID"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    "<=",
                    3
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5,
                    3
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the ship ID and Class of all the captain's, sorted in ascending order of ship ID?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "captain",
            "columns": [
                [
                    "Ship_ID",
                    "Class"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    5
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "How many people attended the exhibition?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the main topics of the exhibitions where ticket prices are no higher than $155?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    "<=",
                    155
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    155
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What was the date of the exhibitions that had an attendance count lower than 1239?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Date"
                ],
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Attendance",
                    "<",
                    1239
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    1239
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the theme name and Cost of the exhibition whose ticket price is higher than $16.95?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Ticket_Price"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    ">",
                    16.95
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    10
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    16.95
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the dates and number of people who attended the exhibitions that had a maximum attendance of 10908?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Date",
                    "Attendance"
                ],
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Attendance",
                    "<=",
                    10908
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12,
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    10908
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "List the theme gallary names that have a ticket cos above 10$ and sort the results by the number of attendees.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme"
                ],
                [
                    "Ticket_Price"
                ],
                [
                    "Attendance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    ">",
                    10
                ],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            1,
            [
                [
                    8
                ],
                [
                    10
                ],
                []
            ],
            [
                [],
                [
                    1,
                    1,
                    10
                ],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Show all the document ids and corresponding document type code there.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_id",
                    "document_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    12,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the document type code that has an id = 17?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_type_code"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    17
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    14
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    17
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show all the phone of apartment buildings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "View the address and ids of the buildings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_address",
                    "building_id"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    5,
                    1
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Sort the address and contact number of the buildings in ascending sorting of buildings identifier.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_address",
                    "building_phone"
                ],
                [
                    "building_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    5,
                    7
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the Statements identification number and account information for each Accounts?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "Statement_ID",
                    "Account_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    21,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the details of each Accounts with a statement ID number of 50 or less?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "Account_Details"
                ],
                [
                    "Statement_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Statement_ID",
                    "<=",
                    50
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            6,
            [
                [
                    22
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    50
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What are the ship speed in knots of all the missions?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "mission",
            "columns": [
                [
                    "Speed_knots"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What are the identification numbers and the size (in tons) of the vessels?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "ship",
            "columns": [
                [
                    "Ship_ID",
                    "Tonnage"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    8,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What are the weight capacity of a ships with an ID number of at least 16?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "ship",
            "columns": [
                [
                    "Tonnage"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    ">=",
                    16
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    12
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    16
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "By tonnage arrange the results in order of ascending, only show the ship id and the Tonnage of each ship.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "ship",
            "columns": [
                [
                    "Ship_ID",
                    "Tonnage"
                ],
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    12
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What are the telephone numbers of the employees in the stores?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "employees",
            "columns": [
                [
                    "phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the email addresses of the customers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_Email_Address"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            8,
            [
                [
                    45
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are the titles of the catalog listing?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are the ID and height of the items in the catalog?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "next_entry_id",
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    16,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are the name, entry ID and height of the items in the catalog?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name",
                    "next_entry_id",
                    "height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    17,
                    16,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are the names of the catalogs whose next entry ID is greater than 33?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ],
                [
                    "next_entry_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "next_entry_id",
                    ">",
                    33
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    33
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are the capacity of the catalog for catalog level 144?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "capacity"
                ],
                [
                    "catalog_level_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "catalog_level_number",
                    "=",
                    144
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    22
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    144
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the height and the name of the items in the catalog when they are ordered by the catalog level number, with the highest number first?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height",
                    "catalog_entry_name"
                ],
                [
                    "catalog_level_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    24,
                    17
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the height and subsequent entry ID of the catalogue contents, sorted by catalogue level number in descending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height",
                    "next_entry_id"
                ],
                [
                    "catalog_level_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    24,
                    16
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the height and Next Entry ID of the catalog content, sorted according to the Next Entry ID in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height",
                    "next_entry_id"
                ],
                [
                    "next_entry_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    24,
                    16
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the height and catalog level number of the catalog contents, sorted by catalog level number in descending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "height",
                    "catalog_level_number"
                ],
                [
                    "catalog_level_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    24,
                    13
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Where are the birthplace of people who are no taller than 180?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    "<=",
                    180
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    180
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "How much total weights can the bodybuilder snatch at most?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Snatch",
                    "<=",
                    40
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    40
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Where are the birthplace and how tall are the people with a height no greater than 172?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Place",
                    "Height"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    "<=",
                    172
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11,
                    8
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    172
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the Captains rank?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "captain",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "In What year were the Ships constructed and what are its Flags?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Built_Year",
                    "Flag"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the rank of the captain whose ship ID = 18?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "captain",
            "columns": [
                [
                    "Rank"
                ],
                [
                    "Ship_ID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    "=",
                    18
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    18
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the name of the flags flown by the ship constructed in 1888?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Flag"
                ],
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Built_Year",
                    "=",
                    1888
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    12
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    1888
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the rank of the captains for ships with an ID number lower than 325, ordered by their year of construction in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "orderby"
            ],
            "table": "captain",
            "columns": [
                [
                    "Rank"
                ],
                [
                    "Ship_ID"
                ],
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ship_ID",
                    "<",
                    325
                ],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                2
            ],
            0,
            [
                [
                    6
                ],
                [
                    3
                ],
                []
            ],
            [
                [],
                [
                    1,
                    2,
                    325
                ],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the date of arrivals and size codes of all the Dogs?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "date_arrived",
                    "size_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    30,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the dates when the Dogs were adopted by some people?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "date_adopted"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the first names of the Professionals?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Professionals",
            "columns": [
                [
                    "first_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    35
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "For each treatment, What are the explanation of the different types of treatment?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Treatment_Types",
            "columns": [
                [
                    "treatment_type_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the address street and last name of the dog owners?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Owners",
            "columns": [
                [
                    "street",
                    "last_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    13,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are all the genders of the Dogs in the shop?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "gender"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    28
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Provide me with the email address and zip code of the dog Owners.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Owners",
            "columns": [
                [
                    "email_address",
                    "zip_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    17,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the expenses of all the Treatments?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Treatments",
            "columns": [
                [
                    "cost_of_treatment"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    49
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the dogs weights in the kennels?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Please give me the starting and ending dates of all the Templates.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Date_Effective_To",
                    "Date_Effective_From"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    7,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Display the version number and date of Implementation of the Templates ordered from lowest to highest version number.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Version_Number",
                    "Date_Effective_To"
                ],
                [
                    "Version_Number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4,
                    7
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Display the version number and template type code of the Templates sorted by version number in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Version_Number",
                    "Template_Type_Code"
                ],
                [
                    "Version_Number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    4,
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What are the name of the company that manufactures cars exist in the database?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "car_makers",
            "columns": [
                [
                    "Maker"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Provide me with the Cylinders and Year of every cars.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders",
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    18,
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "'Display the Accelerate and Cylinders information of cars where Cylinders are fewer than 8.'",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Accelerate",
                    "Cylinders"
                ],
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Cylinders",
                    "<",
                    8
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    22,
                    18
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    8
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Display the Cylinders and Acceleration values from the automobiles data sorted in descending order by Acceleration.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders",
                    "Accelerate"
                ],
                [
                    "Accelerate"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            5,
            [
                [
                    18,
                    22
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Display the Cylinders and Acceleration of the cars data sorted by the number of Cylinders in descending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Cylinders",
                    "Accelerate"
                ],
                [
                    "Cylinders"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            5,
            [
                [
                    18,
                    22
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Display me the listing of car models where the Maker's value id is less than 10.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "model_list",
            "columns": [
                [
                    "Model"
                ],
                [
                    "Maker"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Maker",
                    "<",
                    10
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    10
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Display the Weight and Horsepower information from the cars data arranged in descending order according to Weight.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "Weight",
                    "Horsepower"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            5,
            [
                [
                    21,
                    20
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "Display the Miles-Per-Gallon data for vehicles that weigh a minimum of 3504.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "cars_data",
            "columns": [
                [
                    "MPG"
                ],
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Weight",
                    ">=",
                    3504
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    17
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    3504
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What language does the television channel exist in the database broadcast in?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Language"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Please provide me with the name of the TV series and a description of its content.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "series_name",
                    "Content"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "List all the tv channel languages, name of series and the kind of series they present",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Language",
                    "series_name",
                    "Content"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4,
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Show all the number of the channels in the tv series table",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Channel"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Please provide the titles of the TV show and the Pay Per View cost for the channels.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "series_name",
                    "Pay_per_view_PPV"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Display the television show Share and Weekly Rank sorted by Share in an ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Share",
                    "Weekly_Rank"
                ],
                [
                    "Share"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    14,
                    17
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Please provide me with the production code for all the Cartoons.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Production_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the director and production code of the cartoon with a production code of 102?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Directed_by",
                    "Production_code"
                ],
                [
                    "Production_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Production_code",
                    "=",
                    102.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    21,
                    24
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    102.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Display the share and channel of the television show ordered by share in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Share",
                    "Channel"
                ],
                [
                    "Share"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    14,
                    18
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the countries does the TV channels originate from?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Country"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the audience size and rating of the each television series?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m",
                    "Rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    16,
                    13
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the viewership in millions of the television series in which its weekly rank is higher than 50?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Viewers_m"
                ],
                [
                    "Weekly_Rank"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Weekly_Rank",
                    ">",
                    50.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    16
                ],
                [
                    17
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    50.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the titles of the cartoons and who directed each of them?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title",
                    "Directed_by"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    20,
                    21
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Please provide me with the name of the kids shows, the filmmaker, and the first air time.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title",
                    "Directed_by",
                    "Original_air_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    20,
                    21,
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "tvshow",
        "question": "What are the production codes and initial broadcast date of the Cartoons?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Production_code",
                    "Original_air_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    24,
                    23
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the name of the Cartoons with a Production Code greater than 101?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Production_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Production_code",
                    ">",
                    101
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    20
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    101
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Find the names of all the catalog entries.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are all the catalog entry names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the attribute data type of the attribute with name \" Green \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Attribute_Definitions",
            "columns": [
                [
                    "attribute_data_type"
                ],
                [
                    "attribute_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "attribute_name",
                    "=",
                    "Green"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Green"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Find the attribute data type for the attribute named \" Green \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Attribute_Definitions",
            "columns": [
                [
                    "attribute_data_type"
                ],
                [
                    "attribute_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "attribute_name",
                    "=",
                    "Green"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Green"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Find the name and capacity of products with cost greater than 700 (in USD).",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name",
                    "capacity"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                [
                    "price_in_dollars",
                    ">",
                    700.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17,
                    22
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    700.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Which catalog contents has cost above 700 dollars? Show their catalog entry names and capacities.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name",
                    "capacity"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                [
                    "price_in_dollars",
                    ">",
                    700.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17,
                    22
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    700.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "Name all the products with next entry ID greater than 8.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ],
                [
                    "next_entry_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "next_entry_id",
                    ">",
                    8.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    8.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What are the catalog entry names of the products with next entry ID above 8?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ],
                [
                    "next_entry_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "next_entry_id",
                    ">",
                    8.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    8.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "List every album' s title.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What are the titles of all the albums?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "List every album sorted by album title in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What are the titles of all the albums alphabetically ascending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "List all media types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "media_types",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    48
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What are the names of all the media types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "media_types",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    48
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "List all different genre types.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "genres",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    37
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What are the different names of the genres?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "genres",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    37
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "List the name of all playlist.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "playlists",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    64
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What are the names of all the playlists?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "playlists",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    64
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "Who is the composer of track Fast As a Shark?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "composer"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    54
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What is the composer who created the track \" Fast As a Shark \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "composer"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    54
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "How long does track Fast As a Shark has?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "milliseconds"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    55
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "How many milliseconds long is Fast As a Shark?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "milliseconds"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    55
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "How much is the track Fast As a Shark?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    57
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "store_1",
        "question": "What is the unit cost of the tune \" Fast As a Shark \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    57
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "List the sum of all scores of all weights lifting people sorted in ascend order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ],
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    5
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "body_builder",
        "question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch",
                    "Clean_Jerk"
                ],
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3,
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What are the birthdays of people in ascending order of height?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Birth_Date"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "List the height and weight of people in descending order of height.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Weight"
                ],
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    9
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Show all information about each body builder.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "*"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    0
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the start dates and end dates of all the apartment bookings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_start_date",
                    "booking_end_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the start date and end date of each apartment booking?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Bookings",
            "columns": [
                [
                    "booking_start_date",
                    "booking_end_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show all  building descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Give me a list of all the  building descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the short names of the buildings managed by \" Emma \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_short_name"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Emma"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Emma"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Which buildings does \" Emma \" manage? Give me the short names of the buildings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_short_name"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Emma"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Emma"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show the addresses and phones of all the buildings managed by \" Brenden \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_address",
                    "building_phone"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Brenden"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5,
                    7
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Brenden"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the address and phone number of the buildings managed by \" Brenden \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartment_Buildings",
            "columns": [
                [
                    "building_address",
                    "building_phone"
                ],
                [
                    "building_manager"
                ]
            ],
            "extra_param": [
                [],
                [
                    "building_manager",
                    "=",
                    "Brenden"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5,
                    7
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Brenden"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the apartment number and the number of rooms for each apartment.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the apartment number and the room count of each apartment?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number",
                    "room_count"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11,
                    14
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the apartment numbers of the apartments with type code \" Flat \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "apt_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "apt_type_code",
                    "=",
                    "Flat"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Flat"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Which apartments have type code \" Flat \"? Give me their apartment numbers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "apt_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "apt_type_code",
                    "=",
                    "Flat"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    11
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Flat"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the first names and last names of all guests",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Guests",
            "columns": [
                [
                    "guest_first_name",
                    "guest_last_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    19,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the first names and last names of all the guests?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Guests",
            "columns": [
                [
                    "guest_first_name",
                    "guest_last_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    19,
                    20
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return the date of birth for all the guests with gender code \" Male \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Guests",
            "columns": [
                [
                    "date_of_birth"
                ],
                [
                    "gender_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "gender_code",
                    "=",
                    "Male"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    21
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Male"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are dates of birth of all the guests whose gender is \" Male \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Guests",
            "columns": [
                [
                    "date_of_birth"
                ],
                [
                    "gender_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "gender_code",
                    "=",
                    "Male"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    21
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Male"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Return all the apartment numbers sorted by the room count in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "Sort the apartment numbers in ascending order of room count.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "apt_number"
                ],
                [
                    "room_count"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Show all artist name, age, and country sorted by the yeared they joined.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Age",
                    "Country"
                ],
                [
                    "Year_Join"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    5,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the names, ages, and countries of artists, sorted by the year they joined?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Age",
                    "Country"
                ],
                [
                    "Year_Join"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    5,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are all  country for artists?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "artist",
            "columns": [
                [
                    "Country"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Return the different countries for artists.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "artist",
            "columns": [
                [
                    "Country"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Show all artist names and the year joined who are not from United States.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Year_Join"
                ],
                [
                    "Country"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Country",
                    "!=",
                    "United States"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "United States"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the designation and year of starting for artists that do not have the nation \" United States \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "artist",
            "columns": [
                [
                    "Name",
                    "Year_Join"
                ],
                [
                    "Country"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Country",
                    "!=",
                    "United States"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "United States"
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "theme_gallery",
        "question": "Show theme and year for all exhibitions with ticket prices lower than 15.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    "<",
                    15.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    15.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the theme and year for all exhibitions that have a ticket cost under 15?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Ticket_Price",
                    "<",
                    15.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    15.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "Show theme and year for all exhibitions in an descending order of ticket cost.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What are the themes and years for exhibitions, sorted by ticket cost descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Theme",
                    "Year"
                ],
                [
                    "Ticket_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8,
                    7
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "List the names of players in ascending order of votes.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "player",
            "columns": [
                [
                    "Player_name"
                ],
                [
                    "Votes"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    3
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "What are the gender and occupation of players?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "player",
            "columns": [
                [
                    "Gender",
                    "Occupation"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    4,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "riding_club",
        "question": "List the title and place for individuals whose career is not \" Researcher \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "player",
            "columns": [
                [
                    "Player_name",
                    "Residence"
                ],
                [
                    "Occupation"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Occupation",
                    "!=",
                    "Researcher"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3,
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Researcher"
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What document status codes do we have?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Status",
            "columns": [
                [
                    "document_status_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the description of document status code' working '?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Status",
            "columns": [
                [
                    "document_status_description"
                ],
                [
                    "document_status_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_status_code",
                    "=",
                    "working"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    8
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "working"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What document type codes do we have?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "document_type_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the description of document type' Paper '?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "document_type_description"
                ],
                [
                    "document_type_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_type_code",
                    "=",
                    "Paper"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Paper"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What are the shipping agent names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Shipping_Agents",
            "columns": [
                [
                    "shipping_agent_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the shipping agent code of shipping agent UPS?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Shipping_Agents",
            "columns": [
                [
                    "shipping_agent_code"
                ],
                [
                    "shipping_agent_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "shipping_agent_name",
                    "=",
                    "UPS"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    9
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UPS"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What are all role codes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Roles",
            "columns": [
                [
                    "role_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the description of role code ED?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Roles",
            "columns": [
                [
                    "role_description"
                ],
                [
                    "role_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "role_code",
                    "=",
                    "ED"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    4
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "ED"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "List all document ids and receipt dates of documents.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_id",
                    "receipt_date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    12,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "List the document type code for the document with the id 2.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "document_type_code"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    2.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    14
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    2.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the receipt date of the document with id 3?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "receipt_date"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    3.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    16
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    3.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the mail date of the document with id 7?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents_Mailed",
            "columns": [
                [
                    "mailing_date"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    7.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            10,
            [
                [
                    35
                ],
                [
                    33
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    7.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is draft detail of the document with id 7?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Document_Drafts",
            "columns": [
                [
                    "draft_details"
                ],
                [
                    "document_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "document_id",
                    "=",
                    7.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            7,
            [
                [
                    25
                ],
                [
                    23
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    7.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "Find all the players' first name and last name who have empty death record.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "player",
            "columns": [
                [
                    "name_first",
                    "name_last"
                ],
                [
                    "death_year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "death_year",
                    "=",
                    ""
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    47,
                    48
                ],
                [
                    41
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    ""
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "baseball_1",
        "question": "What are the first name and last name of the players whose death record is empty?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "player",
            "columns": [
                [
                    "name_first",
                    "name_last"
                ],
                [
                    "death_year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "death_year",
                    "=",
                    ""
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    47,
                    48
                ],
                [
                    41
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    ""
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "List the name of ships in ascending order of tonnage.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "ship",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "what are the names of the ships sorted by ascending tonnage?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "ship",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Tonnage"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What are the type and nationality of ships?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "ship",
            "columns": [
                [
                    "Type",
                    "Nationality"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What are the types and nationalities of every ship?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "ship",
            "columns": [
                [
                    "Type",
                    "Nationality"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "List the name of ships whose nationality is not \" United States \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "ship",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Nationality"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Nationality",
                    "!=",
                    "United States"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "United States"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What are the names of the ships that are not from the United States?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "ship",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Nationality"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Nationality",
                    "!=",
                    "United States"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "United States"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show all calendar dates and day Numbers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Calendar",
            "columns": [
                [
                    "Calendar_Date",
                    "Day_Number"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are all the calendar dates and day Numbers?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Calendar",
            "columns": [
                [
                    "Calendar_Date",
                    "Day_Number"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "List all document type codes and document type names.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Code",
                    "Document_Type_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are all the document type codes and document type names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Code",
                    "Document_Type_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the name and description for document type code RV?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Name",
                    "Document_Type_Description"
                ],
                [
                    "Document_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Code",
                    "=",
                    "RV"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "RV"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Give me the name and description of the document type code RV.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Name",
                    "Document_Type_Description"
                ],
                [
                    "Document_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Code",
                    "=",
                    "RV"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "RV"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the document type code for document type \" Paper \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Code"
                ],
                [
                    "Document_Type_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Name",
                    "=",
                    "Paper"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Paper"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Find the code of the document type \" Paper \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Code"
                ],
                [
                    "Document_Type_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Name",
                    "=",
                    "Paper"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Paper"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the date when the document \" Marry CV \" was stored?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "All_Documents",
            "columns": [
                [
                    "Date_Stored"
                ],
                [
                    "Document_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Name",
                    "=",
                    "Marry CV"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    13
                ],
                [
                    15
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Marry CV"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "When was the file named \" Marry CV \" stored? Also, Give me the title of the file.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "All_Documents",
            "columns": [
                [
                    "Date_Stored"
                ],
                [
                    "Document_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Name",
                    "=",
                    "Marry CV"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    13
                ],
                [
                    15
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Marry CV"
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "List all location codes and location names.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Locations",
            "columns": [
                [
                    "Location_Code",
                    "Location_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are all the location codes and location names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Locations",
            "columns": [
                [
                    "Location_Code",
                    "Location_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the name and description for location code x?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Locations",
            "columns": [
                [
                    "Location_Name",
                    "Location_Description"
                ],
                [
                    "Location_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Code",
                    "=",
                    "x"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7,
                    8
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "x"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Give me the name and description of the location with code x.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Locations",
            "columns": [
                [
                    "Location_Name",
                    "Location_Description"
                ],
                [
                    "Location_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Code",
                    "=",
                    "x"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7,
                    8
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "x"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the location code for the country \" Canada \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Locations",
            "columns": [
                [
                    "Location_Code"
                ],
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Name",
                    "=",
                    "Canada"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    6
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Canada"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the location code of the country \" Canada \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Locations",
            "columns": [
                [
                    "Location_Code"
                ],
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Name",
                    "=",
                    "Canada"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    6
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Canada"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "List all role codes, role names, and role descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Roles",
            "columns": [
                [
                    "Role_Code",
                    "Role_Name",
                    "Role_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    9,
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are all the role codes, role names, and role descriptions?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Roles",
            "columns": [
                [
                    "Role_Code",
                    "Role_Name",
                    "Role_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    9,
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the name and description for role code \" MG \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Roles",
            "columns": [
                [
                    "Role_Name",
                    "Role_Description"
                ],
                [
                    "Role_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Role_Code",
                    "=",
                    "MG"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    10,
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "MG"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Find the name and description of the role with code \" MG \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Roles",
            "columns": [
                [
                    "Role_Name",
                    "Role_Description"
                ],
                [
                    "Role_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Role_Code",
                    "=",
                    "MG"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    10,
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "MG"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the description for role name \" Proof Reader \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Roles",
            "columns": [
                [
                    "Role_Description"
                ],
                [
                    "Role_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Role_Name",
                    "=",
                    "Proof Reader"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    11
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Proof Reader"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the description of the role named \" Proof Reader \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Roles",
            "columns": [
                [
                    "Role_Description"
                ],
                [
                    "Role_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Role_Name",
                    "=",
                    "Proof Reader"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    11
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Proof Reader"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the name, role code, and date of birth for the employee with name' Armani '.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Employee_Name",
                    "Role_Code",
                    "Date_of_Birth"
                ],
                [
                    "Employee_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Employee_Name",
                    "=",
                    "Armani"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    20,
                    19,
                    22
                ],
                [
                    20
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Armani"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the name, role code, and date of birth of the employee named' Armani '?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Employee_Name",
                    "Role_Code",
                    "Date_of_Birth"
                ],
                [
                    "Employee_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Employee_Name",
                    "=",
                    "Armani"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    20,
                    19,
                    22
                ],
                [
                    20
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Armani"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the id for the employee called Ebba?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Employee_ID"
                ],
                [
                    "Employee_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Employee_Name",
                    "=",
                    "Ebba"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    18
                ],
                [
                    20
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Ebba"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the id of the employee named Ebba.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Employee_ID"
                ],
                [
                    "Employee_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Employee_Name",
                    "=",
                    "Ebba"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    18
                ],
                [
                    20
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Ebba"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the names of all the employees with role \" HR \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Employee_Name"
                ],
                [
                    "Role_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Role_Code",
                    "=",
                    "HR"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    20
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "HR"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Which employees have the role with code \" HR \"? Find their names.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Employees",
            "columns": [
                [
                    "Employee_Name"
                ],
                [
                    "Role_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Role_Code",
                    "=",
                    "HR"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    20
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "HR"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the different location codes for documents?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Document_Locations",
            "columns": [
                [
                    "Location_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Give me all the  location codes for documents.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Document_Locations",
            "columns": [
                [
                    "Location_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the addresses code, the starting date and ending data in that address for all the files.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Document_Locations",
            "columns": [
                [
                    "Location_Code",
                    "Date_in_Location_From",
                    "Date_in_Locaton_To"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    25,
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are each document' s location code, and starting date and ending data in that location?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Document_Locations",
            "columns": [
                [
                    "Location_Code",
                    "Date_in_Location_From",
                    "Date_in_Locaton_To"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    25,
                    26,
                    27
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the ids of all employees who have authorized destruction.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents_to_be_Destroyed",
            "columns": [
                [
                    "Destruction_Authorised_by_Employee_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the ids of all the employees who authorize document destruction?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents_to_be_Destroyed",
            "columns": [
                [
                    "Destruction_Authorised_by_Employee_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    29
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the ids of all employees who have destroyed a document.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents_to_be_Destroyed",
            "columns": [
                [
                    "Destroyed_by_Employee_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the ids of all the employees who have destroyed documents?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents_to_be_Destroyed",
            "columns": [
                [
                    "Destroyed_by_Employee_ID"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List the order dates of all the bookings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Bookings",
            "columns": [
                [
                    "Order_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    59
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the order date of each booking?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Bookings",
            "columns": [
                [
                    "Order_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    59
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all the planned delivery dates and actual delivery dates of bookings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Bookings",
            "columns": [
                [
                    "Planned_Delivery_Date",
                    "Actual_Delivery_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    60,
                    61
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the planned delivery date and actual delivery date for each booking?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Bookings",
            "columns": [
                [
                    "Planned_Delivery_Date",
                    "Actual_Delivery_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    60,
                    61
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the phone and email for customer Harold?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_Phone",
                    "Customer_Email_Address"
                ],
                [
                    "Customer_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Customer_Name",
                    "=",
                    "Harold"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    44,
                    45
                ],
                [
                    43
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Harold"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the mobile number and electronic mail address of client with name \" Harold \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Customers",
            "columns": [
                [
                    "Customer_Phone",
                    "Customer_Email_Address"
                ],
                [
                    "Customer_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Customer_Name",
                    "=",
                    "Harold"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    44,
                    45
                ],
                [
                    43
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Harold"
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show all the Store_Name of drama workshop groups.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Drama_Workshop_Groups",
            "columns": [
                [
                    "Store_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the store names of drama workshop groups?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Drama_Workshop_Groups",
            "columns": [
                [
                    "Store_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    31
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the  payment method codes in all the invoices?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Invoices",
            "columns": [
                [
                    "payment_method_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            14,
            [
                [
                    79
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show me the payment type from the bills record.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Invoices",
            "columns": [
                [
                    "payment_method_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            14,
            [
                [
                    79
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the description of the marketing region China?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Marketing_Regions",
            "columns": [
                [
                    "Marketing_Region_Descriptrion"
                ],
                [
                    "Marketing_Region_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Marketing_Region_Name",
                    "=",
                    "China"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    19
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "China"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the marketing region description of China?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Marketing_Regions",
            "columns": [
                [
                    "Marketing_Region_Descriptrion"
                ],
                [
                    "Marketing_Region_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Marketing_Region_Name",
                    "=",
                    "China"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            4,
            [
                [
                    19
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "China"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "List all product names in ascending order of cost.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Name"
                ],
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    13
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Sort the title of items in ascending order of their cost.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Products",
            "columns": [
                [
                    "Product_Name"
                ],
                [
                    "Product_Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    13
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the phone number of the performer Ashley?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Performers",
            "columns": [
                [
                    "Customer_Phone"
                ],
                [
                    "Customer_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Customer_Name",
                    "=",
                    "Ashley"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            7,
            [
                [
                    38
                ],
                [
                    37
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Ashley"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Find the phone number of performer \" Ashley \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Performers",
            "columns": [
                [
                    "Customer_Phone"
                ],
                [
                    "Customer_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Customer_Name",
                    "=",
                    "Ashley"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            7,
            [
                [
                    38
                ],
                [
                    37
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Ashley"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the cost ranges of hotels?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Tell me the costs for all the inn places.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show all  location names.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Locations",
            "columns": [
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the  location names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Locations",
            "columns": [
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show the designation and information of all the workers members.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Staff",
            "columns": [
                [
                    "Name",
                    "Other_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            14,
            [
                [
                    49,
                    50
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the name and detail of each staff member?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Staff",
            "columns": [
                [
                    "Name",
                    "Other_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            14,
            [
                [
                    49,
                    50
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show information of all guests.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Visitors",
            "columns": [
                [
                    "Tourist_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the detail of each visitor?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Visitors",
            "columns": [
                [
                    "Tourist_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show the cost ranges of hotels with 5 star ratings.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ],
                [
                    "star_rating_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "star_rating_code",
                    "=",
                    5
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    16
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    5
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the cost ranges of five star hotels?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "price_range"
                ],
                [
                    "star_rating_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "star_rating_code",
                    "=",
                    5
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    16
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    5
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the address of the location \" UK Gallery \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Locations",
            "columns": [
                [
                    "Address"
                ],
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Name",
                    "=",
                    "UK Gallery"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UK Gallery"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Find the address of the location named \" UK Gallery \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Locations",
            "columns": [
                [
                    "Address"
                ],
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Name",
                    "=",
                    "UK Gallery"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UK Gallery"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the detail of the location UK Gallery?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Locations",
            "columns": [
                [
                    "Other_Details"
                ],
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Name",
                    "=",
                    "UK Gallery"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    6
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UK Gallery"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Return the detail of the location named \" UK Gallery \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Locations",
            "columns": [
                [
                    "Other_Details"
                ],
                [
                    "Location_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location_Name",
                    "=",
                    "UK Gallery"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    6
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "UK Gallery"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the  visit dates?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Visits",
            "columns": [
                [
                    "Visit_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            12,
            [
                [
                    39
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Find all the visit dates.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Visits",
            "columns": [
                [
                    "Visit_Date"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            12,
            [
                [
                    39
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the names of the tourist attractions that can be accessed by bus?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Tourist_Attractions",
            "columns": [
                [
                    "Name"
                ],
                [
                    "How_to_Get_There"
                ]
            ],
            "extra_param": [
                [],
                [
                    "How_to_Get_There",
                    "=",
                    "bus"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            6,
            [
                [
                    22
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "bus"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Tourist_Attractions",
            "columns": [
                [
                    "Name"
                ],
                [
                    "How_to_Get_There"
                ]
            ],
            "extra_param": [
                [],
                [
                    "How_to_Get_There",
                    "=",
                    "bus"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            6,
            [
                [
                    22
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "bus"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show the id and star rating of each hotel, sorted by its cost from low to high.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "hotel_id",
                    "star_rating_code"
                ],
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            5,
            [
                [
                    13,
                    14
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Find the identification and class rating of each living places and sort them in increasing order of cost.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Hotels",
            "columns": [
                [
                    "hotel_id",
                    "star_rating_code"
                ],
                [
                    "price_range"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            5,
            [
                [
                    13,
                    14
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "ship_1",
        "question": "Sort all captain names by their ages from old to young.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the names of captains, sorted by age descending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Find the name, class and rank of all captains.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name",
                    "Class",
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the names, classes, and ranks of all captains?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "captain",
            "columns": [
                [
                    "Name",
                    "Class",
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    5,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "List all ship names in the order of built year and class.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What are the names of ships, sorted by year they were built and their class?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Built_Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    8
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Show all account ids and account details.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "Account_ID",
                    "Account_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    20,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the ids and details of all accounts?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Accounts",
            "columns": [
                [
                    "Account_ID",
                    "Account_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    20,
                    22
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "List all statement ids and statement details.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Statements",
            "columns": [
                [
                    "Statement_ID",
                    "Statement_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    15,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the ids and details of all statements?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Statements",
            "columns": [
                [
                    "Statement_ID",
                    "Statement_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            4,
            [
                [
                    15,
                    16
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Show the ids and names of all documents.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_ID",
                    "Document_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    8,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the ids and names for each of the documents?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_ID",
                    "Document_Name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    8,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Find names and ids of all documents with document type code BK.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_Name",
                    "Document_ID"
                ],
                [
                    "Document_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Code",
                    "=",
                    "BK"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    12,
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "BK"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the names and ids of documents that have the type code BK?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_Name",
                    "Document_ID"
                ],
                [
                    "Document_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Code",
                    "=",
                    "BK"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    12,
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "BK"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Show all document type codes, document type names, document type descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Code",
                    "Document_Type_Name",
                    "Document_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the codes, names, and descriptions of the different document types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Code",
                    "Document_Type_Name",
                    "Document_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2,
                    3
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the document type description for document type named Film?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Description"
                ],
                [
                    "Document_Type_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Name",
                    "=",
                    "Film"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Film"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Return the explanation of each file with type name' Film '.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Document_Types",
            "columns": [
                [
                    "Document_Type_Description"
                ],
                [
                    "Document_Type_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Type_Name",
                    "=",
                    "Film"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Film"
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "List ids and details for all projects.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Projects",
            "columns": [
                [
                    "Project_ID",
                    "Project_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the ids and details for each project?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Projects",
            "columns": [
                [
                    "Project_ID",
                    "Project_Details"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "List all budget type codes and descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Budget_Codes",
            "columns": [
                [
                    "Budget_Type_Code",
                    "Budget_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the type codes and descriptions of each budget type?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Budget_Codes",
            "columns": [
                [
                    "Budget_Type_Code",
                    "Budget_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the description for the budget type with code ORG?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Budget_Codes",
            "columns": [
                [
                    "Budget_Type_Description"
                ],
                [
                    "Budget_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Budget_Type_Code",
                    "=",
                    "ORG"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "ORG"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Return the description of the budget type that has the code ORG.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Budget_Codes",
            "columns": [
                [
                    "Budget_Type_Description"
                ],
                [
                    "Budget_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Budget_Type_Code",
                    "=",
                    "ORG"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "ORG"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the document ids for the budget type code' SF '?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents_with_Expenses",
            "columns": [
                [
                    "Document_ID"
                ],
                [
                    "Budget_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Budget_Type_Code",
                    "=",
                    "SF"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    17
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "SF"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Give the ids of documents with expenses that have the budget code' SF '.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents_with_Expenses",
            "columns": [
                [
                    "Document_ID"
                ],
                [
                    "Budget_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Budget_Type_Code",
                    "=",
                    "SF"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    17
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "SF"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Show the name, location, and number of platforms for all stations.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "station",
            "columns": [
                [
                    "Name",
                    "Location",
                    "Number_of_Platforms"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2,
                    6,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What are all locations of train stations?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "station",
            "columns": [
                [
                    "Location"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Show the names and total passengers for all train stations not in London.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "Name",
                    "Total_Passengers"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Location",
                    "!=",
                    "London"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "London"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Show the name, time, and service for all trains.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "train",
            "columns": [
                [
                    "Name",
                    "Time",
                    "Service"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "Show the name and service for all trains in order by time.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "train",
            "columns": [
                [
                    "Name",
                    "Service"
                ],
                [
                    "Time"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    10,
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "List the names and locations of all stations sorted by their yearly entry exit and interchange amounts.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "station",
            "columns": [
                [
                    "Name",
                    "Location"
                ],
                [
                    "Annual_entry_exit"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2,
                    6
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What are all the makers and models?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "model_list",
            "columns": [
                [
                    "Maker",
                    "Model"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "car_1",
        "question": "What are the makers and models?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "model_list",
            "columns": [
                [
                    "Maker",
                    "Model"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_ID",
                    "Document_Name",
                    "Document_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    9,
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What are the ids, names, and descriptions for all documents?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_ID",
                    "Document_Name",
                    "Document_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    9,
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What is the document id, template id and description for document named \" Robbin CV \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_ID",
                    "Template_ID",
                    "Document_Description"
                ],
                [
                    "Document_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Name",
                    "=",
                    "Robbin CV"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    9,
                    10,
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Robbin CV"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Document_ID",
                    "Template_ID",
                    "Document_Description"
                ],
                [
                    "Document_Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Document_Name",
                    "=",
                    "Robbin CV"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    9,
                    10,
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Robbin CV"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Template_ID",
                    "Version_Number",
                    "Template_Type_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    3,
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What are the identification number, series numbers, and type codes for each forms?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Template_ID",
                    "Version_Number",
                    "Template_Type_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    3,
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Show all  template type codes for all templates.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Template_Type_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What are the different template type codes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Template_Type_Code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What is the version number and template type code for the template with version number later than 5?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Version_Number",
                    "Template_Type_Code"
                ],
                [
                    "Version_Number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Version_Number",
                    ">",
                    5.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    4,
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    5.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Templates",
            "columns": [
                [
                    "Version_Number",
                    "Template_Type_Code"
                ],
                [
                    "Version_Number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Version_Number",
                    ">",
                    5.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    4,
                    5
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    5.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Show all template type codes and descriptions.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Template_Types",
            "columns": [
                [
                    "Template_Type_Code",
                    "Template_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What are the type codes and descriptions for all template types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Ref_Template_Types",
            "columns": [
                [
                    "Template_Type_Code",
                    "Template_Type_Description"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What is the template type descriptions for template type code \" AD \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Template_Types",
            "columns": [
                [
                    "Template_Type_Description"
                ],
                [
                    "Template_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Template_Type_Code",
                    "=",
                    "AD"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "AD"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Return the template type description of the template type with the code AD.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Template_Types",
            "columns": [
                [
                    "Template_Type_Description"
                ],
                [
                    "Template_Type_Code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Template_Type_Code",
                    "=",
                    "AD"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "AD"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "What is the template type code for template type description \" Book \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Template_Types",
            "columns": [
                [
                    "Template_Type_Code"
                ],
                [
                    "Template_Type_Description"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Template_Type_Description",
                    "=",
                    "Book"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Book"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question": "Return the type code of the template type with the description \" Book \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Ref_Template_Types",
            "columns": [
                [
                    "Template_Type_Code"
                ],
                [
                    "Template_Type_Description"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Template_Type_Description",
                    "=",
                    "Book"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Book"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "List the title of all cartoons in alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the titles of the cartoons sorted alphabetically?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    20
                ],
                [
                    20
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "List all cartoon directed by \" Ben Jones \".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Directed_by"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Directed_by",
                    "=",
                    "Ben Jones"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    20
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Ben Jones"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the names of all kids shows made by Ben Jones?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Directed_by"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Directed_by",
                    "=",
                    "Ben Jones"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    20
                ],
                [
                    21
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Ben Jones"
                ]
            ]
        ],
        "synonym": true
    },
    {
        "db_id": "tvshow",
        "question": "list all cartoon titles and their directors sorted by their air date",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title",
                    "Directed_by"
                ],
                [
                    "Original_air_date"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    20,
                    21
                ],
                [
                    23
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the name and directors of all the cartoons that are sorted by air date?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Cartoon",
            "columns": [
                [
                    "Title",
                    "Directed_by"
                ],
                [
                    "Original_air_date"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    20,
                    21
                ],
                [
                    23
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the content of TV Channel with serial name \" Sky Radio \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Content"
                ],
                [
                    "series_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "series_name",
                    "=",
                    "Sky Radio"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Sky Radio"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the content of the series Sky Radio?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Content"
                ],
                [
                    "series_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "series_name",
                    "=",
                    "Sky Radio"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    5
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Sky Radio"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the Package Option of TV Channel with serial name \" Sky Radio \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Package_Option"
                ],
                [
                    "series_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "series_name",
                    "=",
                    "Sky Radio"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    9
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Sky Radio"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Package_Option"
                ],
                [
                    "series_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "series_name",
                    "=",
                    "Sky Radio"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    9
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Sky Radio"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "List the Episode of all TV series sorted by rating.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Episode"
                ],
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are all of the episodes sorted by ratings?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Episode"
                ],
                [
                    "Rating"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the air date of TV series with Episode \" A Love of a Lifetime \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Air_Date"
                ],
                [
                    "Episode"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Episode",
                    "=",
                    "A Love of a Lifetime"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "A Love of a Lifetime"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "When did the episode \" A Love of a Lifetime \" air?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Air_Date"
                ],
                [
                    "Episode"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Episode",
                    "=",
                    "A Love of a Lifetime"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "A Love of a Lifetime"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is Weekly Rank of TV series with Episode \" A Love of a Lifetime \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ],
                [
                    "Episode"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Episode",
                    "=",
                    "A Love of a Lifetime"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    17
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "A Love of a Lifetime"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the weekly rank for the episode \" A Love of a Lifetime \"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_series",
            "columns": [
                [
                    "Weekly_Rank"
                ],
                [
                    "Episode"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Episode",
                    "=",
                    "A Love of a Lifetime"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    17
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "A Love of a Lifetime"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Package_Option",
                    "series_name"
                ],
                [
                    "Hight_definition_TV"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Hight_definition_TV",
                    "=",
                    "yes"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    9,
                    2
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "yes"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Package_Option",
                    "series_name"
                ],
                [
                    "Hight_definition_TV"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Hight_definition_TV",
                    "=",
                    "yes"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    9,
                    2
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "yes"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Pixel_aspect_ratio_PAR",
                    "Country"
                ],
                [
                    "Language"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Language",
                    "!=",
                    "English"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "English"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "tvshow",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "TV_Channel",
            "columns": [
                [
                    "Pixel_aspect_ratio_PAR",
                    "Country"
                ],
                [
                    "Language"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Language",
                    "!=",
                    "English"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6,
                    3
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "English"
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the arriving date and the departing date of all the dogs?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "date_arrived",
                    "date_departed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    30,
                    32
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "List the arrival date and the departure date for all the dogs.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "date_arrived",
                    "date_departed"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    30,
                    32
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "name",
                    "age",
                    "weight"
                ],
                [
                    "abandoned_yn"
                ]
            ],
            "extra_param": [
                [],
                [
                    "abandoned_yn",
                    "=",
                    1.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    25,
                    26,
                    29
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    1.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "name",
                    "age",
                    "weight"
                ],
                [
                    "abandoned_yn"
                ]
            ],
            "extra_param": [
                [],
                [
                    "abandoned_yn",
                    "=",
                    1.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            5,
            [
                [
                    25,
                    26,
                    29
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    1.0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "How much does each charge type costs? List both charge type and amount.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_type",
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "List each charge type and its amount.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Charges",
            "columns": [
                [
                    "charge_type",
                    "charge_amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    4,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "List the email, cell phone and home phone of all the professionals.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Professionals",
            "columns": [
                [
                    "email_address",
                    "cell_number",
                    "home_phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    41,
                    43,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are the email, cell phone and home phone of each professional?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Professionals",
            "columns": [
                [
                    "email_address",
                    "cell_number",
                    "home_phone"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    41,
                    43,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "What are all the possible breed type and size type combinations?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "breed_code",
                    "size_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    23,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "dog_kennels",
        "question": "Find the  breed type and size type combinations for dogs.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Dogs",
            "columns": [
                [
                    "breed_code",
                    "size_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    23,
                    24
                ]
            ],
            [
                []
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the minimum people's weight in terms of birthpalce?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Birth_Place"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the maximum person's height in terms of birthplace?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Birth_Place"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    8
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "Who is the shortest highest of people in the body_builder dataset grouped by people names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    8
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is total weights of people grouped by people's birthdate?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Birth_Date"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    9
                ],
                [
                    10
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the maximum people height, grouped by name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    8
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the minimum people weight, in terms of people height >= 35 and grouped by birthplace?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ],
                [
                    "Height"
                ],
                [
                    "Birth_Place"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Height",
                    ">=",
                    35
                ],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            1,
            [
                [
                    9
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    35
                ],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "body_builder",
        "question": "What is the minimum people height, in terms of people weight <= 35 and grouped by name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ],
                [
                    "Weight"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Weight",
                    "<=",
                    35
                ],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            1,
            [
                [
                    8
                ],
                [
                    9
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    35
                ],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the earliest year of ship's built_year grouped by ship's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Built_Year"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the minimum Ship_ID that listed in the ship table, grouped by Flag?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Flag"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    7
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "Count how many ship ID, in terms of built_year > = 1800 and grouped by type?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "Ship",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Built_Year"
                ],
                [
                    "Type"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Built_Year",
                    ">=",
                    1800
                ],
                [
                    "groupby",
                    "=",
                    "count"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            1,
            [
                [
                    7
                ],
                [
                    10
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    1800
                ],
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_1",
        "question": "What is the minimum number of Ship_ID that listed in captain table, grouped by name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "captain",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the lowest ticket price, grouped by exhibition's theme?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ],
                [
                    "Theme"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the minimum artist's age, grouped by artist's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "artist",
            "columns": [
                [
                    "Age"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    5
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the minimum number of audience in the exhibition record grouped by date?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "exhibition_record",
            "columns": [
                [
                    "Attendance"
                ],
                [
                    "Date"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            2,
            [
                [
                    13
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the total of ticket price for all themes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "exhibition",
            "columns": [
                [
                    "Ticket_Price"
                ],
                [
                    "Theme"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    10
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "apartment_rentals",
        "question": "How many bedroom in the apartments, grouped by apt_number?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Apartments",
            "columns": [
                [
                    "bedroom_count"
                ],
                [
                    "apt_number"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "count"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    13
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the minimum number of Project_ID , grouped by document description?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Documents",
            "columns": [
                [
                    "Project_ID"
                ],
                [
                    "Document_Description"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            3,
            [
                [
                    10
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "Find the total of launched year, grouped by mission's location.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "mission",
            "columns": [
                [
                    "Launched_Year"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    4
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the minimum Ship_ID, grouped by ship's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "ship",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the maximum Ship_IDm grouped by mission's location?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "mission",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    2
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "How many Ship_ID listed in the mission table, grouped by mission's fate?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "mission",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Fate"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "count"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    2
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the ship's tonnage, grouped by nationality?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "ship",
            "columns": [
                [
                    "Tonnage"
                ],
                [
                    "Nationality"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            1,
            [
                [
                    12
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "ship_mission",
        "question": "What is the maximum Ship_ID for all missions, grouped by Fate?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "mission",
            "columns": [
                [
                    "Ship_ID"
                ],
                [
                    "Fate"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    2
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "How many annual interchanges in terms of location?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ],
                [
                    "Location"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "count"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    4
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the total number of passengers, grouped by name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    5
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "How many station annual entry exit grouped by station's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "count"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "In terms of Annual_entry_exit < 18, what is the maximum number of passengers grouped by station's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ],
                [
                    "Annual_entry_exit"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_entry_exit",
                    "<",
                    18
                ],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            0,
            [
                [
                    5
                ],
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    18
                ],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "In terms of Annual_entry_exit >= 17, what is the total number of passengers grouped by station's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ],
                [
                    "Annual_entry_exit"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_entry_exit",
                    ">=",
                    17
                ],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            0,
            [
                [
                    4
                ],
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    17
                ],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "In terms of station ID >= 154, what is the total number of station aannual interchanges grouped by station's name?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_interchanges"
                ],
                [
                    "Station_ID"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Station_ID",
                    ">=",
                    154
                ],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            0,
            [
                [
                    4
                ],
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    154
                ],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the maximum Annual_entry_exit in terms of Annual_interchanges <= 10 and grouped by Main_Services column?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Annual_entry_exit"
                ],
                [
                    "Annual_interchanges"
                ],
                [
                    "Main_Services"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Annual_interchanges",
                    "<=",
                    10
                ],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1,
                3
            ],
            0,
            [
                [
                    3
                ],
                [
                    4
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    4,
                    10
                ],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "train_station",
        "question": "What is the maximum number of total passengers in all stations, grouped by main services?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "station",
            "columns": [
                [
                    "Total_Passengers"
                ],
                [
                    "Main_Services"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "max"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            0,
            [
                [
                    5
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the sum of Royal_Family_ID in the royal family, grouped by Royal_Family_Details?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Royal_Family",
            "columns": [
                [
                    "Royal_Family_ID"
                ],
                [
                    "Royal_Family_Details"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            10,
            [
                [
                    32
                ],
                [
                    33
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the total catalog level number grouped by catalog_content's height?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_level_number"
                ],
                [
                    "height"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "sum"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            3,
            [
                [
                    13
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "synonym": false
    },
    {
        "db_id": "product_catalog",
        "question": "What is the lowest price in europe currancy, grouped by size?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "groupby"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "price_in_euros"
                ],
                [
                    "capacity"
                ]
            ],
            "extra_param": [
                [],
                [
                    "groupby",
                    "=",
                    "min"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                3
            ],
            3,
            [
                [
                    20
                ],
                [
                    22
                ]
            ],
            [
                [],
                [
                    3,
                    0,
                    0
                ]
            ]
        ],
        "synonym": true
    }
]