[
    {
        "db_id": "college_2",
        "question": "show me the normal distribution for start_min",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_min"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            9,
            [
                [
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "start_min"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "show me the normal distribution for the authOrder",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "find normal distribution for the Number_city_affected",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "the",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "race_track",
        "question": "what is the normal distribution for Seating",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "what is the normal distribution for product_price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "product_price"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "find normal distribution for the Settlement_Amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "show me the normal distribution for Rank_in_Round",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "store_product",
        "question": "calculate the normal distribution for the City_Population",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "City_Population"
        ]
    },
    {
        "db_id": "music_1",
        "question": "show me the normal distribution for the rating",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "rating"
        ]
    },
    {
        "db_id": "farm",
        "question": "what is the normal distribution for the Population",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "city",
            "columns": [
                [
                    "Population"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "the",
            "Population"
        ]
    },
    {
        "db_id": "city_record",
        "question": "find normal distribution for Dec",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Dec"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    24
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "Dec"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "find normal distribution for FlightNo",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "normal",
            "distribution",
            "for",
            "FlightNo"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "show me the normal distribution for Manufacturer",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "normal",
            "distribution",
            "for",
            "Manufacturer"
        ]
    },
    {
        "db_id": "network_2",
        "question": "calculate the normal distribution for year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "normal",
            "distribution",
            "for",
            "year"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "what is the normal distribution for SSN",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "normal"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                0
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "normal",
            "distribution",
            "for",
            "SSN"
        ]
    },
    {
        "db_id": "college_2",
        "question": "show me the standardized normal distribution for the salary",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "instructor",
            "columns": [
                [
                    "salary"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            3,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "salary"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "show me the standardized normal distribution for the authOrder",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "show me the standardized normal distribution for Damage_millions_USD",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "storm",
            "columns": [
                [
                    "Damage_millions_USD"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Damage_millions_USD"
        ]
    },
    {
        "db_id": "race_track",
        "question": "calculate the standardized normal distribution for Year_Opened",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Year_Opened"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show me the standardized normal distribution for product_price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Products",
            "columns": [
                [
                    "product_price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            5,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "product_price"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show me the standardized normal distribution for the Settlement_Amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "find standardized normal distribution for Rank_in_Round",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "store_product",
        "question": "find standardized normal distribution for Ranking",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "store",
            "columns": [
                [
                    "Ranking"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "standardized",
            "normal",
            "distribution",
            "for",
            "Ranking"
        ]
    },
    {
        "db_id": "music_1",
        "question": "calculate the standardized normal distribution for the rating",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "rating"
        ]
    },
    {
        "db_id": "farm",
        "question": "calculate the standardized normal distribution for the Area_km_2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "city",
            "columns": [
                [
                    "Area_km_2"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Area_km_2"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the standardized normal distribution for the Mar",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Mar"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Mar"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "what is the standardized normal distribution for the FlightNo",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "FlightNo"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "calculate the standardized normal distribution for the Manufacturer",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "Manufacturer"
        ]
    },
    {
        "db_id": "network_2",
        "question": "calculate the standardized normal distribution for the age",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "the",
            "age"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "calculate the standardized normal distribution for SSN",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "standard_normal"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                1
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "standardized",
            "normal",
            "distribution",
            "for",
            "SSN"
        ]
    },
    {
        "db_id": "college_2",
        "question": "find long tailed distribution for the end_hr",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            9,
            [
                [
                    43
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "end_hr"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "show me the long tailed distribution for the authOrder",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "find long tailed distribution for the Number_city_affected",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "race_track",
        "question": "what is the long tailed distribution for the Year_Opened",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "track",
            "columns": [
                [
                    "Year_Opened"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Year_Opened"
        ]
    },
    {
        "db_id": "department_store",
        "question": "calculate the long tailed distribution for total_value_purchased",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show me the long tailed distribution for the Settlement_Amount",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "show me the long tailed distribution for the Rank_in_Round",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "store_product",
        "question": "find long tailed distribution for the City_Area",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "district",
            "columns": [
                [
                    "City_Area"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "City_Area"
        ]
    },
    {
        "db_id": "music_1",
        "question": "what is the long tailed distribution for resolution",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "resolution"
        ]
    },
    {
        "db_id": "farm",
        "question": "show me the long tailed distribution for the Bulls",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "farm",
            "columns": [
                [
                    "Bulls"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    13
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Bulls"
        ]
    },
    {
        "db_id": "city_record",
        "question": "calculate the long tailed distribution for the GDP",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "city",
            "columns": [
                [
                    "GDP"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "calculate",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "GDP"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "what is the long tailed distribution for the Airline",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "flights",
            "columns": [
                [
                    "Airline"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Airline"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "show me the long tailed distribution for the Price",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "Products",
            "columns": [
                [
                    "Price"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Price"
        ]
    },
    {
        "db_id": "network_2",
        "question": "find long tailed distribution for year",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "PersonFriend",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "find",
            "long",
            "tailed",
            "distribution",
            "for",
            "year"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "show me the long tailed distribution for the Scientist",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "long_tailed"
            ],
            "table": "AssignedTo",
            "columns": [
                [
                    "Scientist"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            0,
            [
                2
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "long",
            "tailed",
            "distribution",
            "for",
            "the",
            "Scientist"
        ]
    },
    {
        "db_id": "college_2",
        "question": "find student t distribution for end_hr with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "end_hr"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            9,
            [
                [
                    43
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "end_hr",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "what is the student t distribution for authOrder with degree of freedom of 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "authOrder",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "1"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "what is the student t distribution for the Max_speed with df equal 1",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "storm",
            "columns": [
                [
                    "Max_speed"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    1
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                [
                    3,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "the",
            "Max_speed",
            "with",
            "df",
            "equal",
            "1"
        ]
    },
    {
        "db_id": "race_track",
        "question": "what is the student t distribution for Seating with degree of freedom of 3",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    3
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                [
                    3,
                    0,
                    3
                ]
            ]
        ],
        "question_tokens": [
            "what",
            "is",
            "the",
            "student",
            "t",
            "distribution",
            "for",
            "Seating",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "3"
        ]
    },
    {
        "db_id": "department_store",
        "question": "find student t distribution for total_value_purchased with degree of freedom of 2",
        "function": {
            "main_kind": "distribution",
            "sub_kinds": [
                "t"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                [
                    "df",
                    "=",
                    2
                ]
            ]
        },
        "python": [
            0,
            [
                3
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                [
                    3,
                    0,
                    2
                ]
            ]
        ],
        "question_tokens": [
            "find",
            "student",
            "t",
            "distribution",
            "for",
            "total_value_purchased",
            "with",
            "degree",
            "of",
            "freedom",
            "of",
            "2"
        ]
    },
    {
        "db_id": "college_2",
        "question": "provide the histogram plot for the year",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "teaches",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            5,
            [
                [
                    26
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "year"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "provide the histogram plot for the authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Give me a histogram plot for the Number_city_affected",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "affected_region",
            "columns": [
                [
                    "Number_city_affected"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "the",
            "Number_city_affected"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Give the histogram plot for the Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "provide the histogram plot for total_value_purchased",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show a histogram plot for the Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "histogram",
            "plot",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "Give me a histogram plot for Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "store_product",
        "question": "Give me a histogram plot for the Area_size",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "store",
            "columns": [
                [
                    "Area_size"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "the",
            "Area_size"
        ]
    },
    {
        "db_id": "music_1",
        "question": "Give the histogram plot for rating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "song",
            "columns": [
                [
                    "rating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            3,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "rating"
        ]
    },
    {
        "db_id": "farm",
        "question": "Give me a histogram plot for Pigs",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "farm",
            "columns": [
                [
                    "Pigs"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            1,
            [
                [
                    15
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "Pigs"
        ]
    },
    {
        "db_id": "city_record",
        "question": "provide the histogram plot for Jun",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Jun"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "Jun"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "provide the histogram plot for the FlightNo",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "histogram",
            "plot",
            "for",
            "the",
            "FlightNo"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "Give the histogram plot for Revenue",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Manufacturers",
            "columns": [
                [
                    "Revenue"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "Revenue"
        ]
    },
    {
        "db_id": "network_2",
        "question": "Give the histogram plot for age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "histogram",
            "plot",
            "for",
            "age"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "Give me a histogram plot for the SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "hist"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                0
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "histogram",
            "plot",
            "for",
            "the",
            "SSN"
        ]
    },
    {
        "db_id": "college_2",
        "question": "Give me a box plot for start_hr",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "time_slot",
            "columns": [
                [
                    "start_hr"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            9,
            [
                [
                    41
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "box",
            "plot",
            "for",
            "start_hr"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "Give me a box plot for the authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "box",
            "plot",
            "for",
            "the",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "Give me a box plot for the Number_Deaths",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "box",
            "plot",
            "for",
            "the",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "race_track",
        "question": "Give the box plot for Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "box",
            "plot",
            "for",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show a box plot for total_value_purchased",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show a box plot for Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "provide the box plot for Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "box",
            "plot",
            "for",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "store_product",
        "question": "Give the box plot for dpi",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "product",
            "columns": [
                [
                    "dpi"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "box",
            "plot",
            "for",
            "dpi"
        ]
    },
    {
        "db_id": "music_1",
        "question": "show a box plot for resolution",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "resolution"
        ]
    },
    {
        "db_id": "farm",
        "question": "Give me a box plot for Working_Horses",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "farm",
            "columns": [
                [
                    "Working_Horses"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "a",
            "box",
            "plot",
            "for",
            "Working_Horses"
        ]
    },
    {
        "db_id": "city_record",
        "question": "show me the box plot for the Dec",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "temperature",
            "columns": [
                [
                    "Dec"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    24
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "the",
            "Dec"
        ]
    },
    {
        "db_id": "flight_2",
        "question": "provide the box plot for FlightNo",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "flights",
            "columns": [
                [
                    "FlightNo"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            2,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "box",
            "plot",
            "for",
            "FlightNo"
        ]
    },
    {
        "db_id": "manufactory_1",
        "question": "show a box plot for the Manufacturer",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Products",
            "columns": [
                [
                    "Manufacturer"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "box",
            "plot",
            "for",
            "the",
            "Manufacturer"
        ]
    },
    {
        "db_id": "network_2",
        "question": "show me the box plot for the age",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Person",
            "columns": [
                [
                    "age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "box",
            "plot",
            "for",
            "the",
            "age"
        ]
    },
    {
        "db_id": "scientist_1",
        "question": "Give the box plot for SSN",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "box"
            ],
            "table": "Scientists",
            "columns": [
                [
                    "SSN"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                1
            ],
            0,
            [
                [
                    1
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "box",
            "plot",
            "for",
            "SSN"
        ]
    },
    {
        "db_id": "college_2",
        "question": "provide the desnity plot for the tot_cred",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "student",
            "columns": [
                [
                    "tot_cred"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            6,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "provide",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "tot_cred"
        ]
    },
    {
        "db_id": "icfp_1",
        "question": "show a desnity plot for authOrder",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Authorship",
            "columns": [
                [
                    "authOrder"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            3,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "authOrder"
        ]
    },
    {
        "db_id": "storm_record",
        "question": "show a desnity plot for the Number_Deaths",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "storm",
            "columns": [
                [
                    "Number_Deaths"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            0,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "Number_Deaths"
        ]
    },
    {
        "db_id": "race_track",
        "question": "show me the desnity plot for Seating",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "track",
            "columns": [
                [
                    "Seating"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "Seating"
        ]
    },
    {
        "db_id": "department_store",
        "question": "show me the desnity plot for the total_value_purchased",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Product_Suppliers",
            "columns": [
                [
                    "total_value_purchased"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            12,
            [
                [
                    51
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "total_value_purchased"
        ]
    },
    {
        "db_id": "insurance_fnol",
        "question": "show a desnity plot for the Settlement_Amount",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "Settlements",
            "columns": [
                [
                    "Settlement_Amount"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            6,
            [
                [
                    22
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "the",
            "Settlement_Amount"
        ]
    },
    {
        "db_id": "decoration_competition",
        "question": "Give the desnity plot for the Rank_in_Round",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "round",
            "columns": [
                [
                    "Rank_in_Round"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Rank_in_Round"
        ]
    },
    {
        "db_id": "store_product",
        "question": "show me the desnity plot for the Area_size",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "store",
            "columns": [
                [
                    "Area_size"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "the",
            "Area_size"
        ]
    },
    {
        "db_id": "music_1",
        "question": "show me the desnity plot for resolution",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "song",
            "columns": [
                [
                    "resolution"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            3,
            [
                [
                    21
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "me",
            "the",
            "desnity",
            "plot",
            "for",
            "resolution"
        ]
    },
    {
        "db_id": "farm",
        "question": "show a desnity plot for Sheep_and_Goats",
        "function": {
            "main_kind": "plot",
            "sub_kinds": [
                "kde"
            ],
            "table": "farm",
            "columns": [
                [
                    "Sheep_and_Goats"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            1,
            [
                2
            ],
            1,
            [
                [
                    16
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "show",
            "a",
            "desnity",
            "plot",
            "for",
            "Sheep_and_Goats"
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "department",
            "columns": [
                [
                    "Creation",
                    "Name",
                    "Budget_in_Billions"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3,
                    2,
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "creation",
            "year",
            ",",
            "name",
            "and",
            "budget",
            "of",
            "each",
            "department",
            "."
        ]
    },
    {
        "db_id": "farm",
        "question": "List the total number of horses on farms in ascending order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "farm",
            "columns": [
                [
                    "Total_Horses"
                ],
                [
                    "Total_Horses"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "total",
            "number",
            "of",
            "horses",
            "on",
            "farms",
            "in",
            "ascending",
            "order",
            "."
        ]
    },
    {
        "db_id": "farm",
        "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "farm_competition",
            "columns": [
                [
                    "Hosts"
                ],
                [
                    "Theme"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Theme",
                    "!=",
                    "Aliens"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    21
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Aliens"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "hosts",
            "of",
            "competitions",
            "whose",
            "theme",
            "is",
            "not",
            "``",
            "Aliens",
            "''",
            "?"
        ]
    },
    {
        "db_id": "farm",
        "question": "What are the themes of farm competitions sorted by year in ascending order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "farm_competition",
            "columns": [
                [
                    "Theme"
                ],
                [
                    "Year"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    19
                ],
                [
                    18
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "themes",
            "of",
            "farm",
            "competitions",
            "sorted",
            "by",
            "year",
            "in",
            "ascending",
            "order",
            "?"
        ]
    },
    {
        "db_id": "farm",
        "question": "List official names of cities in descending order of population.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "city",
            "columns": [
                [
                    "Official_Name"
                ],
                [
                    "Population"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    2
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "official",
            "names",
            "of",
            "cities",
            "in",
            "descending",
            "order",
            "of",
            "population",
            "."
        ]
    },
    {
        "db_id": "farm",
        "question": "Show the census ranking of cities whose status are not \"Village\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "city",
            "columns": [
                [
                    "Census_Ranking"
                ],
                [
                    "Status"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Status",
                    "!=",
                    "Village"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Village"
                ]
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "census",
            "ranking",
            "of",
            "cities",
            "whose",
            "status",
            "are",
            "not",
            "``",
            "Village",
            "''",
            "."
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "List the id of students who attended some courses?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student_Course_Attendance",
            "columns": [
                [
                    "student_id"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            6,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "id",
            "of",
            "students",
            "who",
            "attended",
            "some",
            "courses",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "Find id of candidates whose assessment code is \"Pass\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Candidate_Assessments",
            "columns": [
                [
                    "candidate_id"
                ],
                [
                    "asessment_outcome_code"
                ]
            ],
            "extra_param": [
                [],
                [
                    "asessment_outcome_code",
                    "=",
                    "Pass"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    35
                ],
                [
                    38
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Pass"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "id",
            "of",
            "candidates",
            "whose",
            "assessment",
            "code",
            "is",
            "``",
            "Pass",
            "''",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "What are the id of students who registered course 301?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student_Course_Attendance",
            "columns": [
                [
                    "student_id"
                ],
                [
                    "course_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "course_id",
                    "=",
                    301.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            6,
            [
                [
                    30
                ],
                [
                    31
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    301.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "id",
            "of",
            "students",
            "who",
            "registered",
            "course",
            "301",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "List the names of courses in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "Courses",
            "columns": [
                [
                    "course_name"
                ],
                [
                    "course_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            3,
            [
                [
                    19
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "names",
            "of",
            "courses",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "student_assessment",
        "question": "List the first names of people in alphabetical order?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "People",
            "columns": [
                [
                    "first_name"
                ],
                [
                    "first_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "first",
            "names",
            "of",
            "people",
            "in",
            "alphabetical",
            "order",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "Give me the dates when the max temperature was higher than 85.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "weather",
            "columns": [
                [
                    "date"
                ],
                [
                    "max_temperature_f"
                ]
            ],
            "extra_param": [
                [],
                [
                    "max_temperature_f",
                    ">",
                    85.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    23
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    85.0
                ]
            ]
        ],
        "question_tokens": [
            "Give",
            "me",
            "the",
            "dates",
            "when",
            "the",
            "max",
            "temperature",
            "was",
            "higher",
            "than",
            "85",
            "."
        ]
    },
    {
        "db_id": "bike_1",
        "question": "What are the names of stations that have latitude lower than 37.5?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "station",
            "columns": [
                [
                    "name"
                ],
                [
                    "lat"
                ]
            ],
            "extra_param": [
                [],
                [
                    "lat",
                    "<",
                    37.5
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    37.5
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "stations",
            "that",
            "have",
            "latitude",
            "lower",
            "than",
            "37.5",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "When and in what zip code did max temperature reach 80?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "weather",
            "columns": [
                [
                    "date",
                    "zip_code"
                ],
                [
                    "max_temperature_f"
                ]
            ],
            "extra_param": [
                [],
                [
                    "max_temperature_f",
                    ">=",
                    80.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    23,
                    46
                ],
                [
                    24
                ]
            ],
            [
                [],
                [
                    1,
                    3,
                    80.0
                ]
            ]
        ],
        "question_tokens": [
            "When",
            "and",
            "in",
            "what",
            "zip",
            "code",
            "did",
            "max",
            "temperature",
            "reach",
            "80",
            "?"
        ]
    },
    {
        "db_id": "bike_1",
        "question": "List all the distinct stations from which a trip of duration below 100 started.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "trip",
            "columns": [
                [
                    "start_station_name"
                ],
                [
                    "duration"
                ]
            ],
            "extra_param": [
                [],
                [
                    "duration",
                    "<",
                    100.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    15
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    2,
                    100.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "all",
            "the",
            "distinct",
            "stations",
            "from",
            "which",
            "a",
            "trip",
            "of",
            "duration",
            "below",
            "100",
            "started",
            "."
        ]
    },
    {
        "db_id": "book_2",
        "question": "List the writers of the books in ascending alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "book",
            "columns": [
                [
                    "Writer"
                ],
                [
                    "Writer"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "writers",
            "of",
            "the",
            "books",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "book_2",
        "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "book",
            "columns": [
                [
                    "Title"
                ],
                [
                    "Writer"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Writer",
                    "!=",
                    "Elaine Lee"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    7
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Elaine Lee"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "titles",
            "of",
            "the",
            "books",
            "whose",
            "writer",
            "is",
            "not",
            "``",
            "Elaine",
            "Lee",
            "''",
            "?"
        ]
    },
    {
        "db_id": "book_2",
        "question": "What are the dates of publications in descending order of price?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "publication",
            "columns": [
                [
                    "Publication_Date"
                ],
                [
                    "Price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    4
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "dates",
            "of",
            "publications",
            "in",
            "descending",
            "order",
            "of",
            "price",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of actors in ascending alphabetical order.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "actor",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    9
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "of",
            "actors",
            "in",
            "ascending",
            "alphabetical",
            "order",
            "."
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the characters and duration of actors?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "actor",
            "columns": [
                [
                    "Character",
                    "Duration"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    11,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "characters",
            "and",
            "duration",
            "of",
            "actors",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of actors whose age is not 20.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "actor",
            "columns": [
                [
                    "Name"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "age",
                    "!=",
                    20.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    20.0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "name",
            "of",
            "actors",
            "whose",
            "age",
            "is",
            "not",
            "20",
            "."
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the characters of actors in descending order of age?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "actor",
            "columns": [
                [
                    "Character"
                ],
                [
                    "age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "desc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    11
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    1
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "characters",
            "of",
            "actors",
            "in",
            "descending",
            "order",
            "of",
            "age",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "musical",
            "columns": [
                [
                    "Name"
                ],
                [
                    "Nominee"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Nominee",
                    "=",
                    "Bob Fosse"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Bob Fosse"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "musicals",
            "with",
            "nominee",
            "``",
            "Bob",
            "Fosse",
            "''",
            "?"
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "musical",
            "columns": [
                [
                    "Nominee"
                ],
                [
                    "Award"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Award",
                    "!=",
                    "Tony Award"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    6
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    5,
                    "Tony Award"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "distinct",
            "nominees",
            "of",
            "the",
            "musicals",
            "with",
            "the",
            "award",
            "that",
            "is",
            "not",
            "``",
            "Tony",
            "Award",
            "''",
            "?"
        ]
    },
    {
        "db_id": "twitter_1",
        "question": "Find the emails of the user named \"Mary\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "user_profiles",
            "columns": [
                [
                    "email"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Mary"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    9
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Mary"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "emails",
            "of",
            "the",
            "user",
            "named",
            "``",
            "Mary",
            "''",
            "."
        ]
    },
    {
        "db_id": "twitter_1",
        "question": "Find the name and email of the users who have more than 1000 followers.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "user_profiles",
            "columns": [
                [
                    "name",
                    "email"
                ],
                [
                    "followers"
                ]
            ],
            "extra_param": [
                [],
                [
                    "followers",
                    ">",
                    1000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    8,
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    1000.0
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "name",
            "and",
            "email",
            "of",
            "the",
            "users",
            "who",
            "have",
            "more",
            "than",
            "1000",
            "followers",
            "."
        ]
    },
    {
        "db_id": "twitter_1",
        "question": "List the text of all tweets in the order of date.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "tweets",
            "columns": [
                [
                    "text"
                ],
                [
                    "createdate"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            1,
            [
                [
                    5
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "text",
            "of",
            "all",
            "tweets",
            "in",
            "the",
            "order",
            "of",
            "date",
            "."
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "What are all the catalog entry names?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            3,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "catalog",
            "entry",
            "names",
            "?"
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "Find the attribute data type for the attribute named \"Green\".",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Attribute_Definitions",
            "columns": [
                [
                    "attribute_data_type"
                ],
                [
                    "attribute_name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "attribute_name",
                    "=",
                    "Green"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Green"
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "the",
            "attribute",
            "data",
            "type",
            "for",
            "the",
            "attribute",
            "named",
            "``",
            "Green",
            "''",
            "."
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name",
                    "capacity"
                ],
                [
                    "price_in_dollars"
                ]
            ],
            "extra_param": [
                [],
                [
                    "price_in_dollars",
                    ">",
                    700.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17,
                    22
                ],
                [
                    19
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    700.0
                ]
            ]
        ],
        "question_tokens": [
            "Which",
            "catalog",
            "contents",
            "has",
            "price",
            "above",
            "700",
            "dollars",
            "?",
            "Show",
            "their",
            "catalog",
            "entry",
            "names",
            "and",
            "capacities",
            "."
        ]
    },
    {
        "db_id": "product_catalog",
        "question": "What are the catalog entry names of the products with next entry ID above 8?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Catalog_Contents",
            "columns": [
                [
                    "catalog_entry_name"
                ],
                [
                    "next_entry_id"
                ]
            ],
            "extra_param": [
                [],
                [
                    "next_entry_id",
                    ">",
                    8.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            3,
            [
                [
                    17
                ],
                [
                    16
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    8.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "catalog",
            "entry",
            "names",
            "of",
            "the",
            "products",
            "with",
            "next",
            "entry",
            "ID",
            "above",
            "8",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What are the names and distances for all airplanes?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "name",
                    "distance"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    10,
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "distances",
            "for",
            "all",
            "airplanes",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What are the ids of all aircrafts that can cover a distance of more than 1000?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "aid"
                ],
                [
                    "distance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "distance",
                    ">",
                    1000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    9
                ],
                [
                    11
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    1000.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "ids",
            "of",
            "all",
            "aircrafts",
            "that",
            "can",
            "cover",
            "a",
            "distance",
            "of",
            "more",
            "than",
            "1000",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the name and distance for the aircraft that has an id of 12?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "name",
                    "distance"
                ],
                [
                    "aid"
                ]
            ],
            "extra_param": [
                [],
                [
                    "aid",
                    "=",
                    12.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            1,
            [
                [
                    10,
                    11
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    12.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "distance",
            "for",
            "the",
            "aircraft",
            "that",
            "has",
            "an",
            "id",
            "of",
            "12",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the name and salary of all employees in order of salary?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "employee",
            "columns": [
                [
                    "name",
                    "salary"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    13,
                    14
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "salary",
            "of",
            "all",
            "employees",
            "in",
            "order",
            "of",
            "salary",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the id of every employee who has at least a salary of  100000?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "eid"
                ],
                [
                    "salary"
                ]
            ],
            "extra_param": [
                [],
                [
                    "salary",
                    ">",
                    100000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12
                ],
                [
                    14
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    100000.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "id",
            "of",
            "every",
            "employee",
            "who",
            "has",
            "at",
            "least",
            "a",
            "salary",
            "of",
            "100000",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the name and salary of the employee with the id 242518965?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "name",
                    "salary"
                ],
                [
                    "eid"
                ]
            ],
            "extra_param": [
                [],
                [
                    "eid",
                    "=",
                    242518965.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    13,
                    14
                ],
                [
                    12
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    242518965.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "name",
            "and",
            "salary",
            "of",
            "the",
            "employee",
            "with",
            "the",
            "id",
            "242518965",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the id and salary of the employee named Mark Young?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "employee",
            "columns": [
                [
                    "eid",
                    "salary"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Mark Young"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12,
                    14
                ],
                [
                    13
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Mark Young"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "id",
            "and",
            "salary",
            "of",
            "the",
            "employee",
            "named",
            "Mark",
            "Young",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "flight",
            "columns": [
                [
                    "flno",
                    "origin",
                    "destination"
                ],
                [
                    "origin"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            0,
            [
                [
                    1,
                    2,
                    3
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "flight",
            "number",
            ",",
            "origin",
            ",",
            "and",
            "destination",
            "for",
            "all",
            "flights",
            "in",
            "alphabetical",
            "order",
            "by",
            "departure",
            "cities",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What are the numbers of all flights coming from Los Angeles?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "flno"
                ],
                [
                    "origin"
                ]
            ],
            "extra_param": [
                [],
                [
                    "origin",
                    "=",
                    "Los Angeles"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Los Angeles"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "numbers",
            "of",
            "all",
            "flights",
            "coming",
            "from",
            "Los",
            "Angeles",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What are the origins of all flights that are headed to Honolulu?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "origin"
                ],
                [
                    "destination"
                ]
            ],
            "extra_param": [
                [],
                [
                    "destination",
                    "=",
                    "Honolulu"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    3
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Honolulu"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "origins",
            "of",
            "all",
            "flights",
            "that",
            "are",
            "headed",
            "to",
            "Honolulu",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What are the numbers of all flights that can cover a distance of more than 2000?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "flno"
                ],
                [
                    "distance"
                ]
            ],
            "extra_param": [
                [],
                [
                    "distance",
                    ">",
                    2000.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    4
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    2000.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "numbers",
            "of",
            "all",
            "flights",
            "that",
            "can",
            "cover",
            "a",
            "distance",
            "of",
            "more",
            "than",
            "2000",
            "?"
        ]
    },
    {
        "db_id": "flight_1",
        "question": "What is the origin and destination for all flights whose price is higher than 300?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "flight",
            "columns": [
                [
                    "origin",
                    "destination"
                ],
                [
                    "price"
                ]
            ],
            "extra_param": [
                [],
                [
                    "price",
                    ">",
                    300.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2,
                    3
                ],
                [
                    7
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    300.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "origin",
            "and",
            "destination",
            "for",
            "all",
            "flights",
            "whose",
            "price",
            "is",
            "higher",
            "than",
            "300",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the different allergy types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "AllergyType"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "allergy",
            "types",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the allergies and their types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "Allergy",
                    "AllergyType"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    1,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "allergies",
            "and",
            "their",
            "types",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are all the different food allergies?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "Allergy"
                ],
                [
                    "AllergyType"
                ]
            ],
            "extra_param": [
                [],
                [
                    "AllergyType",
                    "=",
                    "food"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    1
                ],
                [
                    2
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "food"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "all",
            "the",
            "different",
            "food",
            "allergies",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What is allergy type of a cat allergy?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Allergy_Type",
            "columns": [
                [
                    "AllergyType"
                ],
                [
                    "Allergy"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Allergy",
                    "=",
                    "Cat"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            0,
            [
                [
                    2
                ],
                [
                    1
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Cat"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "allergy",
            "type",
            "of",
            "a",
            "cat",
            "allergy",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the full names of all students",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student",
            "columns": [
                [
                    "Fname",
                    "LName"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    7,
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "full",
            "names",
            "of",
            "all",
            "students"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the different majors?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student",
            "columns": [
                [
                    "Major"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "majors",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What cities do students live in?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "Student",
            "columns": [
                [
                    "city_code"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "cities",
            "do",
            "students",
            "live",
            "in",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the full names and ages for all female students whose sex is F?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "Fname",
                    "LName",
                    "Age"
                ],
                [
                    "Sex"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Sex",
                    "=",
                    "F"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    7,
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "F"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "full",
            "names",
            "and",
            "ages",
            "for",
            "all",
            "female",
            "students",
            "whose",
            "sex",
            "is",
            "F",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the student ids for all male students?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "StuID"
                ],
                [
                    "Sex"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Sex",
                    "=",
                    "M"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    5
                ],
                [
                    9
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "M"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "student",
            "ids",
            "for",
            "all",
            "male",
            "students",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "What are the student ids for students over 20 years old?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "StuID"
                ],
                [
                    "Age"
                ]
            ],
            "extra_param": [
                [],
                [
                    "Age",
                    ">",
                    20.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    5
                ],
                [
                    8
                ]
            ],
            [
                [],
                [
                    1,
                    1,
                    20.0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "student",
            "ids",
            "for",
            "students",
            "over",
            "20",
            "years",
            "old",
            "?"
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Give the city that the student whose family name is Kim lives in.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "city_code"
                ],
                [
                    "LName"
                ]
            ],
            "extra_param": [
                [],
                [
                    "LName",
                    "=",
                    "Kim"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    12
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Kim"
                ]
            ]
        ],
        "question_tokens": [
            "Give",
            "the",
            "city",
            "that",
            "the",
            "student",
            "whose",
            "family",
            "name",
            "is",
            "Kim",
            "lives",
            "in",
            "."
        ]
    },
    {
        "db_id": "allergy_1",
        "question": "Who advises student 1004?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "Student",
            "columns": [
                [
                    "Advisor"
                ],
                [
                    "StuID"
                ]
            ],
            "extra_param": [
                [],
                [
                    "StuID",
                    "=",
                    1004.0
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            2,
            [
                [
                    11
                ],
                [
                    5
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    1004.0
                ]
            ]
        ],
        "question_tokens": [
            "Who",
            "advises",
            "student",
            "1004",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What are the titles of all the albums?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            2,
            [
                [
                    6
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "titles",
            "of",
            "all",
            "the",
            "albums",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What are the titles of all the albums alphabetically ascending?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "orderby"
            ],
            "table": "albums",
            "columns": [
                [
                    "title"
                ],
                [
                    "title"
                ]
            ],
            "extra_param": [
                [],
                [
                    "order",
                    "=",
                    "asc"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                2
            ],
            2,
            [
                [
                    6
                ],
                [
                    6
                ]
            ],
            [
                [],
                [
                    2,
                    0,
                    0
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "titles",
            "of",
            "all",
            "the",
            "albums",
            "alphabetically",
            "ascending",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What are the names of all the media types?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "media_types",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            7,
            [
                [
                    48
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "the",
            "media",
            "types",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What are the different names of the genres?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "genres",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            5,
            [
                [
                    37
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "different",
            "names",
            "of",
            "the",
            "genres",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What are the names of all the playlists?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "playlists",
            "columns": [
                [
                    "name"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            10,
            [
                [
                    64
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "the",
            "playlists",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What is the composer who created the track \"Fast As a Shark\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "composer"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    54
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "composer",
            "who",
            "created",
            "the",
            "track",
            "``",
            "Fast",
            "As",
            "a",
            "Shark",
            "''",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "How many milliseconds long is Fast As a Shark?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "milliseconds"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    55
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "question_tokens": [
            "How",
            "many",
            "milliseconds",
            "long",
            "is",
            "Fast",
            "As",
            "a",
            "Shark",
            "?"
        ]
    },
    {
        "db_id": "store_1",
        "question": "What is the unit price of the tune \"Fast As a Shark\"?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select",
                "where"
            ],
            "table": "tracks",
            "columns": [
                [
                    "unit_price"
                ],
                [
                    "name"
                ]
            ],
            "extra_param": [
                [],
                [
                    "name",
                    "=",
                    "Fast As a Shark"
                ]
            ]
        },
        "python": [
            3,
            [
                0,
                1
            ],
            8,
            [
                [
                    57
                ],
                [
                    50
                ]
            ],
            [
                [],
                [
                    1,
                    0,
                    "Fast As a Shark"
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "unit",
            "price",
            "of",
            "the",
            "tune",
            "``",
            "Fast",
            "As",
            "a",
            "Shark",
            "''",
            "?"
        ]
    },
    {
        "db_id": "journal_committee",
        "question": "What are the names and ages of editors?",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "editor",
            "columns": [
                [
                    "Name",
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            1,
            [
                [
                    6,
                    7
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "are",
            "the",
            "names",
            "and",
            "ages",
            "of",
            "editors",
            "?"
        ]
    },
    {
        "db_id": "journal_committee",
        "question": "Show the distinct themes of journals.",
        "function": {
            "main_kind": "query",
            "sub_kinds": [
                "select"
            ],
            "table": "journal",
            "columns": [
                [
                    "Theme"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            3,
            [
                0
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "the",
            "distinct",
            "themes",
            "of",
            "journals",
            "."
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Calculate mean for people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "for",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the mean for the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mean",
            "for",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Find mean of the people Height",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            1,
            [
                [
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "mean",
            "of",
            "the",
            "people",
            "Height"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Calculate mean for pilot Rank",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Rank"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            1,
            [
                [
                    10
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "mean",
            "for",
            "pilot",
            "Rank"
        ]
    },
    {
        "db_id": "academic",
        "question": "Provide the mean for the publication citation_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                0
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mean",
            "for",
            "the",
            "publication",
            "citation_num"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "List the weighted mean for people Weight and Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            1,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "weighted",
            "mean",
            "for",
            "people",
            "Weight",
            "and",
            "Weight"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Provide the weighted mean for the operate_company Group_Equity_Shareholding and Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding",
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            1,
            [
                [
                    12,
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "weighted",
            "mean",
            "for",
            "the",
            "operate_company",
            "Group_Equity_Shareholding",
            "and",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "What is the weighted mean of the body_builder Snatch and Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch",
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            0,
            [
                [
                    3,
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "weighted",
            "mean",
            "of",
            "the",
            "body_builder",
            "Snatch",
            "and",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Find weighted mean for the aircraft Order_Year and Order_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year",
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            0,
            [
                [
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "weighted",
            "mean",
            "for",
            "the",
            "aircraft",
            "Order_Year",
            "and",
            "Order_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "Show me the weighted mean of the publication reference_num and reference_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_mean"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num",
                    "reference_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                1
            ],
            9,
            [
                [
                    28,
                    28
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "weighted",
            "mean",
            "of",
            "the",
            "publication",
            "reference_num",
            "and",
            "reference_num"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the trimmed mean for the people Height with truncated percental of 20%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "people",
            "columns": [
                [
                    "Height"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.2
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                [
                    2,
                    0,
                    0.2
                ]
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "trimmed",
            "mean",
            "for",
            "the",
            "people",
            "Height",
            "with",
            "truncated",
            "percental",
            "of",
            "20",
            "%"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Find trimmed mean for flight Altitude with trimmed percental equal to 30%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                [
                    2,
                    0,
                    0.3
                ]
            ]
        ],
        "question_tokens": [
            "Find",
            "trimmed",
            "mean",
            "for",
            "flight",
            "Altitude",
            "with",
            "trimmed",
            "percental",
            "equal",
            "to",
            "30",
            "%"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Provide the trimmed mean of the body_builder Total with truncated percental of 10%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.1
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                [
                    2,
                    0,
                    0.1
                ]
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "trimmed",
            "mean",
            "of",
            "the",
            "body_builder",
            "Total",
            "with",
            "truncated",
            "percental",
            "of",
            "10",
            "%"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Provide the trimmed mean for the aircraft Order_Year with truncated percental of 30%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.3
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                [
                    2,
                    0,
                    0.3
                ]
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "trimmed",
            "mean",
            "for",
            "the",
            "aircraft",
            "Order_Year",
            "with",
            "truncated",
            "percental",
            "of",
            "30",
            "%"
        ]
    },
    {
        "db_id": "academic",
        "question": "Calculate trimmed mean of the publication year with truncated percental of 10%",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "t_mean"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                [
                    "percent",
                    "=",
                    0.1
                ]
            ]
        },
        "python": [
            2,
            [
                2
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                [
                    2,
                    0,
                    0.1
                ]
            ]
        ],
        "question_tokens": [
            "Calculate",
            "trimmed",
            "mean",
            "of",
            "the",
            "publication",
            "year",
            "with",
            "truncated",
            "percental",
            "of",
            "10",
            "%"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the mean absolute deviation for the perpetrator Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mean",
            "absolute",
            "deviation",
            "for",
            "the",
            "perpetrator",
            "Year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "List the mean absolute deviation of the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "mean",
            "absolute",
            "deviation",
            "of",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Provide the mean absolute deviation for body_builder Snatch",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Snatch"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            0,
            [
                [
                    3
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "mean",
            "absolute",
            "deviation",
            "for",
            "body_builder",
            "Snatch"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "What is the mean absolute deviation for pilot Age",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Age"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            1,
            [
                [
                    11
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mean",
            "absolute",
            "deviation",
            "for",
            "pilot",
            "Age"
        ]
    },
    {
        "db_id": "academic",
        "question": "What is the mean absolute deviation of the publication citation_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "mean_ad"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                3
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "mean",
            "absolute",
            "deviation",
            "of",
            "the",
            "publication",
            "citation_num"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Find median of the perpetrator Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "of",
            "the",
            "perpetrator",
            "Year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "List the median for the flight Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            2,
            [
                [
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "median",
            "for",
            "the",
            "flight",
            "Velocity"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the median for body_builder Total",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "median",
            "for",
            "body_builder",
            "Total"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Find median for the pilot Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "for",
            "the",
            "pilot",
            "Join_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "Provide the median for the publication reference_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median"
            ],
            "table": "publication",
            "columns": [
                [
                    "reference_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                4
            ],
            9,
            [
                [
                    28
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "median",
            "for",
            "the",
            "publication",
            "reference_num"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Show me the weighted median for the perpetrator Year and Injured",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year",
                    "Injured"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            0,
            [
                [
                    4,
                    8
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "weighted",
            "median",
            "for",
            "the",
            "perpetrator",
            "Year",
            "and",
            "Injured"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Find weighted median of the flight Velocity and Velocity",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "flight",
            "columns": [
                [
                    "Velocity",
                    "Velocity"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            2,
            [
                [
                    17,
                    17
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "weighted",
            "median",
            "of",
            "the",
            "flight",
            "Velocity",
            "and",
            "Velocity"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "List the weighted median for the people Height and Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "people",
            "columns": [
                [
                    "Height",
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            1,
            [
                [
                    8,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "weighted",
            "median",
            "for",
            "the",
            "people",
            "Height",
            "and",
            "Weight"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "List the weighted median for the aircraft Order_Year and Order_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year",
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            0,
            [
                [
                    2,
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "weighted",
            "median",
            "for",
            "the",
            "aircraft",
            "Order_Year",
            "and",
            "Order_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "Show me the weighted median for the cite cited and citing",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "w_median"
            ],
            "table": "cite",
            "columns": [
                [
                    "cited",
                    "citing"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                5
            ],
            14,
            [
                [
                    41,
                    42
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "weighted",
            "median",
            "for",
            "the",
            "cite",
            "cited",
            "and",
            "citing"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "Find median absolute deviation for the people Weight",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "people",
            "columns": [
                [
                    "Weight"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Find",
            "median",
            "absolute",
            "deviation",
            "for",
            "the",
            "people",
            "Weight"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "What is the median absolute deviation for operate_company Group_Equity_Shareholding",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "operate_company",
            "columns": [
                [
                    "Group_Equity_Shareholding"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            1,
            [
                [
                    12
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "median",
            "absolute",
            "deviation",
            "for",
            "operate_company",
            "Group_Equity_Shareholding"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Show me the median absolute deviation for body_builder Total",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Total"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            0,
            [
                [
                    5
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "median",
            "absolute",
            "deviation",
            "for",
            "body_builder",
            "Total"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "What is the median absolute deviation for pilot Join_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "pilot",
            "columns": [
                [
                    "Join_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            1,
            [
                [
                    14
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "median",
            "absolute",
            "deviation",
            "for",
            "pilot",
            "Join_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "List the median absolute deviation of the publication year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "median_ad"
            ],
            "table": "publication",
            "columns": [
                [
                    "year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                6
            ],
            9,
            [
                [
                    30
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "median",
            "absolute",
            "deviation",
            "of",
            "the",
            "publication",
            "year"
        ]
    },
    {
        "db_id": "perpetrator",
        "question": "What is the outlier for the perpetrator Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "perpetrator",
            "columns": [
                [
                    "Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "What",
            "is",
            "the",
            "outlier",
            "for",
            "the",
            "perpetrator",
            "Year"
        ]
    },
    {
        "db_id": "flight_company",
        "question": "Show me the outlier for the flight Altitude",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "flight",
            "columns": [
                [
                    "Altitude"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            2,
            [
                [
                    18
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Show",
            "me",
            "the",
            "outlier",
            "for",
            "the",
            "flight",
            "Altitude"
        ]
    },
    {
        "db_id": "body_builder",
        "question": "Calculate outlier of the body_builder Clean_Jerk",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "body_builder",
            "columns": [
                [
                    "Clean_Jerk"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            0,
            [
                [
                    4
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Calculate",
            "outlier",
            "of",
            "the",
            "body_builder",
            "Clean_Jerk"
        ]
    },
    {
        "db_id": "pilot_record",
        "question": "Provide the outlier of the aircraft Order_Year",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "aircraft",
            "columns": [
                [
                    "Order_Year"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            0,
            [
                [
                    2
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "Provide",
            "the",
            "outlier",
            "of",
            "the",
            "aircraft",
            "Order_Year"
        ]
    },
    {
        "db_id": "academic",
        "question": "List the outlier of the publication citation_num",
        "function": {
            "main_kind": "numric",
            "sub_kinds": [
                "outlier"
            ],
            "table": "publication",
            "columns": [
                [
                    "citation_num"
                ]
            ],
            "extra_param": [
                []
            ]
        },
        "python": [
            2,
            [
                7
            ],
            9,
            [
                [
                    25
                ]
            ],
            [
                []
            ]
        ],
        "question_tokens": [
            "List",
            "the",
            "outlier",
            "of",
            "the",
            "publication",
            "citation_num"
        ]
    }
]
